
DA3_b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000050c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000590  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae4  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009f6  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000055f  00000000  00000000  00001ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  00002044  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00007c18  00000000  00000000  000020a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000101  00000000  00000000  00009cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00009dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000003fd  00000000  00000000  00009de5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	5f c0       	rjmp	.+190    	; 0xc4 <__bad_interrupt>
   6:	00 00       	nop
   8:	5d c0       	rjmp	.+186    	; 0xc4 <__bad_interrupt>
   a:	00 00       	nop
   c:	5b c0       	rjmp	.+182    	; 0xc4 <__bad_interrupt>
   e:	00 00       	nop
  10:	59 c0       	rjmp	.+178    	; 0xc4 <__bad_interrupt>
  12:	00 00       	nop
  14:	57 c0       	rjmp	.+174    	; 0xc4 <__bad_interrupt>
  16:	00 00       	nop
  18:	55 c0       	rjmp	.+170    	; 0xc4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	53 c0       	rjmp	.+166    	; 0xc4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	51 c0       	rjmp	.+162    	; 0xc4 <__bad_interrupt>
  22:	00 00       	nop
  24:	4f c0       	rjmp	.+158    	; 0xc4 <__bad_interrupt>
  26:	00 00       	nop
  28:	4d c0       	rjmp	.+154    	; 0xc4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4b c0       	rjmp	.+150    	; 0xc4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	49 c0       	rjmp	.+146    	; 0xc4 <__bad_interrupt>
  32:	00 00       	nop
  34:	47 c0       	rjmp	.+142    	; 0xc4 <__bad_interrupt>
  36:	00 00       	nop
  38:	45 c0       	rjmp	.+138    	; 0xc4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	43 c0       	rjmp	.+134    	; 0xc4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	41 c0       	rjmp	.+130    	; 0xc4 <__bad_interrupt>
  42:	00 00       	nop
  44:	3f c0       	rjmp	.+126    	; 0xc4 <__bad_interrupt>
  46:	00 00       	nop
  48:	3d c0       	rjmp	.+122    	; 0xc4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3b c0       	rjmp	.+118    	; 0xc4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	39 c0       	rjmp	.+114    	; 0xc4 <__bad_interrupt>
  52:	00 00       	nop
  54:	37 c0       	rjmp	.+110    	; 0xc4 <__bad_interrupt>
  56:	00 00       	nop
  58:	35 c0       	rjmp	.+106    	; 0xc4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	33 c0       	rjmp	.+102    	; 0xc4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	31 c0       	rjmp	.+98     	; 0xc4 <__bad_interrupt>
  62:	00 00       	nop
  64:	2f c0       	rjmp	.+94     	; 0xc4 <__bad_interrupt>
  66:	00 00       	nop
  68:	2d c0       	rjmp	.+90     	; 0xc4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2b c0       	rjmp	.+86     	; 0xc4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	29 c0       	rjmp	.+82     	; 0xc4 <__bad_interrupt>
  72:	00 00       	nop
  74:	27 c0       	rjmp	.+78     	; 0xc4 <__bad_interrupt>
  76:	00 00       	nop
  78:	25 c0       	rjmp	.+74     	; 0xc4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	23 c0       	rjmp	.+70     	; 0xc4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	21 c0       	rjmp	.+66     	; 0xc4 <__bad_interrupt>
  82:	00 00       	nop
  84:	1f c0       	rjmp	.+62     	; 0xc4 <__bad_interrupt>
  86:	00 00       	nop
  88:	1d c0       	rjmp	.+58     	; 0xc4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	1b c0       	rjmp	.+54     	; 0xc4 <__bad_interrupt>
  8e:	00 00       	nop
  90:	19 c0       	rjmp	.+50     	; 0xc4 <__bad_interrupt>
  92:	00 00       	nop
  94:	17 c0       	rjmp	.+46     	; 0xc4 <__bad_interrupt>
  96:	00 00       	nop
  98:	15 c0       	rjmp	.+42     	; 0xc4 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	13 c0       	rjmp	.+38     	; 0xc4 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	11 c0       	rjmp	.+34     	; 0xc4 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	0f c0       	rjmp	.+30     	; 0xc4 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	0d c0       	rjmp	.+26     	; 0xc4 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	0b c0       	rjmp	.+22     	; 0xc4 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	09 c0       	rjmp	.+18     	; 0xc4 <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	14 d0       	rcall	.+40     	; 0xea <main>
  c2:	22 c2       	rjmp	.+1092   	; 0x508 <_exit>

000000c4 <__bad_interrupt>:
  c4:	9d cf       	rjmp	.-198    	; 0x0 <__vectors>

000000c6 <usart_init>:
	return 0;
	
}

void usart_init(void){
	UCSR0B = (1<<TXEN0);
  c6:	88 e0       	ldi	r24, 0x08	; 8
  c8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
  cc:	86 e0       	ldi	r24, 0x06	; 6
  ce:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0L = F_CPU/16/BAUD_RATE-1;	
  d2:	87 e6       	ldi	r24, 0x67	; 103
  d4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  d8:	08 95       	ret

000000da <usart_send>:
}

void usart_send( unsigned char ch){
	while(! (UCSR0A & (1<<UDRE0)));	//wait until UDR0 is empty
  da:	e0 ec       	ldi	r30, 0xC0	; 192
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	90 81       	ld	r25, Z
  e0:	95 ff       	sbrs	r25, 5
  e2:	fd cf       	rjmp	.-6      	; 0xde <usart_send+0x4>
	UDR0 = ch;		//transmit ch
  e4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  e8:	08 95       	ret

000000ea <main>:


int main (void)
{
	//initialize the usart
	usart_init ();
  ea:	ed df       	rcall	.-38     	; 0xc6 <usart_init>
	
	ADMUX = (0<<REFS1)|	//Reference selection bits
  ec:	84 e4       	ldi	r24, 0x44	; 68
  ee:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|			//AVcc - external cap at AREF
	(0<<ADLAR)|			//Left adjust most significant bit
	(1<<MUX2)|			//Analog channel selection bits
	(0<<MUX1)|			//ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|	//	Enable ADC
  f2:	85 e8       	ldi	r24, 0x85	; 133
  f4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(0<<ADPS1)|
	(1<<ADPS0);
		
	
	while (1){
		ADCSRA |= (1<<ADSC);			//start conversion
  f8:	ca e7       	ldi	r28, 0x7A	; 122
  fa:	d0 e0       	ldi	r29, 0x00	; 0
		while((ADCSRA&(1<<ADIF))==0);	//wait for conversion to complete 
		
		ADCSRA |= (1<<ADIF);
		
		int c = ADCL;
  fc:	0f 2e       	mov	r0, r31
  fe:	f8 e7       	ldi	r31, 0x78	; 120
 100:	8f 2e       	mov	r8, r31
 102:	91 2c       	mov	r9, r1
 104:	f0 2d       	mov	r31, r0
		c = c | (ADCH<<8);
 106:	0f 2e       	mov	r0, r31
 108:	f9 e7       	ldi	r31, 0x79	; 121
 10a:	af 2e       	mov	r10, r31
 10c:	b1 2c       	mov	r11, r1
 10e:	f0 2d       	mov	r31, r0
		c = (c/1024.0)*5000/10;
		usart_send((c/100) + '0');
 110:	0f 2e       	mov	r0, r31
 112:	f4 e6       	ldi	r31, 0x64	; 100
 114:	cf 2e       	mov	r12, r31
 116:	d1 2c       	mov	r13, r1
 118:	f0 2d       	mov	r31, r0
		c = c % 100;
		usart_send((c/10) + '0');
 11a:	0f 2e       	mov	r0, r31
 11c:	fa e0       	ldi	r31, 0x0A	; 10
 11e:	ef 2e       	mov	r14, r31
 120:	f1 2c       	mov	r15, r1
 122:	f0 2d       	mov	r31, r0
	(0<<ADPS1)|
	(1<<ADPS0);
		
	
	while (1){
		ADCSRA |= (1<<ADSC);			//start conversion
 124:	88 81       	ld	r24, Y
 126:	80 64       	ori	r24, 0x40	; 64
 128:	88 83       	st	Y, r24
		while((ADCSRA&(1<<ADIF))==0);	//wait for conversion to complete 
 12a:	88 81       	ld	r24, Y
 12c:	84 ff       	sbrs	r24, 4
 12e:	fd cf       	rjmp	.-6      	; 0x12a <main+0x40>
		
		ADCSRA |= (1<<ADIF);
 130:	88 81       	ld	r24, Y
 132:	80 61       	ori	r24, 0x10	; 16
 134:	88 83       	st	Y, r24
		
		int c = ADCL;
 136:	f4 01       	movw	r30, r8
 138:	60 81       	ld	r22, Z
		c = c | (ADCH<<8);
 13a:	f5 01       	movw	r30, r10
 13c:	80 81       	ld	r24, Z
		c = (c/1024.0)*5000/10;
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	78 2b       	or	r23, r24
 142:	07 2e       	mov	r0, r23
 144:	00 0c       	add	r0, r0
 146:	88 0b       	sbc	r24, r24
 148:	99 0b       	sbc	r25, r25
 14a:	c8 d0       	rcall	.+400    	; 0x2dc <__floatsisf>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e8       	ldi	r20, 0x80	; 128
 152:	5a e3       	ldi	r21, 0x3A	; 58
 154:	4f d1       	rcall	.+670    	; 0x3f4 <__mulsf3>
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	30 e4       	ldi	r19, 0x40	; 64
 15a:	4c e9       	ldi	r20, 0x9C	; 156
 15c:	55 e4       	ldi	r21, 0x45	; 69
 15e:	4a d1       	rcall	.+660    	; 0x3f4 <__mulsf3>
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	40 e2       	ldi	r20, 0x20	; 32
 166:	51 e4       	ldi	r21, 0x41	; 65
 168:	1e d0       	rcall	.+60     	; 0x1a6 <__divsf3>
 16a:	85 d0       	rcall	.+266    	; 0x276 <__fixsfsi>
		usart_send((c/100) + '0');
 16c:	cb 01       	movw	r24, r22
 16e:	b6 01       	movw	r22, r12
 170:	a4 d1       	rcall	.+840    	; 0x4ba <__divmodhi4>
 172:	8c 01       	movw	r16, r24
 174:	80 e3       	ldi	r24, 0x30	; 48
 176:	86 0f       	add	r24, r22
 178:	b0 df       	rcall	.-160    	; 0xda <usart_send>
		c = c % 100;
		usart_send((c/10) + '0');
 17a:	c8 01       	movw	r24, r16
 17c:	b7 01       	movw	r22, r14
 17e:	9d d1       	rcall	.+826    	; 0x4ba <__divmodhi4>
 180:	18 2f       	mov	r17, r24
 182:	80 e3       	ldi	r24, 0x30	; 48
 184:	86 0f       	add	r24, r22
 186:	a9 df       	rcall	.-174    	; 0xda <usart_send>
		c = c % 10;
		usart_send((c) + '0');
 188:	80 e3       	ldi	r24, 0x30	; 48
 18a:	81 0f       	add	r24, r17
 18c:	a6 df       	rcall	.-180    	; 0xda <usart_send>
 18e:	8d e0       	ldi	r24, 0x0D	; 13
		usart_send('\r');
 190:	a4 df       	rcall	.-184    	; 0xda <usart_send>
 192:	ff ef       	ldi	r31, 0xFF	; 255
 194:	21 ee       	ldi	r18, 0xE1	; 225
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	84 e0       	ldi	r24, 0x04	; 4
 198:	f1 50       	subi	r31, 0x01	; 1
 19a:	20 40       	sbci	r18, 0x00	; 0
 19c:	80 40       	sbci	r24, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <main+0xae>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <main+0xb8>
 1a2:	00 00       	nop
 1a4:	bf cf       	rjmp	.-130    	; 0x124 <main+0x3a>

000001a6 <__divsf3>:
 1a6:	0c d0       	rcall	.+24     	; 0x1c0 <__divsf3x>
 1a8:	eb c0       	rjmp	.+470    	; 0x380 <__fp_round>
 1aa:	e3 d0       	rcall	.+454    	; 0x372 <__fp_pscB>
 1ac:	40 f0       	brcs	.+16     	; 0x1be <__divsf3+0x18>
 1ae:	da d0       	rcall	.+436    	; 0x364 <__fp_pscA>
 1b0:	30 f0       	brcs	.+12     	; 0x1be <__divsf3+0x18>
 1b2:	21 f4       	brne	.+8      	; 0x1bc <__divsf3+0x16>
 1b4:	5f 3f       	cpi	r21, 0xFF	; 255
 1b6:	19 f0       	breq	.+6      	; 0x1be <__divsf3+0x18>
 1b8:	cc c0       	rjmp	.+408    	; 0x352 <__fp_inf>
 1ba:	51 11       	cpse	r21, r1
 1bc:	15 c1       	rjmp	.+554    	; 0x3e8 <__fp_szero>
 1be:	cf c0       	rjmp	.+414    	; 0x35e <__fp_nan>

000001c0 <__divsf3x>:
 1c0:	f0 d0       	rcall	.+480    	; 0x3a2 <__fp_split3>
 1c2:	98 f3       	brcs	.-26     	; 0x1aa <__divsf3+0x4>

000001c4 <__divsf3_pse>:
 1c4:	99 23       	and	r25, r25
 1c6:	c9 f3       	breq	.-14     	; 0x1ba <__divsf3+0x14>
 1c8:	55 23       	and	r21, r21
 1ca:	b1 f3       	breq	.-20     	; 0x1b8 <__divsf3+0x12>
 1cc:	95 1b       	sub	r25, r21
 1ce:	55 0b       	sbc	r21, r21
 1d0:	bb 27       	eor	r27, r27
 1d2:	aa 27       	eor	r26, r26
 1d4:	62 17       	cp	r22, r18
 1d6:	73 07       	cpc	r23, r19
 1d8:	84 07       	cpc	r24, r20
 1da:	38 f0       	brcs	.+14     	; 0x1ea <__divsf3_pse+0x26>
 1dc:	9f 5f       	subi	r25, 0xFF	; 255
 1de:	5f 4f       	sbci	r21, 0xFF	; 255
 1e0:	22 0f       	add	r18, r18
 1e2:	33 1f       	adc	r19, r19
 1e4:	44 1f       	adc	r20, r20
 1e6:	aa 1f       	adc	r26, r26
 1e8:	a9 f3       	breq	.-22     	; 0x1d4 <__divsf3_pse+0x10>
 1ea:	33 d0       	rcall	.+102    	; 0x252 <__divsf3_pse+0x8e>
 1ec:	0e 2e       	mov	r0, r30
 1ee:	3a f0       	brmi	.+14     	; 0x1fe <__divsf3_pse+0x3a>
 1f0:	e0 e8       	ldi	r30, 0x80	; 128
 1f2:	30 d0       	rcall	.+96     	; 0x254 <__divsf3_pse+0x90>
 1f4:	91 50       	subi	r25, 0x01	; 1
 1f6:	50 40       	sbci	r21, 0x00	; 0
 1f8:	e6 95       	lsr	r30
 1fa:	00 1c       	adc	r0, r0
 1fc:	ca f7       	brpl	.-14     	; 0x1f0 <__divsf3_pse+0x2c>
 1fe:	29 d0       	rcall	.+82     	; 0x252 <__divsf3_pse+0x8e>
 200:	fe 2f       	mov	r31, r30
 202:	27 d0       	rcall	.+78     	; 0x252 <__divsf3_pse+0x8e>
 204:	66 0f       	add	r22, r22
 206:	77 1f       	adc	r23, r23
 208:	88 1f       	adc	r24, r24
 20a:	bb 1f       	adc	r27, r27
 20c:	26 17       	cp	r18, r22
 20e:	37 07       	cpc	r19, r23
 210:	48 07       	cpc	r20, r24
 212:	ab 07       	cpc	r26, r27
 214:	b0 e8       	ldi	r27, 0x80	; 128
 216:	09 f0       	breq	.+2      	; 0x21a <__divsf3_pse+0x56>
 218:	bb 0b       	sbc	r27, r27
 21a:	80 2d       	mov	r24, r0
 21c:	bf 01       	movw	r22, r30
 21e:	ff 27       	eor	r31, r31
 220:	93 58       	subi	r25, 0x83	; 131
 222:	5f 4f       	sbci	r21, 0xFF	; 255
 224:	2a f0       	brmi	.+10     	; 0x230 <__divsf3_pse+0x6c>
 226:	9e 3f       	cpi	r25, 0xFE	; 254
 228:	51 05       	cpc	r21, r1
 22a:	68 f0       	brcs	.+26     	; 0x246 <__divsf3_pse+0x82>
 22c:	92 c0       	rjmp	.+292    	; 0x352 <__fp_inf>
 22e:	dc c0       	rjmp	.+440    	; 0x3e8 <__fp_szero>
 230:	5f 3f       	cpi	r21, 0xFF	; 255
 232:	ec f3       	brlt	.-6      	; 0x22e <__divsf3_pse+0x6a>
 234:	98 3e       	cpi	r25, 0xE8	; 232
 236:	dc f3       	brlt	.-10     	; 0x22e <__divsf3_pse+0x6a>
 238:	86 95       	lsr	r24
 23a:	77 95       	ror	r23
 23c:	67 95       	ror	r22
 23e:	b7 95       	ror	r27
 240:	f7 95       	ror	r31
 242:	9f 5f       	subi	r25, 0xFF	; 255
 244:	c9 f7       	brne	.-14     	; 0x238 <__divsf3_pse+0x74>
 246:	88 0f       	add	r24, r24
 248:	91 1d       	adc	r25, r1
 24a:	96 95       	lsr	r25
 24c:	87 95       	ror	r24
 24e:	97 f9       	bld	r25, 7
 250:	08 95       	ret
 252:	e1 e0       	ldi	r30, 0x01	; 1
 254:	66 0f       	add	r22, r22
 256:	77 1f       	adc	r23, r23
 258:	88 1f       	adc	r24, r24
 25a:	bb 1f       	adc	r27, r27
 25c:	62 17       	cp	r22, r18
 25e:	73 07       	cpc	r23, r19
 260:	84 07       	cpc	r24, r20
 262:	ba 07       	cpc	r27, r26
 264:	20 f0       	brcs	.+8      	; 0x26e <__divsf3_pse+0xaa>
 266:	62 1b       	sub	r22, r18
 268:	73 0b       	sbc	r23, r19
 26a:	84 0b       	sbc	r24, r20
 26c:	ba 0b       	sbc	r27, r26
 26e:	ee 1f       	adc	r30, r30
 270:	88 f7       	brcc	.-30     	; 0x254 <__divsf3_pse+0x90>
 272:	e0 95       	com	r30
 274:	08 95       	ret

00000276 <__fixsfsi>:
 276:	04 d0       	rcall	.+8      	; 0x280 <__fixunssfsi>
 278:	68 94       	set
 27a:	b1 11       	cpse	r27, r1
 27c:	b5 c0       	rjmp	.+362    	; 0x3e8 <__fp_szero>
 27e:	08 95       	ret

00000280 <__fixunssfsi>:
 280:	98 d0       	rcall	.+304    	; 0x3b2 <__fp_splitA>
 282:	88 f0       	brcs	.+34     	; 0x2a6 <__fixunssfsi+0x26>
 284:	9f 57       	subi	r25, 0x7F	; 127
 286:	90 f0       	brcs	.+36     	; 0x2ac <__fixunssfsi+0x2c>
 288:	b9 2f       	mov	r27, r25
 28a:	99 27       	eor	r25, r25
 28c:	b7 51       	subi	r27, 0x17	; 23
 28e:	a0 f0       	brcs	.+40     	; 0x2b8 <__fixunssfsi+0x38>
 290:	d1 f0       	breq	.+52     	; 0x2c6 <__fixunssfsi+0x46>
 292:	66 0f       	add	r22, r22
 294:	77 1f       	adc	r23, r23
 296:	88 1f       	adc	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	1a f0       	brmi	.+6      	; 0x2a2 <__fixunssfsi+0x22>
 29c:	ba 95       	dec	r27
 29e:	c9 f7       	brne	.-14     	; 0x292 <__fixunssfsi+0x12>
 2a0:	12 c0       	rjmp	.+36     	; 0x2c6 <__fixunssfsi+0x46>
 2a2:	b1 30       	cpi	r27, 0x01	; 1
 2a4:	81 f0       	breq	.+32     	; 0x2c6 <__fixunssfsi+0x46>
 2a6:	9f d0       	rcall	.+318    	; 0x3e6 <__fp_zero>
 2a8:	b1 e0       	ldi	r27, 0x01	; 1
 2aa:	08 95       	ret
 2ac:	9c c0       	rjmp	.+312    	; 0x3e6 <__fp_zero>
 2ae:	67 2f       	mov	r22, r23
 2b0:	78 2f       	mov	r23, r24
 2b2:	88 27       	eor	r24, r24
 2b4:	b8 5f       	subi	r27, 0xF8	; 248
 2b6:	39 f0       	breq	.+14     	; 0x2c6 <__fixunssfsi+0x46>
 2b8:	b9 3f       	cpi	r27, 0xF9	; 249
 2ba:	cc f3       	brlt	.-14     	; 0x2ae <__fixunssfsi+0x2e>
 2bc:	86 95       	lsr	r24
 2be:	77 95       	ror	r23
 2c0:	67 95       	ror	r22
 2c2:	b3 95       	inc	r27
 2c4:	d9 f7       	brne	.-10     	; 0x2bc <__fixunssfsi+0x3c>
 2c6:	3e f4       	brtc	.+14     	; 0x2d6 <__fixunssfsi+0x56>
 2c8:	90 95       	com	r25
 2ca:	80 95       	com	r24
 2cc:	70 95       	com	r23
 2ce:	61 95       	neg	r22
 2d0:	7f 4f       	sbci	r23, 0xFF	; 255
 2d2:	8f 4f       	sbci	r24, 0xFF	; 255
 2d4:	9f 4f       	sbci	r25, 0xFF	; 255
 2d6:	08 95       	ret

000002d8 <__floatunsisf>:
 2d8:	e8 94       	clt
 2da:	09 c0       	rjmp	.+18     	; 0x2ee <__floatsisf+0x12>

000002dc <__floatsisf>:
 2dc:	97 fb       	bst	r25, 7
 2de:	3e f4       	brtc	.+14     	; 0x2ee <__floatsisf+0x12>
 2e0:	90 95       	com	r25
 2e2:	80 95       	com	r24
 2e4:	70 95       	com	r23
 2e6:	61 95       	neg	r22
 2e8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ea:	8f 4f       	sbci	r24, 0xFF	; 255
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	99 23       	and	r25, r25
 2f0:	a9 f0       	breq	.+42     	; 0x31c <__floatsisf+0x40>
 2f2:	f9 2f       	mov	r31, r25
 2f4:	96 e9       	ldi	r25, 0x96	; 150
 2f6:	bb 27       	eor	r27, r27
 2f8:	93 95       	inc	r25
 2fa:	f6 95       	lsr	r31
 2fc:	87 95       	ror	r24
 2fe:	77 95       	ror	r23
 300:	67 95       	ror	r22
 302:	b7 95       	ror	r27
 304:	f1 11       	cpse	r31, r1
 306:	f8 cf       	rjmp	.-16     	; 0x2f8 <__floatsisf+0x1c>
 308:	fa f4       	brpl	.+62     	; 0x348 <__floatsisf+0x6c>
 30a:	bb 0f       	add	r27, r27
 30c:	11 f4       	brne	.+4      	; 0x312 <__floatsisf+0x36>
 30e:	60 ff       	sbrs	r22, 0
 310:	1b c0       	rjmp	.+54     	; 0x348 <__floatsisf+0x6c>
 312:	6f 5f       	subi	r22, 0xFF	; 255
 314:	7f 4f       	sbci	r23, 0xFF	; 255
 316:	8f 4f       	sbci	r24, 0xFF	; 255
 318:	9f 4f       	sbci	r25, 0xFF	; 255
 31a:	16 c0       	rjmp	.+44     	; 0x348 <__floatsisf+0x6c>
 31c:	88 23       	and	r24, r24
 31e:	11 f0       	breq	.+4      	; 0x324 <__floatsisf+0x48>
 320:	96 e9       	ldi	r25, 0x96	; 150
 322:	11 c0       	rjmp	.+34     	; 0x346 <__floatsisf+0x6a>
 324:	77 23       	and	r23, r23
 326:	21 f0       	breq	.+8      	; 0x330 <__floatsisf+0x54>
 328:	9e e8       	ldi	r25, 0x8E	; 142
 32a:	87 2f       	mov	r24, r23
 32c:	76 2f       	mov	r23, r22
 32e:	05 c0       	rjmp	.+10     	; 0x33a <__floatsisf+0x5e>
 330:	66 23       	and	r22, r22
 332:	71 f0       	breq	.+28     	; 0x350 <__floatsisf+0x74>
 334:	96 e8       	ldi	r25, 0x86	; 134
 336:	86 2f       	mov	r24, r22
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	60 e0       	ldi	r22, 0x00	; 0
 33c:	2a f0       	brmi	.+10     	; 0x348 <__floatsisf+0x6c>
 33e:	9a 95       	dec	r25
 340:	66 0f       	add	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	da f7       	brpl	.-10     	; 0x33e <__floatsisf+0x62>
 348:	88 0f       	add	r24, r24
 34a:	96 95       	lsr	r25
 34c:	87 95       	ror	r24
 34e:	97 f9       	bld	r25, 7
 350:	08 95       	ret

00000352 <__fp_inf>:
 352:	97 f9       	bld	r25, 7
 354:	9f 67       	ori	r25, 0x7F	; 127
 356:	80 e8       	ldi	r24, 0x80	; 128
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	08 95       	ret

0000035e <__fp_nan>:
 35e:	9f ef       	ldi	r25, 0xFF	; 255
 360:	80 ec       	ldi	r24, 0xC0	; 192
 362:	08 95       	ret

00000364 <__fp_pscA>:
 364:	00 24       	eor	r0, r0
 366:	0a 94       	dec	r0
 368:	16 16       	cp	r1, r22
 36a:	17 06       	cpc	r1, r23
 36c:	18 06       	cpc	r1, r24
 36e:	09 06       	cpc	r0, r25
 370:	08 95       	ret

00000372 <__fp_pscB>:
 372:	00 24       	eor	r0, r0
 374:	0a 94       	dec	r0
 376:	12 16       	cp	r1, r18
 378:	13 06       	cpc	r1, r19
 37a:	14 06       	cpc	r1, r20
 37c:	05 06       	cpc	r0, r21
 37e:	08 95       	ret

00000380 <__fp_round>:
 380:	09 2e       	mov	r0, r25
 382:	03 94       	inc	r0
 384:	00 0c       	add	r0, r0
 386:	11 f4       	brne	.+4      	; 0x38c <__fp_round+0xc>
 388:	88 23       	and	r24, r24
 38a:	52 f0       	brmi	.+20     	; 0x3a0 <__fp_round+0x20>
 38c:	bb 0f       	add	r27, r27
 38e:	40 f4       	brcc	.+16     	; 0x3a0 <__fp_round+0x20>
 390:	bf 2b       	or	r27, r31
 392:	11 f4       	brne	.+4      	; 0x398 <__fp_round+0x18>
 394:	60 ff       	sbrs	r22, 0
 396:	04 c0       	rjmp	.+8      	; 0x3a0 <__fp_round+0x20>
 398:	6f 5f       	subi	r22, 0xFF	; 255
 39a:	7f 4f       	sbci	r23, 0xFF	; 255
 39c:	8f 4f       	sbci	r24, 0xFF	; 255
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	08 95       	ret

000003a2 <__fp_split3>:
 3a2:	57 fd       	sbrc	r21, 7
 3a4:	90 58       	subi	r25, 0x80	; 128
 3a6:	44 0f       	add	r20, r20
 3a8:	55 1f       	adc	r21, r21
 3aa:	59 f0       	breq	.+22     	; 0x3c2 <__fp_splitA+0x10>
 3ac:	5f 3f       	cpi	r21, 0xFF	; 255
 3ae:	71 f0       	breq	.+28     	; 0x3cc <__fp_splitA+0x1a>
 3b0:	47 95       	ror	r20

000003b2 <__fp_splitA>:
 3b2:	88 0f       	add	r24, r24
 3b4:	97 fb       	bst	r25, 7
 3b6:	99 1f       	adc	r25, r25
 3b8:	61 f0       	breq	.+24     	; 0x3d2 <__fp_splitA+0x20>
 3ba:	9f 3f       	cpi	r25, 0xFF	; 255
 3bc:	79 f0       	breq	.+30     	; 0x3dc <__fp_splitA+0x2a>
 3be:	87 95       	ror	r24
 3c0:	08 95       	ret
 3c2:	12 16       	cp	r1, r18
 3c4:	13 06       	cpc	r1, r19
 3c6:	14 06       	cpc	r1, r20
 3c8:	55 1f       	adc	r21, r21
 3ca:	f2 cf       	rjmp	.-28     	; 0x3b0 <__fp_split3+0xe>
 3cc:	46 95       	lsr	r20
 3ce:	f1 df       	rcall	.-30     	; 0x3b2 <__fp_splitA>
 3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <__fp_splitA+0x30>
 3d2:	16 16       	cp	r1, r22
 3d4:	17 06       	cpc	r1, r23
 3d6:	18 06       	cpc	r1, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	f1 cf       	rjmp	.-30     	; 0x3be <__fp_splitA+0xc>
 3dc:	86 95       	lsr	r24
 3de:	71 05       	cpc	r23, r1
 3e0:	61 05       	cpc	r22, r1
 3e2:	08 94       	sec
 3e4:	08 95       	ret

000003e6 <__fp_zero>:
 3e6:	e8 94       	clt

000003e8 <__fp_szero>:
 3e8:	bb 27       	eor	r27, r27
 3ea:	66 27       	eor	r22, r22
 3ec:	77 27       	eor	r23, r23
 3ee:	cb 01       	movw	r24, r22
 3f0:	97 f9       	bld	r25, 7
 3f2:	08 95       	ret

000003f4 <__mulsf3>:
 3f4:	0b d0       	rcall	.+22     	; 0x40c <__mulsf3x>
 3f6:	c4 cf       	rjmp	.-120    	; 0x380 <__fp_round>
 3f8:	b5 df       	rcall	.-150    	; 0x364 <__fp_pscA>
 3fa:	28 f0       	brcs	.+10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fc:	ba df       	rcall	.-140    	; 0x372 <__fp_pscB>
 3fe:	18 f0       	brcs	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	95 23       	and	r25, r21
 402:	09 f0       	breq	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	a6 cf       	rjmp	.-180    	; 0x352 <__fp_inf>
 406:	ab cf       	rjmp	.-170    	; 0x35e <__fp_nan>
 408:	11 24       	eor	r1, r1
 40a:	ee cf       	rjmp	.-36     	; 0x3e8 <__fp_szero>

0000040c <__mulsf3x>:
 40c:	ca df       	rcall	.-108    	; 0x3a2 <__fp_split3>
 40e:	a0 f3       	brcs	.-24     	; 0x3f8 <__mulsf3+0x4>

00000410 <__mulsf3_pse>:
 410:	95 9f       	mul	r25, r21
 412:	d1 f3       	breq	.-12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 414:	95 0f       	add	r25, r21
 416:	50 e0       	ldi	r21, 0x00	; 0
 418:	55 1f       	adc	r21, r21
 41a:	62 9f       	mul	r22, r18
 41c:	f0 01       	movw	r30, r0
 41e:	72 9f       	mul	r23, r18
 420:	bb 27       	eor	r27, r27
 422:	f0 0d       	add	r31, r0
 424:	b1 1d       	adc	r27, r1
 426:	63 9f       	mul	r22, r19
 428:	aa 27       	eor	r26, r26
 42a:	f0 0d       	add	r31, r0
 42c:	b1 1d       	adc	r27, r1
 42e:	aa 1f       	adc	r26, r26
 430:	64 9f       	mul	r22, r20
 432:	66 27       	eor	r22, r22
 434:	b0 0d       	add	r27, r0
 436:	a1 1d       	adc	r26, r1
 438:	66 1f       	adc	r22, r22
 43a:	82 9f       	mul	r24, r18
 43c:	22 27       	eor	r18, r18
 43e:	b0 0d       	add	r27, r0
 440:	a1 1d       	adc	r26, r1
 442:	62 1f       	adc	r22, r18
 444:	73 9f       	mul	r23, r19
 446:	b0 0d       	add	r27, r0
 448:	a1 1d       	adc	r26, r1
 44a:	62 1f       	adc	r22, r18
 44c:	83 9f       	mul	r24, r19
 44e:	a0 0d       	add	r26, r0
 450:	61 1d       	adc	r22, r1
 452:	22 1f       	adc	r18, r18
 454:	74 9f       	mul	r23, r20
 456:	33 27       	eor	r19, r19
 458:	a0 0d       	add	r26, r0
 45a:	61 1d       	adc	r22, r1
 45c:	23 1f       	adc	r18, r19
 45e:	84 9f       	mul	r24, r20
 460:	60 0d       	add	r22, r0
 462:	21 1d       	adc	r18, r1
 464:	82 2f       	mov	r24, r18
 466:	76 2f       	mov	r23, r22
 468:	6a 2f       	mov	r22, r26
 46a:	11 24       	eor	r1, r1
 46c:	9f 57       	subi	r25, 0x7F	; 127
 46e:	50 40       	sbci	r21, 0x00	; 0
 470:	8a f0       	brmi	.+34     	; 0x494 <__mulsf3_pse+0x84>
 472:	e1 f0       	breq	.+56     	; 0x4ac <__mulsf3_pse+0x9c>
 474:	88 23       	and	r24, r24
 476:	4a f0       	brmi	.+18     	; 0x48a <__mulsf3_pse+0x7a>
 478:	ee 0f       	add	r30, r30
 47a:	ff 1f       	adc	r31, r31
 47c:	bb 1f       	adc	r27, r27
 47e:	66 1f       	adc	r22, r22
 480:	77 1f       	adc	r23, r23
 482:	88 1f       	adc	r24, r24
 484:	91 50       	subi	r25, 0x01	; 1
 486:	50 40       	sbci	r21, 0x00	; 0
 488:	a9 f7       	brne	.-22     	; 0x474 <__mulsf3_pse+0x64>
 48a:	9e 3f       	cpi	r25, 0xFE	; 254
 48c:	51 05       	cpc	r21, r1
 48e:	70 f0       	brcs	.+28     	; 0x4ac <__mulsf3_pse+0x9c>
 490:	60 cf       	rjmp	.-320    	; 0x352 <__fp_inf>
 492:	aa cf       	rjmp	.-172    	; 0x3e8 <__fp_szero>
 494:	5f 3f       	cpi	r21, 0xFF	; 255
 496:	ec f3       	brlt	.-6      	; 0x492 <__mulsf3_pse+0x82>
 498:	98 3e       	cpi	r25, 0xE8	; 232
 49a:	dc f3       	brlt	.-10     	; 0x492 <__mulsf3_pse+0x82>
 49c:	86 95       	lsr	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f7 95       	ror	r31
 4a6:	e7 95       	ror	r30
 4a8:	9f 5f       	subi	r25, 0xFF	; 255
 4aa:	c1 f7       	brne	.-16     	; 0x49c <__mulsf3_pse+0x8c>
 4ac:	fe 2b       	or	r31, r30
 4ae:	88 0f       	add	r24, r24
 4b0:	91 1d       	adc	r25, r1
 4b2:	96 95       	lsr	r25
 4b4:	87 95       	ror	r24
 4b6:	97 f9       	bld	r25, 7
 4b8:	08 95       	ret

000004ba <__divmodhi4>:
 4ba:	97 fb       	bst	r25, 7
 4bc:	07 2e       	mov	r0, r23
 4be:	16 f4       	brtc	.+4      	; 0x4c4 <__divmodhi4+0xa>
 4c0:	00 94       	com	r0
 4c2:	06 d0       	rcall	.+12     	; 0x4d0 <__divmodhi4_neg1>
 4c4:	77 fd       	sbrc	r23, 7
 4c6:	08 d0       	rcall	.+16     	; 0x4d8 <__divmodhi4_neg2>
 4c8:	0b d0       	rcall	.+22     	; 0x4e0 <__udivmodhi4>
 4ca:	07 fc       	sbrc	r0, 7
 4cc:	05 d0       	rcall	.+10     	; 0x4d8 <__divmodhi4_neg2>
 4ce:	3e f4       	brtc	.+14     	; 0x4de <__divmodhi4_exit>

000004d0 <__divmodhi4_neg1>:
 4d0:	90 95       	com	r25
 4d2:	81 95       	neg	r24
 4d4:	9f 4f       	sbci	r25, 0xFF	; 255
 4d6:	08 95       	ret

000004d8 <__divmodhi4_neg2>:
 4d8:	70 95       	com	r23
 4da:	61 95       	neg	r22
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255

000004de <__divmodhi4_exit>:
 4de:	08 95       	ret

000004e0 <__udivmodhi4>:
 4e0:	aa 1b       	sub	r26, r26
 4e2:	bb 1b       	sub	r27, r27
 4e4:	51 e1       	ldi	r21, 0x11	; 17
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <__udivmodhi4_ep>

000004e8 <__udivmodhi4_loop>:
 4e8:	aa 1f       	adc	r26, r26
 4ea:	bb 1f       	adc	r27, r27
 4ec:	a6 17       	cp	r26, r22
 4ee:	b7 07       	cpc	r27, r23
 4f0:	10 f0       	brcs	.+4      	; 0x4f6 <__udivmodhi4_ep>
 4f2:	a6 1b       	sub	r26, r22
 4f4:	b7 0b       	sbc	r27, r23

000004f6 <__udivmodhi4_ep>:
 4f6:	88 1f       	adc	r24, r24
 4f8:	99 1f       	adc	r25, r25
 4fa:	5a 95       	dec	r21
 4fc:	a9 f7       	brne	.-22     	; 0x4e8 <__udivmodhi4_loop>
 4fe:	80 95       	com	r24
 500:	90 95       	com	r25
 502:	bc 01       	movw	r22, r24
 504:	cd 01       	movw	r24, r26
 506:	08 95       	ret

00000508 <_exit>:
 508:	f8 94       	cli

0000050a <__stop_program>:
 50a:	ff cf       	rjmp	.-2      	; 0x50a <__stop_program>
