
midterm2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000178  00800100  00001646  000016da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001646  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  00800278  00800278  00001852  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001852  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022ac  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f93  00000000  00000000  00003ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001837  00000000  00000000  00004c77  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  000064b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00009796  00000000  00000000  0000670c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d9f  00000000  00000000  0000fea2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00010c41  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003848  00000000  00000000  00010d39  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d6 c0       	rjmp	.+428    	; 0x1ae <__ctors_end>
       2:	00 00       	nop
       4:	f0 c0       	rjmp	.+480    	; 0x1e6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ee c0       	rjmp	.+476    	; 0x1e6 <__bad_interrupt>
       a:	00 00       	nop
       c:	ec c0       	rjmp	.+472    	; 0x1e6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ea c0       	rjmp	.+468    	; 0x1e6 <__bad_interrupt>
      12:	00 00       	nop
      14:	e8 c0       	rjmp	.+464    	; 0x1e6 <__bad_interrupt>
      16:	00 00       	nop
      18:	e6 c0       	rjmp	.+460    	; 0x1e6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	e4 c0       	rjmp	.+456    	; 0x1e6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	e2 c0       	rjmp	.+452    	; 0x1e6 <__bad_interrupt>
      22:	00 00       	nop
      24:	e0 c0       	rjmp	.+448    	; 0x1e6 <__bad_interrupt>
      26:	00 00       	nop
      28:	de c0       	rjmp	.+444    	; 0x1e6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	dc c0       	rjmp	.+440    	; 0x1e6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	da c0       	rjmp	.+436    	; 0x1e6 <__bad_interrupt>
      32:	00 00       	nop
      34:	d8 c0       	rjmp	.+432    	; 0x1e6 <__bad_interrupt>
      36:	00 00       	nop
      38:	d6 c0       	rjmp	.+428    	; 0x1e6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	d4 c0       	rjmp	.+424    	; 0x1e6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	d2 c0       	rjmp	.+420    	; 0x1e6 <__bad_interrupt>
      42:	00 00       	nop
      44:	d0 c0       	rjmp	.+416    	; 0x1e6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ce c0       	rjmp	.+412    	; 0x1e6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	cc c0       	rjmp	.+408    	; 0x1e6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ca c0       	rjmp	.+404    	; 0x1e6 <__bad_interrupt>
      52:	00 00       	nop
      54:	c8 c0       	rjmp	.+400    	; 0x1e6 <__bad_interrupt>
      56:	00 00       	nop
      58:	c6 c0       	rjmp	.+396    	; 0x1e6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	c4 c0       	rjmp	.+392    	; 0x1e6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	c2 c0       	rjmp	.+388    	; 0x1e6 <__bad_interrupt>
      62:	00 00       	nop
      64:	c0 c0       	rjmp	.+384    	; 0x1e6 <__bad_interrupt>
      66:	00 00       	nop
      68:	be c0       	rjmp	.+380    	; 0x1e6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	bc c0       	rjmp	.+376    	; 0x1e6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ba c0       	rjmp	.+372    	; 0x1e6 <__bad_interrupt>
      72:	00 00       	nop
      74:	b8 c0       	rjmp	.+368    	; 0x1e6 <__bad_interrupt>
      76:	00 00       	nop
      78:	b6 c0       	rjmp	.+364    	; 0x1e6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	b4 c0       	rjmp	.+360    	; 0x1e6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	b2 c0       	rjmp	.+356    	; 0x1e6 <__bad_interrupt>
      82:	00 00       	nop
      84:	b0 c0       	rjmp	.+352    	; 0x1e6 <__bad_interrupt>
      86:	00 00       	nop
      88:	ae c0       	rjmp	.+348    	; 0x1e6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ac c0       	rjmp	.+344    	; 0x1e6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	aa c0       	rjmp	.+340    	; 0x1e6 <__bad_interrupt>
      92:	00 00       	nop
      94:	a8 c0       	rjmp	.+336    	; 0x1e6 <__bad_interrupt>
      96:	00 00       	nop
      98:	a6 c0       	rjmp	.+332    	; 0x1e6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	a4 c0       	rjmp	.+328    	; 0x1e6 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	a2 c0       	rjmp	.+324    	; 0x1e6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	a0 c0       	rjmp	.+320    	; 0x1e6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	9e c0       	rjmp	.+316    	; 0x1e6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	9c c0       	rjmp	.+312    	; 0x1e6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	9a c0       	rjmp	.+308    	; 0x1e6 <__bad_interrupt>
	...

000000b4 <__trampolines_end>:
      b4:	00 40       	sbci	r16, 0x00	; 0
      b6:	7a 10       	cpse	r7, r10
      b8:	f3 5a       	subi	r31, 0xA3	; 163
      ba:	00 a0       	ldd	r0, Z+32	; 0x20
      bc:	72 4e       	sbci	r23, 0xE2	; 226
      be:	18 09       	sbc	r17, r8
      c0:	00 10       	cpse	r0, r0
      c2:	a5 d4       	rcall	.+2378   	; 0xa0e <__floatsisf+0x5c>
      c4:	e8 00       	.word	0x00e8	; ????
      c6:	00 e8       	ldi	r16, 0x80	; 128
      c8:	76 48       	sbci	r23, 0x86	; 134
      ca:	17 00       	.word	0x0017	; ????
      cc:	00 e4       	ldi	r16, 0x40	; 64
      ce:	0b 54       	subi	r16, 0x4B	; 75
      d0:	02 00       	.word	0x0002	; ????
      d2:	00 ca       	rjmp	.-3072   	; 0xfffff4d4 <__eeprom_end+0xff7ef4d4>
      d4:	9a 3b       	cpi	r25, 0xBA	; 186
      d6:	00 00       	nop
      d8:	00 e1       	ldi	r16, 0x10	; 16
      da:	f5 05       	cpc	r31, r5
      dc:	00 00       	nop
      de:	80 96       	adiw	r24, 0x20	; 32
      e0:	98 00       	.word	0x0098	; ????
      e2:	00 00       	nop
      e4:	40 42       	sbci	r20, 0x20	; 32
      e6:	0f 00       	.word	0x000f	; ????
      e8:	00 00       	nop
      ea:	a0 86       	std	Z+8, r10	; 0x08
      ec:	01 00       	.word	0x0001	; ????
      ee:	00 00       	nop
      f0:	10 27       	eor	r17, r16
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	e8 03       	fmulsu	r22, r16
      f8:	00 00       	nop
      fa:	00 00       	nop
      fc:	64 00       	.word	0x0064	; ????
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	0a 00       	.word	0x000a	; ????
     104:	00 00       	nop
     106:	00 00       	nop
     108:	01 00       	.word	0x0001	; ????
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	2c 76       	andi	r18, 0x6C	; 108
     110:	d8 88       	ldd	r13, Y+16	; 0x10
     112:	dc 67       	ori	r29, 0x7C	; 124
     114:	4f 08       	sbc	r4, r15
     116:	23 df       	rcall	.-442    	; 0xffffff5e <__eeprom_end+0xff7eff5e>
     118:	c1 df       	rcall	.-126    	; 0x9c <__SREG__+0x5d>
     11a:	ae 59       	subi	r26, 0x9E	; 158
     11c:	e1 b1       	in	r30, 0x01	; 1
     11e:	b7 96       	adiw	r30, 0x27	; 39
     120:	e5 e3       	ldi	r30, 0x35	; 53
     122:	e4 53       	subi	r30, 0x34	; 52
     124:	c6 3a       	cpi	r28, 0xA6	; 166
     126:	e6 51       	subi	r30, 0x16	; 22
     128:	99 76       	andi	r25, 0x69	; 105
     12a:	96 e8       	ldi	r25, 0x86	; 134
     12c:	e6 c2       	rjmp	.+1484   	; 0x6fa <main+0x210>
     12e:	84 26       	eor	r8, r20
     130:	eb 89       	ldd	r30, Y+19	; 0x13
     132:	8c 9b       	sbis	0x11, 4	; 17
     134:	62 ed       	ldi	r22, 0xD2	; 210
     136:	40 7c       	andi	r20, 0xC0	; 192
     138:	6f fc       	.word	0xfc6f	; ????
     13a:	ef bc       	out	0x2f, r14	; 47
     13c:	9c 9f       	mul	r25, r28
     13e:	40 f2       	brcs	.-112    	; 0xd0 <__trampolines_end+0x1c>
     140:	ba a5       	ldd	r27, Y+42	; 0x2a
     142:	6f a5       	ldd	r22, Y+47	; 0x2f
     144:	f4 90       	lpm	r15, Z
     146:	05 5a       	subi	r16, 0xA5	; 165
     148:	2a f7       	brpl	.-54     	; 0x114 <__trampolines_end+0x60>
     14a:	5c 93       	st	X, r21
     14c:	6b 6c       	ori	r22, 0xCB	; 203
     14e:	f9 67       	ori	r31, 0x79	; 121
     150:	6d c1       	rjmp	.+730    	; 0x42c <getreading+0x18>
     152:	1b fc       	.word	0xfc1b	; ????
     154:	e0 e4       	ldi	r30, 0x40	; 64
     156:	0d 47       	sbci	r16, 0x7D	; 125
     158:	fe f5       	brtc	.+126    	; 0x1d8 <.do_clear_bss_loop>
     15a:	20 e6       	ldi	r18, 0x60	; 96
     15c:	b5 00       	.word	0x00b5	; ????
     15e:	d0 ed       	ldi	r29, 0xD0	; 208
     160:	90 2e       	mov	r9, r16
     162:	03 00       	.word	0x0003	; ????
     164:	94 35       	cpi	r25, 0x54	; 84
     166:	77 05       	cpc	r23, r7
     168:	00 80       	ld	r0, Z
     16a:	84 1e       	adc	r8, r20
     16c:	08 00       	.word	0x0008	; ????
     16e:	00 20       	and	r0, r0
     170:	4e 0a       	sbc	r4, r30
     172:	00 00       	nop
     174:	00 c8       	rjmp	.-4096   	; 0xfffff176 <__eeprom_end+0xff7ef176>
     176:	0c 33       	cpi	r16, 0x3C	; 60
     178:	33 33       	cpi	r19, 0x33	; 51
     17a:	33 0f       	add	r19, r19
     17c:	98 6e       	ori	r25, 0xE8	; 232
     17e:	12 83       	std	Z+2, r17	; 0x02
     180:	11 41       	sbci	r17, 0x11	; 17
     182:	ef 8d       	ldd	r30, Y+31	; 0x1f
     184:	21 14       	cp	r2, r1
     186:	89 3b       	cpi	r24, 0xB9	; 185
     188:	e6 55       	subi	r30, 0x56	; 86
     18a:	16 cf       	rjmp	.-468    	; 0xffffffb8 <__eeprom_end+0xff7effb8>
     18c:	fe e6       	ldi	r31, 0x6E	; 110
     18e:	db 18       	sub	r13, r11
     190:	d1 84       	ldd	r13, Z+9	; 0x09
     192:	4b 38       	cpi	r20, 0x8B	; 139
     194:	1b f7       	brvc	.-58     	; 0x15c <__trampolines_end+0xa8>
     196:	7c 1d       	adc	r23, r12
     198:	90 1d       	adc	r25, r0
     19a:	a4 bb       	out	0x14, r26	; 20
     19c:	e4 24       	eor	r14, r4
     19e:	20 32       	cpi	r18, 0x20	; 32
     1a0:	84 72       	andi	r24, 0x24	; 36
     1a2:	5e 22       	and	r5, r30
     1a4:	81 00       	.word	0x0081	; ????
     1a6:	c9 f1       	breq	.+114    	; 0x21a <init_APDS9960+0x32>
     1a8:	24 ec       	ldi	r18, 0xC4	; 196
     1aa:	a1 e5       	ldi	r26, 0x51	; 81
     1ac:	3d 27       	eor	r19, r29

000001ae <__ctors_end>:
     1ae:	11 24       	eor	r1, r1
     1b0:	1f be       	out	0x3f, r1	; 63
     1b2:	cf ef       	ldi	r28, 0xFF	; 255
     1b4:	d8 e0       	ldi	r29, 0x08	; 8
     1b6:	de bf       	out	0x3e, r29	; 62
     1b8:	cd bf       	out	0x3d, r28	; 61

000001ba <__do_copy_data>:
     1ba:	12 e0       	ldi	r17, 0x02	; 2
     1bc:	a0 e0       	ldi	r26, 0x00	; 0
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	e6 e4       	ldi	r30, 0x46	; 70
     1c2:	f6 e1       	ldi	r31, 0x16	; 22
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <__do_copy_data+0x10>
     1c6:	05 90       	lpm	r0, Z+
     1c8:	0d 92       	st	X+, r0
     1ca:	a8 37       	cpi	r26, 0x78	; 120
     1cc:	b1 07       	cpc	r27, r17
     1ce:	d9 f7       	brne	.-10     	; 0x1c6 <__do_copy_data+0xc>

000001d0 <__do_clear_bss>:
     1d0:	22 e0       	ldi	r18, 0x02	; 2
     1d2:	a8 e7       	ldi	r26, 0x78	; 120
     1d4:	b2 e0       	ldi	r27, 0x02	; 2
     1d6:	01 c0       	rjmp	.+2      	; 0x1da <.do_clear_bss_start>

000001d8 <.do_clear_bss_loop>:
     1d8:	1d 92       	st	X+, r1

000001da <.do_clear_bss_start>:
     1da:	a7 3a       	cpi	r26, 0xA7	; 167
     1dc:	b2 07       	cpc	r27, r18
     1de:	e1 f7       	brne	.-8      	; 0x1d8 <.do_clear_bss_loop>
     1e0:	84 d1       	rcall	.+776    	; 0x4ea <main>
     1e2:	0c 94 21 0b 	jmp	0x1642	; 0x1642 <_exit>

000001e6 <__bad_interrupt>:
     1e6:	0c cf       	rjmp	.-488    	; 0x0 <__vectors>

000001e8 <init_APDS9960>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e8:	2f ef       	ldi	r18, 0xFF	; 255
     1ea:	82 e5       	ldi	r24, 0x52	; 82
     1ec:	97 e0       	ldi	r25, 0x07	; 7
     1ee:	21 50       	subi	r18, 0x01	; 1
     1f0:	80 40       	sbci	r24, 0x00	; 0
     1f2:	90 40       	sbci	r25, 0x00	; 0
     1f4:	e1 f7       	brne	.-8      	; 0x1ee <init_APDS9960+0x6>
     1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <init_APDS9960+0x10>
     1f8:	00 00       	nop



void init_APDS9960(void){
	_delay_ms(150);										/* Power up time >100ms */
	i2c_start(APDS9960_WRITE);
     1fa:	82 e7       	ldi	r24, 0x72	; 114
     1fc:	60 d0       	rcall	.+192    	; 0x2be <i2c_start>
	i2c_write(0x80); // set pointer to ENABLE REGISTER
     1fe:	80 e8       	ldi	r24, 0x80	; 128
     200:	b8 d0       	rcall	.+368    	; 0x372 <i2c_write>
	i2c_write(0x03); // write 0x06 to ENABLE REGISTER
     202:	83 e0       	ldi	r24, 0x03	; 3
     204:	b6 d0       	rcall	.+364    	; 0x372 <i2c_write>
	i2c_stop();
     206:	ac d0       	rcall	.+344    	; 0x360 <i2c_stop>

	i2c_start(APDS9960_WRITE);
     208:	82 e7       	ldi	r24, 0x72	; 114
     20a:	59 d0       	rcall	.+178    	; 0x2be <i2c_start>
	i2c_write(0x81); // set pointer to ALS ADC Integration Time
     20c:	81 e8       	ldi	r24, 0x81	; 129
     20e:	b1 d0       	rcall	.+354    	; 0x372 <i2c_write>
	i2c_write(0xDB); // 219 =0XDB = 37 = 103 ms = 37889
     210:	8b ed       	ldi	r24, 0xDB	; 219
     212:	af d0       	rcall	.+350    	; 0x372 <i2c_write>
	i2c_stop();
     214:	a5 d0       	rcall	.+330    	; 0x360 <i2c_stop>

	i2c_start(APDS9960_WRITE);
     216:	82 e7       	ldi	r24, 0x72	; 114
     218:	52 d0       	rcall	.+164    	; 0x2be <i2c_start>
     21a:	8f e8       	ldi	r24, 0x8F	; 143
	i2c_write(0x8F); // set pointer to CONTROL<AGAIN>
     21c:	aa d0       	rcall	.+340    	; 0x372 <i2c_write>
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	a8 d0       	rcall	.+336    	; 0x372 <i2c_write>
	i2c_write(0x01); // ALS and Color Gain Control = 0 = x1
     222:	9e c0       	rjmp	.+316    	; 0x360 <i2c_stop>
     224:	08 95       	ret

00000226 <Si7021_writereg>:
unsigned char ret;        // return value



void Si7021_writereg(uint8_t reg, uint8_t val)
{
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	d8 2f       	mov	r29, r24
     22c:	c6 2f       	mov	r28, r22
	i2c_start(Si7021+I2C_WRITE);
     22e:	80 e8       	ldi	r24, 0x80	; 128
     230:	46 d0       	rcall	.+140    	; 0x2be <i2c_start>
	i2c_write(reg);  // go to register e.g. 106 user control
     232:	8d 2f       	mov	r24, r29
     234:	9e d0       	rcall	.+316    	; 0x372 <i2c_write>
	i2c_write(val);  // set value e.g. to 0100 0000 FIFO enable
     236:	8c 2f       	mov	r24, r28
     238:	9c d0       	rcall	.+312    	; 0x372 <i2c_write>
	i2c_stop();      // set stop condition = release bus
     23a:	92 d0       	rcall	.+292    	; 0x360 <i2c_stop>
     23c:	df 91       	pop	r29
}
     23e:	cf 91       	pop	r28
     240:	08 95       	ret

00000242 <Init_Si7021>:
     242:	80 e8       	ldi	r24, 0x80	; 128

void Init_Si7021()
{


	ret = i2c_start(Si7021+I2C_WRITE);       // set device address and write mode
     244:	3c d0       	rcall	.+120    	; 0x2be <i2c_start>
     246:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <ret>
	if ( ret )
     24a:	88 23       	and	r24, r24
	{
		/* failed to issue start condition, possibly no device found */
		i2c_stop();
     24c:	11 f0       	breq	.+4      	; 0x252 <Init_Si7021+0x10>
     24e:	88 d0       	rcall	.+272    	; 0x360 <i2c_stop>
     250:	ff cf       	rjmp	.-2      	; 0x250 <Init_Si7021+0xe>
     252:	08 95       	ret

00000254 <Si7021_config>:
	}
}

void Si7021_config(void)
{
	Si7021_writereg(Si7021_Write_Heater_Control_Register, 0x09);
     254:	69 e0       	ldi	r22, 0x09	; 9
     256:	81 e5       	ldi	r24, 0x51	; 81
     258:	e6 df       	rcall	.-52     	; 0x226 <Si7021_writereg>
	Si7021_writereg(Si7021_Write_Config_Register, (Si7021_Config_Resolution_RH_12_T14 | Si70211_Config_Heater_On));
     25a:	64 e0       	ldi	r22, 0x04	; 4
     25c:	86 ee       	ldi	r24, 0xE6	; 230
     25e:	e3 df       	rcall	.-58     	; 0x226 <Si7021_writereg>
     260:	2f ef       	ldi	r18, 0xFF	; 255
     262:	81 ef       	ldi	r24, 0xF1	; 241
     264:	9b e2       	ldi	r25, 0x2B	; 43
     266:	21 50       	subi	r18, 0x01	; 1
     268:	80 40       	sbci	r24, 0x00	; 0
     26a:	90 40       	sbci	r25, 0x00	; 0
     26c:	e1 f7       	brne	.-8      	; 0x266 <Si7021_config+0x12>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <Si7021_config+0x1c>
     270:	00 00       	nop
	_delay_ms(900);
	Si7021_writereg(Si7021_Write_Heater_Control_Register, 0x00);
     272:	60 e0       	ldi	r22, 0x00	; 0
     274:	81 e5       	ldi	r24, 0x51	; 81
     276:	d7 df       	rcall	.-82     	; 0x226 <Si7021_writereg>
	Si7021_writereg(Si7021_Write_Config_Register, (Si7021_Config_Resolution_RH_12_T14 | Si70211_Config_Heater_Off));
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	86 ee       	ldi	r24, 0xE6	; 230
     27c:	d4 df       	rcall	.-88     	; 0x226 <Si7021_writereg>
     27e:	2f ef       	ldi	r18, 0xFF	; 255
     280:	81 ef       	ldi	r24, 0xF1	; 241
     282:	9b e2       	ldi	r25, 0x2B	; 43
     284:	21 50       	subi	r18, 0x01	; 1
     286:	80 40       	sbci	r24, 0x00	; 0
     288:	90 40       	sbci	r25, 0x00	; 0
     28a:	e1 f7       	brne	.-8      	; 0x284 <Si7021_config+0x30>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <Si7021_config+0x3a>
     28e:	00 00       	nop
     290:	08 95       	ret

00000292 <USART_Init>:

#include "uart.h"						/* Include USART header file */

void USART_Init(unsigned long BAUDRATE)				/* USART initialize function */
{ 
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);				/* Enable USART transmitter and receiver */
     292:	e1 ec       	ldi	r30, 0xC1	; 193
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	88 61       	ori	r24, 0x18	; 24
     29a:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ00) | (1 << UCSZ01);	/* Write USCRC for 8 bit data and 1 stop bit */ 
     29c:	e2 ec       	ldi	r30, 0xC2	; 194
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	86 60       	ori	r24, 0x06	; 6
     2a4:	80 83       	st	Z, r24
	UBRR0L = BAUD_PRESCALE;							/* Load UBRRL with lower 8 bit of prescale value */
     2a6:	87 e6       	ldi	r24, 0x67	; 103
     2a8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UBRR0H = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
     2ac:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     2b0:	08 95       	ret

000002b2 <i2c_init>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR0 = 0;                         /* no prescaler */
     2b2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  TWBR0 = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     2b6:	88 e4       	ldi	r24, 0x48	; 72
     2b8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     2bc:	08 95       	ret

000002be <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR0 = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     2be:	94 ea       	ldi	r25, 0xA4	; 164
     2c0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR0 & (1<<TWINT)));
     2c4:	ec eb       	ldi	r30, 0xBC	; 188
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	90 81       	ld	r25, Z
     2ca:	99 23       	and	r25, r25
     2cc:	ec f7       	brge	.-6      	; 0x2c8 <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS_PB & 0xF8;
     2ce:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     2d2:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     2d4:	98 30       	cpi	r25, 0x08	; 8
     2d6:	11 f0       	breq	.+4      	; 0x2dc <i2c_start+0x1e>
     2d8:	90 31       	cpi	r25, 0x10	; 16
     2da:	a1 f4       	brne	.+40     	; 0x304 <i2c_start+0x46>

	// send device address
	TWDR0 = address;
     2dc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR0 = (1<<TWINT) | (1<<TWEN);
     2e0:	84 e8       	ldi	r24, 0x84	; 132
     2e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR0 & (1<<TWINT)));
     2e6:	ec eb       	ldi	r30, 0xBC	; 188
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	88 23       	and	r24, r24
     2ee:	ec f7       	brge	.-6      	; 0x2ea <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS_PB & 0xF8;
     2f0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     2f4:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     2f6:	98 31       	cpi	r25, 0x18	; 24
     2f8:	39 f0       	breq	.+14     	; 0x308 <i2c_start+0x4a>
	// wait until transmission completed
	while(!(TWCR0 & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS_PB & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	90 34       	cpi	r25, 0x40	; 64
     2fe:	29 f4       	brne	.+10     	; 0x30a <i2c_start+0x4c>
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	08 95       	ret
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS_PB & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     308:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     30a:	08 95       	ret

0000030c <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29


    while ( 1 )
    {
	    // send START condition
	    TWCR0 = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     310:	ec eb       	ldi	r30, 0xBC	; 188
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	24 ea       	ldi	r18, 0xA4	; 164
    
    	// wait until transmission completed
    	while(!(TWCR0 & (1<<TWINT)));
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS_PB & 0xF8;
     316:	a9 eb       	ldi	r26, 0xB9	; 185
     318:	b0 e0       	ldi	r27, 0x00	; 0
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR0 = address;
     31a:	cb eb       	ldi	r28, 0xBB	; 187
     31c:	d0 e0       	ldi	r29, 0x00	; 0
    	TWCR0 = (1<<TWINT) | (1<<TWEN);
     31e:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS_PB & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     320:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR0 = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     322:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR0 & (1<<TWINT)));
     324:	90 81       	ld	r25, Z
     326:	99 23       	and	r25, r25
     328:	ec f7       	brge	.-6      	; 0x324 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS_PB & 0xF8;
     32a:	9c 91       	ld	r25, X
     32c:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     32e:	98 30       	cpi	r25, 0x08	; 8
     330:	11 f0       	breq	.+4      	; 0x336 <i2c_start_wait+0x2a>
     332:	90 31       	cpi	r25, 0x10	; 16
     334:	b1 f7       	brne	.-20     	; 0x322 <i2c_start_wait+0x16>
    
    	// send device address
    	TWDR0 = address;
     336:	88 83       	st	Y, r24
    	TWCR0 = (1<<TWINT) | (1<<TWEN);
     338:	30 83       	st	Z, r19
    
    	// wail until transmission completed
    	while(!(TWCR0 & (1<<TWINT)));
     33a:	90 81       	ld	r25, Z
     33c:	99 23       	and	r25, r25
     33e:	ec f7       	brge	.-6      	; 0x33a <i2c_start_wait+0x2e>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS_PB & 0xF8;
     340:	9c 91       	ld	r25, X
     342:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     344:	90 32       	cpi	r25, 0x20	; 32
     346:	11 f0       	breq	.+4      	; 0x34c <i2c_start_wait+0x40>
     348:	98 35       	cpi	r25, 0x58	; 88
     34a:	29 f4       	brne	.+10     	; 0x356 <i2c_start_wait+0x4a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     34c:	40 83       	st	Z, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR0 & (1<<TWSTO));
     34e:	90 81       	ld	r25, Z
     350:	94 fd       	sbrc	r25, 4
     352:	fd cf       	rjmp	.-6      	; 0x34e <i2c_start_wait+0x42>
     354:	e6 cf       	rjmp	.-52     	; 0x322 <i2c_start_wait+0x16>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     }

}/* i2c_start_wait */
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <i2c_rep_start>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     35c:	b0 cf       	rjmp	.-160    	; 0x2be <i2c_start>

}/* i2c_rep_start */
     35e:	08 95       	ret

00000360 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     360:	84 e9       	ldi	r24, 0x94	; 148
     362:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR0 & (1<<TWSTO));
     366:	ec eb       	ldi	r30, 0xBC	; 188
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	80 81       	ld	r24, Z
     36c:	84 fd       	sbrc	r24, 4
     36e:	fd cf       	rjmp	.-6      	; 0x36a <i2c_stop+0xa>

}/* i2c_stop */
     370:	08 95       	ret

00000372 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR0 = data;
     372:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR0 = (1<<TWINT) | (1<<TWEN);
     376:	84 e8       	ldi	r24, 0x84	; 132
     378:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR0 & (1<<TWINT)));
     37c:	ec eb       	ldi	r30, 0xBC	; 188
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	80 81       	ld	r24, Z
     382:	88 23       	and	r24, r24
     384:	ec f7       	brge	.-6      	; 0x380 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS_PB & 0xF8;
     386:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     38a:	98 7f       	andi	r25, 0xF8	; 248
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	98 32       	cpi	r25, 0x28	; 40
     390:	09 f4       	brne	.+2      	; 0x394 <i2c_write+0x22>
     392:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     394:	08 95       	ret

00000396 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     396:	84 ec       	ldi	r24, 0xC4	; 196
     398:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR0 & (1<<TWINT)));    
     39c:	ec eb       	ldi	r30, 0xBC	; 188
     39e:	f0 e0       	ldi	r31, 0x00	; 0
     3a0:	80 81       	ld	r24, Z
     3a2:	88 23       	and	r24, r24
     3a4:	ec f7       	brge	.-6      	; 0x3a0 <i2c_readAck+0xa>

    return TWDR0;
     3a6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readAck */
     3aa:	08 95       	ret

000003ac <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR0 = (1<<TWINT) | (1<<TWEN);
     3ac:	84 e8       	ldi	r24, 0x84	; 132
     3ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR0 & (1<<TWINT)));
     3b2:	ec eb       	ldi	r30, 0xBC	; 188
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	80 81       	ld	r24, Z
     3b8:	88 23       	and	r24, r24
     3ba:	ec f7       	brge	.-6      	; 0x3b6 <i2c_readNak+0xa>
	
    return TWDR0;
     3bc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2c_readNak */
     3c0:	08 95       	ret

000003c2 <usart_init>:
	while(! (UCSR0A & (1<<UDRE0)));	//wait until UDR0 is empty
	UDR0 = ch;		//transmit ch
}

	
void check_OK(){
     3c2:	e1 ec       	ldi	r30, 0xC1	; 193
     3c4:	f0 e0       	ldi	r31, 0x00	; 0
     3c6:	80 81       	ld	r24, Z
     3c8:	88 61       	ori	r24, 0x18	; 24
     3ca:	80 83       	st	Z, r24
     3cc:	a2 ec       	ldi	r26, 0xC2	; 194
     3ce:	b0 e0       	ldi	r27, 0x00	; 0
     3d0:	8c 91       	ld	r24, X
     3d2:	86 60       	ori	r24, 0x06	; 6
     3d4:	8c 93       	st	X, r24
     3d6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     3da:	87 e6       	ldi	r24, 0x67	; 103
     3dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     3e0:	80 81       	ld	r24, Z
     3e2:	80 68       	ori	r24, 0x80	; 128
     3e4:	80 83       	st	Z, r24
     3e6:	08 95       	ret

000003e8 <usart_send>:
     3e8:	e0 ec       	ldi	r30, 0xC0	; 192
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	90 81       	ld	r25, Z
     3ee:	95 ff       	sbrs	r25, 5
     3f0:	fd cf       	rjmp	.-6      	; 0x3ec <usart_send+0x4>
     3f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     3f6:	08 95       	ret

000003f8 <UART_sendString>:

	*/
		
	}
	
void UART_sendString(const char *str){
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	ec 01       	movw	r28, r24
	
	while(*str){
     3fe:	88 81       	ld	r24, Y
     400:	88 23       	and	r24, r24
     402:	29 f0       	breq	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     404:	21 96       	adiw	r28, 0x01	; 1
		usart_send(*str++);
     406:	f0 df       	rcall	.-32     	; 0x3e8 <usart_send>
		
	}
	
void UART_sendString(const char *str){
	
	while(*str){
     408:	89 91       	ld	r24, Y+
     40a:	81 11       	cpse	r24, r1
     40c:	fc cf       	rjmp	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
		usart_send(*str++);
		}
			
}
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	08 95       	ret

00000414 <getreading>:


void getreading(void){

	i2c_start(APDS9960_WRITE);
     414:	82 e7       	ldi	r24, 0x72	; 114
     416:	53 df       	rcall	.-346    	; 0x2be <i2c_start>
	i2c_write(0x94); // set pointer to CDATA
     418:	84 e9       	ldi	r24, 0x94	; 148
	i2c_stop();
     41a:	ab df       	rcall	.-170    	; 0x372 <i2c_write>

	i2c_start(APDS9960_READ);
     41c:	a1 df       	rcall	.-190    	; 0x360 <i2c_stop>
     41e:	83 e7       	ldi	r24, 0x73	; 115
     420:	4e df       	rcall	.-356    	; 0x2be <i2c_start>

	raw_C =  ((uint8_t)i2c_readAck());
     422:	b9 df       	rcall	.-142    	; 0x396 <i2c_readAck>
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <__data_end+0x1>
     42a:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <__data_end>
	raw_C |= ((uint8_t)i2c_readAck())<<8;
     42e:	b3 df       	rcall	.-154    	; 0x396 <i2c_readAck>
     430:	20 91 78 02 	lds	r18, 0x0278	; 0x800278 <__data_end>
     434:	30 91 79 02 	lds	r19, 0x0279	; 0x800279 <__data_end+0x1>
     438:	38 2b       	or	r19, r24
     43a:	30 93 79 02 	sts	0x0279, r19	; 0x800279 <__data_end+0x1>
     43e:	20 93 78 02 	sts	0x0278, r18	; 0x800278 <__data_end>

	raw_R = ((uint8_t)i2c_readAck());
     442:	a9 df       	rcall	.-174    	; 0x396 <i2c_readAck>
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <raw_R+0x1>
     44a:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <raw_R>
	raw_R |= ((uint8_t)i2c_readAck())<<8;
     44e:	a3 df       	rcall	.-186    	; 0x396 <i2c_readAck>
     450:	20 91 7e 02 	lds	r18, 0x027E	; 0x80027e <raw_R>
     454:	30 91 7f 02 	lds	r19, 0x027F	; 0x80027f <raw_R+0x1>
     458:	38 2b       	or	r19, r24
     45a:	30 93 7f 02 	sts	0x027F, r19	; 0x80027f <raw_R+0x1>
     45e:	20 93 7e 02 	sts	0x027E, r18	; 0x80027e <raw_R>

	raw_G = ((uint8_t)i2c_readAck());
     462:	99 df       	rcall	.-206    	; 0x396 <i2c_readAck>
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <raw_G+0x1>
     46a:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <raw_G>
	raw_G |= ((uint8_t)i2c_readAck())<<8;
     46e:	93 df       	rcall	.-218    	; 0x396 <i2c_readAck>
     470:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <raw_G>
     474:	30 91 7d 02 	lds	r19, 0x027D	; 0x80027d <raw_G+0x1>
     478:	38 2b       	or	r19, r24
     47a:	30 93 7d 02 	sts	0x027D, r19	; 0x80027d <raw_G+0x1>
     47e:	20 93 7c 02 	sts	0x027C, r18	; 0x80027c <raw_G>

	raw_B = ((uint8_t)i2c_readAck());
     482:	89 df       	rcall	.-238    	; 0x396 <i2c_readAck>
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <raw_B+0x1>
     48a:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <raw_B>
	raw_B |= ((uint8_t)i2c_readAck())<<8;
     48e:	83 df       	rcall	.-250    	; 0x396 <i2c_readAck>
     490:	20 91 7a 02 	lds	r18, 0x027A	; 0x80027a <raw_B>
     494:	30 91 7b 02 	lds	r19, 0x027B	; 0x80027b <raw_B+0x1>
     498:	38 2b       	or	r19, r24
     49a:	30 93 7b 02 	sts	0x027B, r19	; 0x80027b <raw_B+0x1>
     49e:	20 93 7a 02 	sts	0x027A, r18	; 0x80027a <raw_B>

	i2c_stop();
     4a2:	5e cf       	rjmp	.-324    	; 0x360 <i2c_stop>
     4a4:	08 95       	ret

000004a6 <Si7021_readreg>:
     4a6:	cf 93       	push	r28

}

uint16_t Si7021_readreg(uint8_t reg)
{
     4a8:	df 93       	push	r29
     4aa:	c8 2f       	mov	r28, r24
	i2c_start_wait(Si7021+I2C_WRITE);  // set device address and write mode
     4ac:	80 e8       	ldi	r24, 0x80	; 128
     4ae:	2e df       	rcall	.-420    	; 0x30c <i2c_start_wait>
	i2c_write(reg);                     // ACCEL_XOUT
     4b0:	8c 2f       	mov	r24, r28
     4b2:	5f df       	rcall	.-322    	; 0x372 <i2c_write>
	i2c_write(0x81);                     // ACCEL_XOUT
     4b4:	81 e8       	ldi	r24, 0x81	; 129
     4b6:	5d df       	rcall	.-326    	; 0x372 <i2c_write>
	i2c_rep_start(Si7021+I2C_READ);    // set device address and read mode
     4b8:	81 e8       	ldi	r24, 0x81	; 129
     4ba:	50 df       	rcall	.-352    	; 0x35c <i2c_rep_start>
     4bc:	6c df       	rcall	.-296    	; 0x396 <i2c_readAck>
	raw = i2c_readAck();                // read one intermediate byte
     4be:	c8 2f       	mov	r28, r24
     4c0:	d0 e0       	ldi	r29, 0x00	; 0
     4c2:	d0 93 a5 02 	sts	0x02A5, r29	; 0x8002a5 <raw+0x1>
     4c6:	c0 93 a4 02 	sts	0x02A4, r28	; 0x8002a4 <raw>
     4ca:	70 df       	rcall	.-288    	; 0x3ac <i2c_readNak>
	raw = (raw<<8) | i2c_readNak();     // read last byte
     4cc:	dc 2f       	mov	r29, r28
     4ce:	cc 27       	eor	r28, r28
     4d0:	c8 2b       	or	r28, r24
     4d2:	d0 93 a5 02 	sts	0x02A5, r29	; 0x8002a5 <raw+0x1>
     4d6:	c0 93 a4 02 	sts	0x02A4, r28	; 0x8002a4 <raw>
     4da:	42 df       	rcall	.-380    	; 0x360 <i2c_stop>
	i2c_stop();
     4dc:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <raw>
	return raw;
}
     4e0:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <raw+0x1>
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	08 95       	ret

000004ea <main>:
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
uint16_t TMP_Data, CTMP_Data;          // Temperature raw value
uint16_t PTMP_Data, CPTMP_Data;          // Temperature raw value


int main (void)
{
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	a3 97       	sbiw	r28, 0x23	; 35
     4f4:	0f b6       	in	r0, 0x3f	; 63
     4f6:	f8 94       	cli
     4f8:	de bf       	out	0x3e, r29	; 62
     4fa:	0f be       	out	0x3f, r0	; 63
     4fc:	cd bf       	out	0x3d, r28	; 61
		char buffer[30], float_[5];
		
		//initialize the usart methods used by ASPD9906
		usart_init ();
     4fe:	61 df       	rcall	.-318    	; 0x3c2 <usart_init>

		USART_Init(9600);
     500:	60 e8       	ldi	r22, 0x80	; 128
     502:	75 e2       	ldi	r23, 0x25	; 37
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
		i2c_init();     // init I2C interface
     508:	c4 de       	rcall	.-632    	; 0x292 <USART_Init>
     50a:	d3 de       	rcall	.-602    	; 0x2b2 <i2c_init>
     50c:	2f ef       	ldi	r18, 0xFF	; 255
     50e:	83 ec       	ldi	r24, 0xC3	; 195
     510:	99 e0       	ldi	r25, 0x09	; 9
     512:	21 50       	subi	r18, 0x01	; 1
     514:	80 40       	sbci	r24, 0x00	; 0
     516:	90 40       	sbci	r25, 0x00	; 0
     518:	e1 f7       	brne	.-8      	; 0x512 <main+0x28>
     51a:	00 c0       	rjmp	.+0      	; 0x51c <main+0x32>
		_delay_ms(200);  // Wait for 200 ms.
		
		Init_Si7021();
     51c:	00 00       	nop
     51e:	91 de       	rcall	.-734    	; 0x242 <Init_Si7021>
     520:	2f ef       	ldi	r18, 0xFF	; 255
     522:	83 ec       	ldi	r24, 0xC3	; 195
     524:	99 e0       	ldi	r25, 0x09	; 9
     526:	21 50       	subi	r18, 0x01	; 1
     528:	80 40       	sbci	r24, 0x00	; 0
     52a:	90 40       	sbci	r25, 0x00	; 0
     52c:	e1 f7       	brne	.-8      	; 0x526 <main+0x3c>
     52e:	00 c0       	rjmp	.+0      	; 0x530 <main+0x46>
		_delay_ms(200);     // Wait for 200 ms.
				
		Si7021_config();
     530:	00 00       	nop
     532:	90 de       	rcall	.-736    	; 0x254 <Si7021_config>
     534:	2f ef       	ldi	r18, 0xFF	; 255
     536:	83 ec       	ldi	r24, 0xC3	; 195
     538:	99 e0       	ldi	r25, 0x09	; 9
     53a:	21 50       	subi	r18, 0x01	; 1
     53c:	80 40       	sbci	r24, 0x00	; 0
     53e:	90 40       	sbci	r25, 0x00	; 0
     540:	e1 f7       	brne	.-8      	; 0x53a <main+0x50>
     542:	00 c0       	rjmp	.+0      	; 0x544 <main+0x5a>
		_delay_ms(200);     // Wait for 200 ms.
			
		init_APDS9960();
     544:	00 00       	nop
     546:	50 de       	rcall	.-864    	; 0x1e8 <init_APDS9960>
     548:	2f ef       	ldi	r18, 0xFF	; 255
     54a:	83 ec       	ldi	r24, 0xC3	; 195
     54c:	99 e0       	ldi	r25, 0x09	; 9
     54e:	21 50       	subi	r18, 0x01	; 1
     550:	80 40       	sbci	r24, 0x00	; 0
     552:	90 40       	sbci	r25, 0x00	; 0
     554:	e1 f7       	brne	.-8      	; 0x54e <main+0x64>
     556:	00 c0       	rjmp	.+0      	; 0x558 <main+0x6e>
		_delay_ms(200);     // Wait for 200 ms.


		UART_sendString("AT\r\n");
     558:	00 00       	nop
     55a:	80 e0       	ldi	r24, 0x00	; 0
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	4c df       	rcall	.-360    	; 0x3f8 <UART_sendString>
     560:	2f ef       	ldi	r18, 0xFF	; 255
     562:	8b e7       	ldi	r24, 0x7B	; 123
     564:	92 e9       	ldi	r25, 0x92	; 146
     566:	21 50       	subi	r18, 0x01	; 1
     568:	80 40       	sbci	r24, 0x00	; 0
     56a:	90 40       	sbci	r25, 0x00	; 0
     56c:	e1 f7       	brne	.-8      	; 0x566 <main+0x7c>
     56e:	00 c0       	rjmp	.+0      	; 0x570 <main+0x86>
		_delay_ms(3000);
		check_OK();
		// Select WIFI mode
		UART_sendString("AT+CWMODE=1\r\n");
     570:	00 00       	nop
     572:	85 e0       	ldi	r24, 0x05	; 5
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	40 df       	rcall	.-384    	; 0x3f8 <UART_sendString>
     578:	2f ef       	ldi	r18, 0xFF	; 255
     57a:	8b e7       	ldi	r24, 0x7B	; 123
     57c:	92 e9       	ldi	r25, 0x92	; 146
     57e:	21 50       	subi	r18, 0x01	; 1
     580:	80 40       	sbci	r24, 0x00	; 0
     582:	90 40       	sbci	r25, 0x00	; 0
     584:	e1 f7       	brne	.-8      	; 0x57e <main+0x94>
     586:	00 c0       	rjmp	.+0      	; 0x588 <main+0x9e>
		_delay_ms(3000);
		// Connect to local WIFI
		UART_sendString("AT+CWJAP=\"Samsung Galaxy Note9 7157\",\"Cameronkirk1\"\r\n");
     588:	00 00       	nop
     58a:	83 e1       	ldi	r24, 0x13	; 19
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	34 df       	rcall	.-408    	; 0x3f8 <UART_sendString>
     590:	2f ef       	ldi	r18, 0xFF	; 255
     592:	8b e7       	ldi	r24, 0x7B	; 123
     594:	92 e9       	ldi	r25, 0x92	; 146
     596:	21 50       	subi	r18, 0x01	; 1
     598:	80 40       	sbci	r24, 0x00	; 0
     59a:	90 40       	sbci	r25, 0x00	; 0
     59c:	e1 f7       	brne	.-8      	; 0x596 <main+0xac>
     59e:	00 c0       	rjmp	.+0      	; 0x5a0 <main+0xb6>
		_delay_ms(3000);
		// Enable connection
		UART_sendString("AT+CIPMUX=0\r\n");
     5a0:	00 00       	nop
     5a2:	89 e4       	ldi	r24, 0x49	; 73
     5a4:	91 e0       	ldi	r25, 0x01	; 1
     5a6:	28 df       	rcall	.-432    	; 0x3f8 <UART_sendString>
     5a8:	2f ef       	ldi	r18, 0xFF	; 255
     5aa:	8b e7       	ldi	r24, 0x7B	; 123
     5ac:	92 e9       	ldi	r25, 0x92	; 146
     5ae:	21 50       	subi	r18, 0x01	; 1
     5b0:	80 40       	sbci	r24, 0x00	; 0
     5b2:	90 40       	sbci	r25, 0x00	; 0
     5b4:	e1 f7       	brne	.-8      	; 0x5ae <main+0xc4>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <main+0xce>
     5b8:	00 00       	nop

		while (1)
		{
			TMP_Data = Si7021_readreg(0xE3);   // read ch0 LSB byte
			CTMP_Data = 175.25f * TMP_Data / 65536.0f - 46.85f;
			dtostrf( CTMP_Data, 3, 2, float_ );
     5ba:	6e 01       	movw	r12, r28
     5bc:	2f e1       	ldi	r18, 0x1F	; 31
     5be:	c2 0e       	add	r12, r18
     5c0:	d1 1c       	adc	r13, r1
			sprintf(buffer," Temperature = %s C\n",float_);
     5c2:	0f 2e       	mov	r0, r31
     5c4:	f7 e5       	ldi	r31, 0x57	; 87
     5c6:	af 2e       	mov	r10, r31
     5c8:	f1 e0       	ldi	r31, 0x01	; 1
     5ca:	bf 2e       	mov	r11, r31
     5cc:	f0 2d       	mov	r31, r0
     5ce:	ce 01       	movw	r24, r28
     5d0:	01 96       	adiw	r24, 0x01	; 1
		_delay_ms(3000);


		while (1)
		{
			TMP_Data = Si7021_readreg(0xE3);   // read ch0 LSB byte
     5d2:	7c 01       	movw	r14, r24
     5d4:	83 ee       	ldi	r24, 0xE3	; 227
     5d6:	67 df       	rcall	.-306    	; 0x4a6 <Si7021_readreg>
     5d8:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <TMP_Data+0x1>
     5dc:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <TMP_Data>
			CTMP_Data = 175.25f * TMP_Data / 65536.0f - 46.85f;
     5e0:	bc 01       	movw	r22, r24
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	e3 d1       	rcall	.+966    	; 0x9ae <__floatunsisf>
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e4       	ldi	r19, 0x40	; 64
     5ec:	4f e2       	ldi	r20, 0x2F	; 47
     5ee:	53 e4       	ldi	r21, 0x43	; 67
     5f0:	6c d2       	rcall	.+1240   	; 0xaca <__mulsf3>
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e8       	ldi	r20, 0x80	; 128
     5f8:	57 e3       	ldi	r21, 0x37	; 55
     5fa:	67 d2       	rcall	.+1230   	; 0xaca <__mulsf3>
     5fc:	26 e6       	ldi	r18, 0x66	; 102
     5fe:	36 e6       	ldi	r19, 0x66	; 102
     600:	4b e3       	ldi	r20, 0x3B	; 59
     602:	52 e4       	ldi	r21, 0x42	; 66
     604:	43 d1       	rcall	.+646    	; 0x88c <__subsf3>
     606:	a7 d1       	rcall	.+846    	; 0x956 <__fixunssfsi>
     608:	70 93 82 02 	sts	0x0282, r23	; 0x800282 <CTMP_Data+0x1>
     60c:	60 93 81 02 	sts	0x0281, r22	; 0x800281 <CTMP_Data>
			dtostrf( CTMP_Data, 3, 2, float_ );
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	cc d1       	rcall	.+920    	; 0x9ae <__floatunsisf>
     616:	86 01       	movw	r16, r12
     618:	22 e0       	ldi	r18, 0x02	; 2
     61a:	43 e0       	ldi	r20, 0x03	; 3
     61c:	b9 d2       	rcall	.+1394   	; 0xb90 <dtostrf>
			sprintf(buffer," Temperature = %s C\n",float_);
     61e:	df 92       	push	r13
     620:	cf 92       	push	r12
     622:	bf 92       	push	r11
     624:	af 92       	push	r10
     626:	ff 92       	push	r15
     628:	ef 92       	push	r14
     62a:	f4 d2       	rcall	.+1512   	; 0xc14 <sprintf>
			
			// Start a connection as client to Thingspeak
			UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
     62c:	8c e6       	ldi	r24, 0x6C	; 108
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	e3 de       	rcall	.-570    	; 0x3f8 <UART_sendString>
     632:	9f ef       	ldi	r25, 0xFF	; 255
     634:	27 ea       	ldi	r18, 0xA7	; 167
     636:	81 e6       	ldi	r24, 0x61	; 97
     638:	91 50       	subi	r25, 0x01	; 1
     63a:	20 40       	sbci	r18, 0x00	; 0
     63c:	80 40       	sbci	r24, 0x00	; 0
     63e:	e1 f7       	brne	.-8      	; 0x638 <main+0x14e>
     640:	00 c0       	rjmp	.+0      	; 0x642 <main+0x158>
     642:	00 00       	nop
			_delay_ms(2000);
			// Specify the size of the data
			UART_sendString("AT+CIPSEND=45\r\n");
     644:	85 e9       	ldi	r24, 0x95	; 149
     646:	91 e0       	ldi	r25, 0x01	; 1
     648:	d7 de       	rcall	.-594    	; 0x3f8 <UART_sendString>
     64a:	9f ef       	ldi	r25, 0xFF	; 255
     64c:	27 ea       	ldi	r18, 0xA7	; 167
     64e:	81 e6       	ldi	r24, 0x61	; 97
     650:	91 50       	subi	r25, 0x01	; 1
     652:	20 40       	sbci	r18, 0x00	; 0
     654:	80 40       	sbci	r24, 0x00	; 0
     656:	e1 f7       	brne	.-8      	; 0x650 <main+0x166>
     658:	00 c0       	rjmp	.+0      	; 0x65a <main+0x170>
     65a:	00 00       	nop
			_delay_ms(2000);
			// Send temperature
			UART_sendString("GET /update?key=U1KZD3KPYBFH5DIZ&field1=");
     65c:	85 ea       	ldi	r24, 0xA5	; 165
     65e:	91 e0       	ldi	r25, 0x01	; 1
     660:	cb de       	rcall	.-618    	; 0x3f8 <UART_sendString>
     662:	9f ef       	ldi	r25, 0xFF	; 255
     664:	27 ea       	ldi	r18, 0xA7	; 167
     666:	81 e6       	ldi	r24, 0x61	; 97
     668:	91 50       	subi	r25, 0x01	; 1
     66a:	20 40       	sbci	r18, 0x00	; 0
     66c:	80 40       	sbci	r24, 0x00	; 0
     66e:	e1 f7       	brne	.-8      	; 0x668 <main+0x17e>
     670:	00 c0       	rjmp	.+0      	; 0x672 <main+0x188>
     672:	00 00       	nop
			_delay_ms(2000);
			UART_sendString(buffer);
     674:	c7 01       	movw	r24, r14
     676:	c0 de       	rcall	.-640    	; 0x3f8 <UART_sendString>
     678:	9f ef       	ldi	r25, 0xFF	; 255
     67a:	27 ea       	ldi	r18, 0xA7	; 167
     67c:	81 e6       	ldi	r24, 0x61	; 97
     67e:	91 50       	subi	r25, 0x01	; 1
     680:	20 40       	sbci	r18, 0x00	; 0
     682:	80 40       	sbci	r24, 0x00	; 0
     684:	e1 f7       	brne	.-8      	; 0x67e <main+0x194>
     686:	00 c0       	rjmp	.+0      	; 0x688 <main+0x19e>
			_delay_ms(2000);
			UART_sendString("\r\n\r\n");
     688:	00 00       	nop
     68a:	8e ec       	ldi	r24, 0xCE	; 206
     68c:	91 e0       	ldi	r25, 0x01	; 1
     68e:	b4 de       	rcall	.-664    	; 0x3f8 <UART_sendString>
     690:	9f ef       	ldi	r25, 0xFF	; 255
     692:	27 ea       	ldi	r18, 0xA7	; 167
     694:	81 e6       	ldi	r24, 0x61	; 97
     696:	91 50       	subi	r25, 0x01	; 1
     698:	20 40       	sbci	r18, 0x00	; 0
     69a:	80 40       	sbci	r24, 0x00	; 0
     69c:	e1 f7       	brne	.-8      	; 0x696 <main+0x1ac>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <main+0x1b6>
			
			_delay_ms(2000);     // Wait for 2000 ms.
			
			getreading();
     6a0:	00 00       	nop
     6a2:	b8 de       	rcall	.-656    	; 0x414 <getreading>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     6a4:	4a e0       	ldi	r20, 0x0A	; 10
     6a6:	b7 01       	movw	r22, r14
     6a8:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <__data_end>
     6ac:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <__data_end+0x1>
     6b0:	8e d2       	rcall	.+1308   	; 0xbce <__itoa_ncheck>
     6b2:	8c e6       	ldi	r24, 0x6C	; 108
			
			itoa(raw_C, buffer, 10);
			// Start a connection as client to Thingspeak
			UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	a0 de       	rcall	.-704    	; 0x3f8 <UART_sendString>
     6b8:	9f ef       	ldi	r25, 0xFF	; 255
     6ba:	27 ea       	ldi	r18, 0xA7	; 167
     6bc:	81 e6       	ldi	r24, 0x61	; 97
     6be:	91 50       	subi	r25, 0x01	; 1
     6c0:	20 40       	sbci	r18, 0x00	; 0
     6c2:	80 40       	sbci	r24, 0x00	; 0
     6c4:	e1 f7       	brne	.-8      	; 0x6be <main+0x1d4>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <main+0x1de>
     6c8:	00 00       	nop
			_delay_ms(2000);
			// Specify the size of the data
			UART_sendString("AT+CIPSEND=45\r\n");
     6ca:	85 e9       	ldi	r24, 0x95	; 149
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	94 de       	rcall	.-728    	; 0x3f8 <UART_sendString>
     6d0:	9f ef       	ldi	r25, 0xFF	; 255
     6d2:	27 ea       	ldi	r18, 0xA7	; 167
     6d4:	81 e6       	ldi	r24, 0x61	; 97
     6d6:	91 50       	subi	r25, 0x01	; 1
     6d8:	20 40       	sbci	r18, 0x00	; 0
     6da:	80 40       	sbci	r24, 0x00	; 0
     6dc:	e1 f7       	brne	.-8      	; 0x6d6 <main+0x1ec>
     6de:	00 c0       	rjmp	.+0      	; 0x6e0 <main+0x1f6>
     6e0:	00 00       	nop
			_delay_ms(2000);
			// Send temperature
			UART_sendString("GET /update?key=U1KZD3KPYBFH5DIZ&field2=");
     6e2:	83 ed       	ldi	r24, 0xD3	; 211
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	88 de       	rcall	.-752    	; 0x3f8 <UART_sendString>
     6e8:	9f ef       	ldi	r25, 0xFF	; 255
     6ea:	27 ea       	ldi	r18, 0xA7	; 167
     6ec:	81 e6       	ldi	r24, 0x61	; 97
     6ee:	91 50       	subi	r25, 0x01	; 1
     6f0:	20 40       	sbci	r18, 0x00	; 0
     6f2:	80 40       	sbci	r24, 0x00	; 0
     6f4:	e1 f7       	brne	.-8      	; 0x6ee <main+0x204>
     6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <main+0x20e>
			_delay_ms(2000);
			UART_sendString(buffer);
     6f8:	00 00       	nop
     6fa:	c7 01       	movw	r24, r14
     6fc:	7d de       	rcall	.-774    	; 0x3f8 <UART_sendString>
     6fe:	9f ef       	ldi	r25, 0xFF	; 255
     700:	27 ea       	ldi	r18, 0xA7	; 167
     702:	81 e6       	ldi	r24, 0x61	; 97
     704:	91 50       	subi	r25, 0x01	; 1
     706:	20 40       	sbci	r18, 0x00	; 0
     708:	80 40       	sbci	r24, 0x00	; 0
     70a:	e1 f7       	brne	.-8      	; 0x704 <main+0x21a>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <main+0x224>
			_delay_ms(2000);
			UART_sendString("\r\n\r\n");
     70e:	00 00       	nop
     710:	8e ec       	ldi	r24, 0xCE	; 206
     712:	91 e0       	ldi	r25, 0x01	; 1
     714:	71 de       	rcall	.-798    	; 0x3f8 <UART_sendString>
     716:	4a e0       	ldi	r20, 0x0A	; 10
     718:	b7 01       	movw	r22, r14
     71a:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <raw_R>
     71e:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <raw_R+0x1>
     722:	55 d2       	rcall	.+1194   	; 0xbce <__itoa_ncheck>

			
			itoa(raw_R, buffer, 10);
			// Start a connection as client to Thingspeak
			UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
     724:	8c e6       	ldi	r24, 0x6C	; 108
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	67 de       	rcall	.-818    	; 0x3f8 <UART_sendString>
     72a:	9f ef       	ldi	r25, 0xFF	; 255
     72c:	27 ea       	ldi	r18, 0xA7	; 167
     72e:	81 e6       	ldi	r24, 0x61	; 97
     730:	91 50       	subi	r25, 0x01	; 1
     732:	20 40       	sbci	r18, 0x00	; 0
     734:	80 40       	sbci	r24, 0x00	; 0
     736:	e1 f7       	brne	.-8      	; 0x730 <main+0x246>
     738:	00 c0       	rjmp	.+0      	; 0x73a <main+0x250>
     73a:	00 00       	nop
			_delay_ms(2000);
			// Specify the size of the data
			UART_sendString("AT+CIPSEND=45\r\n");
     73c:	85 e9       	ldi	r24, 0x95	; 149
     73e:	91 e0       	ldi	r25, 0x01	; 1
     740:	5b de       	rcall	.-842    	; 0x3f8 <UART_sendString>
     742:	9f ef       	ldi	r25, 0xFF	; 255
     744:	27 ea       	ldi	r18, 0xA7	; 167
     746:	81 e6       	ldi	r24, 0x61	; 97
     748:	91 50       	subi	r25, 0x01	; 1
     74a:	20 40       	sbci	r18, 0x00	; 0
     74c:	80 40       	sbci	r24, 0x00	; 0
     74e:	e1 f7       	brne	.-8      	; 0x748 <main+0x25e>
     750:	00 c0       	rjmp	.+0      	; 0x752 <main+0x268>
			_delay_ms(2000);
			// Send temperature
			UART_sendString("GET /update?key=U1KZD3KPYBFH5DIZ&field3=");
     752:	00 00       	nop
     754:	8c ef       	ldi	r24, 0xFC	; 252
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	4f de       	rcall	.-866    	; 0x3f8 <UART_sendString>
     75a:	9f ef       	ldi	r25, 0xFF	; 255
     75c:	27 ea       	ldi	r18, 0xA7	; 167
     75e:	81 e6       	ldi	r24, 0x61	; 97
     760:	91 50       	subi	r25, 0x01	; 1
     762:	20 40       	sbci	r18, 0x00	; 0
     764:	80 40       	sbci	r24, 0x00	; 0
     766:	e1 f7       	brne	.-8      	; 0x760 <main+0x276>
     768:	00 c0       	rjmp	.+0      	; 0x76a <main+0x280>
			_delay_ms(2000);
			UART_sendString(buffer);
     76a:	00 00       	nop
     76c:	c7 01       	movw	r24, r14
     76e:	44 de       	rcall	.-888    	; 0x3f8 <UART_sendString>
     770:	9f ef       	ldi	r25, 0xFF	; 255
     772:	27 ea       	ldi	r18, 0xA7	; 167
     774:	81 e6       	ldi	r24, 0x61	; 97
     776:	91 50       	subi	r25, 0x01	; 1
     778:	20 40       	sbci	r18, 0x00	; 0
     77a:	80 40       	sbci	r24, 0x00	; 0
     77c:	e1 f7       	brne	.-8      	; 0x776 <main+0x28c>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <main+0x296>
			_delay_ms(2000);
			UART_sendString("\r\n\r\n");
     780:	00 00       	nop
     782:	8e ec       	ldi	r24, 0xCE	; 206
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	38 de       	rcall	.-912    	; 0x3f8 <UART_sendString>
     788:	4a e0       	ldi	r20, 0x0A	; 10
     78a:	b7 01       	movw	r22, r14
     78c:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <raw_G>
     790:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <raw_G+0x1>

			
			itoa(raw_G, buffer, 10);
			// Start a connection as client to Thingspeak
			UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
     794:	1c d2       	rcall	.+1080   	; 0xbce <__itoa_ncheck>
     796:	8c e6       	ldi	r24, 0x6C	; 108
     798:	91 e0       	ldi	r25, 0x01	; 1
     79a:	2e de       	rcall	.-932    	; 0x3f8 <UART_sendString>
     79c:	9f ef       	ldi	r25, 0xFF	; 255
     79e:	27 ea       	ldi	r18, 0xA7	; 167
     7a0:	81 e6       	ldi	r24, 0x61	; 97
     7a2:	91 50       	subi	r25, 0x01	; 1
     7a4:	20 40       	sbci	r18, 0x00	; 0
     7a6:	80 40       	sbci	r24, 0x00	; 0
     7a8:	e1 f7       	brne	.-8      	; 0x7a2 <main+0x2b8>
     7aa:	00 c0       	rjmp	.+0      	; 0x7ac <main+0x2c2>
			_delay_ms(2000);
			// Specify the size of the data
			UART_sendString("AT+CIPSEND=45\r\n");
     7ac:	00 00       	nop
     7ae:	85 e9       	ldi	r24, 0x95	; 149
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	22 de       	rcall	.-956    	; 0x3f8 <UART_sendString>
     7b4:	9f ef       	ldi	r25, 0xFF	; 255
     7b6:	27 ea       	ldi	r18, 0xA7	; 167
     7b8:	81 e6       	ldi	r24, 0x61	; 97
     7ba:	91 50       	subi	r25, 0x01	; 1
     7bc:	20 40       	sbci	r18, 0x00	; 0
     7be:	80 40       	sbci	r24, 0x00	; 0
     7c0:	e1 f7       	brne	.-8      	; 0x7ba <main+0x2d0>
			_delay_ms(2000);
			// Send temperature
			UART_sendString("GET /update?key=U1KZD3KPYBFH5DIZ&field4=");
     7c2:	00 c0       	rjmp	.+0      	; 0x7c4 <main+0x2da>
     7c4:	00 00       	nop
     7c6:	85 e2       	ldi	r24, 0x25	; 37
     7c8:	92 e0       	ldi	r25, 0x02	; 2
     7ca:	16 de       	rcall	.-980    	; 0x3f8 <UART_sendString>
     7cc:	9f ef       	ldi	r25, 0xFF	; 255
     7ce:	27 ea       	ldi	r18, 0xA7	; 167
     7d0:	81 e6       	ldi	r24, 0x61	; 97
     7d2:	91 50       	subi	r25, 0x01	; 1
     7d4:	20 40       	sbci	r18, 0x00	; 0
     7d6:	80 40       	sbci	r24, 0x00	; 0
     7d8:	e1 f7       	brne	.-8      	; 0x7d2 <main+0x2e8>
			_delay_ms(2000);
			UART_sendString(buffer);
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <main+0x2f2>
     7dc:	00 00       	nop
     7de:	c7 01       	movw	r24, r14
     7e0:	0b de       	rcall	.-1002   	; 0x3f8 <UART_sendString>
     7e2:	9f ef       	ldi	r25, 0xFF	; 255
     7e4:	27 ea       	ldi	r18, 0xA7	; 167
     7e6:	81 e6       	ldi	r24, 0x61	; 97
     7e8:	91 50       	subi	r25, 0x01	; 1
     7ea:	20 40       	sbci	r18, 0x00	; 0
     7ec:	80 40       	sbci	r24, 0x00	; 0
     7ee:	e1 f7       	brne	.-8      	; 0x7e8 <main+0x2fe>
			_delay_ms(2000);
			UART_sendString("\r\n\r\n");
     7f0:	00 c0       	rjmp	.+0      	; 0x7f2 <main+0x308>
     7f2:	00 00       	nop
     7f4:	8e ec       	ldi	r24, 0xCE	; 206
     7f6:	91 e0       	ldi	r25, 0x01	; 1
     7f8:	ff dd       	rcall	.-1026   	; 0x3f8 <UART_sendString>
     7fa:	4a e0       	ldi	r20, 0x0A	; 10
     7fc:	b7 01       	movw	r22, r14
     7fe:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <raw_B>
     802:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <raw_B+0x1>

			
			itoa(raw_B, buffer, 10);
			// Start a connection as client to Thingspeak
			UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
     806:	e3 d1       	rcall	.+966    	; 0xbce <__itoa_ncheck>
     808:	8c e6       	ldi	r24, 0x6C	; 108
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	f5 dd       	rcall	.-1046   	; 0x3f8 <UART_sendString>
     80e:	9f ef       	ldi	r25, 0xFF	; 255
     810:	27 ea       	ldi	r18, 0xA7	; 167
     812:	81 e6       	ldi	r24, 0x61	; 97
     814:	91 50       	subi	r25, 0x01	; 1
     816:	20 40       	sbci	r18, 0x00	; 0
     818:	80 40       	sbci	r24, 0x00	; 0
     81a:	e1 f7       	brne	.-8      	; 0x814 <main+0x32a>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <main+0x334>
			_delay_ms(2000);
			// Specify the size of the data
			UART_sendString("AT+CIPSEND=45\r\n");
     81e:	00 00       	nop
     820:	85 e9       	ldi	r24, 0x95	; 149
     822:	91 e0       	ldi	r25, 0x01	; 1
     824:	e9 dd       	rcall	.-1070   	; 0x3f8 <UART_sendString>
     826:	9f ef       	ldi	r25, 0xFF	; 255
     828:	27 ea       	ldi	r18, 0xA7	; 167
     82a:	81 e6       	ldi	r24, 0x61	; 97
     82c:	91 50       	subi	r25, 0x01	; 1
     82e:	20 40       	sbci	r18, 0x00	; 0
     830:	80 40       	sbci	r24, 0x00	; 0
     832:	e1 f7       	brne	.-8      	; 0x82c <main+0x342>
     834:	00 c0       	rjmp	.+0      	; 0x836 <main+0x34c>
     836:	00 00       	nop
			_delay_ms(2000);
			// Send temperature
			UART_sendString("GET /update?key=U1KZD3KPYBFH5DIZ&field5=");
     838:	8e e4       	ldi	r24, 0x4E	; 78
     83a:	92 e0       	ldi	r25, 0x02	; 2
     83c:	dd dd       	rcall	.-1094   	; 0x3f8 <UART_sendString>
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	27 ea       	ldi	r18, 0xA7	; 167
     842:	81 e6       	ldi	r24, 0x61	; 97
     844:	91 50       	subi	r25, 0x01	; 1
     846:	20 40       	sbci	r18, 0x00	; 0
     848:	80 40       	sbci	r24, 0x00	; 0
     84a:	e1 f7       	brne	.-8      	; 0x844 <main+0x35a>
     84c:	00 c0       	rjmp	.+0      	; 0x84e <main+0x364>
     84e:	00 00       	nop
     850:	c7 01       	movw	r24, r14
			_delay_ms(2000);
			UART_sendString(buffer);
     852:	d2 dd       	rcall	.-1116   	; 0x3f8 <UART_sendString>
     854:	9f ef       	ldi	r25, 0xFF	; 255
     856:	27 ea       	ldi	r18, 0xA7	; 167
     858:	81 e6       	ldi	r24, 0x61	; 97
     85a:	91 50       	subi	r25, 0x01	; 1
     85c:	20 40       	sbci	r18, 0x00	; 0
     85e:	80 40       	sbci	r24, 0x00	; 0
     860:	e1 f7       	brne	.-8      	; 0x85a <main+0x370>
     862:	00 c0       	rjmp	.+0      	; 0x864 <main+0x37a>
     864:	00 00       	nop
     866:	8e ec       	ldi	r24, 0xCE	; 206
     868:	91 e0       	ldi	r25, 0x01	; 1
			_delay_ms(2000);
			UART_sendString("\r\n\r\n");
     86a:	c6 dd       	rcall	.-1140   	; 0x3f8 <UART_sendString>
     86c:	9f ef       	ldi	r25, 0xFF	; 255
     86e:	23 ed       	ldi	r18, 0xD3	; 211
     870:	80 e3       	ldi	r24, 0x30	; 48
     872:	91 50       	subi	r25, 0x01	; 1
     874:	20 40       	sbci	r18, 0x00	; 0
     876:	80 40       	sbci	r24, 0x00	; 0
     878:	e1 f7       	brne	.-8      	; 0x872 <main+0x388>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <main+0x392>
     87c:	00 00       	nop
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	a4 ce       	rjmp	.-696    	; 0x5d4 <main+0xea>

0000088c <__subsf3>:
     88c:	50 58       	subi	r21, 0x80	; 128

0000088e <__addsf3>:
     88e:	bb 27       	eor	r27, r27
     890:	aa 27       	eor	r26, r26
     892:	0e d0       	rcall	.+28     	; 0x8b0 <__addsf3x>
     894:	e0 c0       	rjmp	.+448    	; 0xa56 <__fp_round>
     896:	d1 d0       	rcall	.+418    	; 0xa3a <__fp_pscA>
     898:	30 f0       	brcs	.+12     	; 0x8a6 <__addsf3+0x18>
     89a:	d6 d0       	rcall	.+428    	; 0xa48 <__fp_pscB>
     89c:	20 f0       	brcs	.+8      	; 0x8a6 <__addsf3+0x18>
     89e:	31 f4       	brne	.+12     	; 0x8ac <__addsf3+0x1e>
     8a0:	9f 3f       	cpi	r25, 0xFF	; 255
     8a2:	11 f4       	brne	.+4      	; 0x8a8 <__addsf3+0x1a>
     8a4:	1e f4       	brtc	.+6      	; 0x8ac <__addsf3+0x1e>
     8a6:	c6 c0       	rjmp	.+396    	; 0xa34 <__fp_nan>
     8a8:	0e f4       	brtc	.+2      	; 0x8ac <__addsf3+0x1e>
     8aa:	e0 95       	com	r30
     8ac:	e7 fb       	bst	r30, 7
     8ae:	bc c0       	rjmp	.+376    	; 0xa28 <__fp_inf>

000008b0 <__addsf3x>:
     8b0:	e9 2f       	mov	r30, r25
     8b2:	e2 d0       	rcall	.+452    	; 0xa78 <__fp_split3>
     8b4:	80 f3       	brcs	.-32     	; 0x896 <__addsf3+0x8>
     8b6:	ba 17       	cp	r27, r26
     8b8:	62 07       	cpc	r22, r18
     8ba:	73 07       	cpc	r23, r19
     8bc:	84 07       	cpc	r24, r20
     8be:	95 07       	cpc	r25, r21
     8c0:	18 f0       	brcs	.+6      	; 0x8c8 <__addsf3x+0x18>
     8c2:	71 f4       	brne	.+28     	; 0x8e0 <__addsf3x+0x30>
     8c4:	9e f5       	brtc	.+102    	; 0x92c <__stack+0x2d>
     8c6:	fa c0       	rjmp	.+500    	; 0xabc <__fp_zero>
     8c8:	0e f4       	brtc	.+2      	; 0x8cc <__addsf3x+0x1c>
     8ca:	e0 95       	com	r30
     8cc:	0b 2e       	mov	r0, r27
     8ce:	ba 2f       	mov	r27, r26
     8d0:	a0 2d       	mov	r26, r0
     8d2:	0b 01       	movw	r0, r22
     8d4:	b9 01       	movw	r22, r18
     8d6:	90 01       	movw	r18, r0
     8d8:	0c 01       	movw	r0, r24
     8da:	ca 01       	movw	r24, r20
     8dc:	a0 01       	movw	r20, r0
     8de:	11 24       	eor	r1, r1
     8e0:	ff 27       	eor	r31, r31
     8e2:	59 1b       	sub	r21, r25
     8e4:	99 f0       	breq	.+38     	; 0x90c <__stack+0xd>
     8e6:	59 3f       	cpi	r21, 0xF9	; 249
     8e8:	50 f4       	brcc	.+20     	; 0x8fe <__addsf3x+0x4e>
     8ea:	50 3e       	cpi	r21, 0xE0	; 224
     8ec:	68 f1       	brcs	.+90     	; 0x948 <__stack+0x49>
     8ee:	1a 16       	cp	r1, r26
     8f0:	f0 40       	sbci	r31, 0x00	; 0
     8f2:	a2 2f       	mov	r26, r18
     8f4:	23 2f       	mov	r18, r19
     8f6:	34 2f       	mov	r19, r20
     8f8:	44 27       	eor	r20, r20
     8fa:	58 5f       	subi	r21, 0xF8	; 248
     8fc:	f3 cf       	rjmp	.-26     	; 0x8e4 <__addsf3x+0x34>
     8fe:	46 95       	lsr	r20
     900:	37 95       	ror	r19
     902:	27 95       	ror	r18
     904:	a7 95       	ror	r26
     906:	f0 40       	sbci	r31, 0x00	; 0
     908:	53 95       	inc	r21
     90a:	c9 f7       	brne	.-14     	; 0x8fe <__addsf3x+0x4e>
     90c:	7e f4       	brtc	.+30     	; 0x92c <__stack+0x2d>
     90e:	1f 16       	cp	r1, r31
     910:	ba 0b       	sbc	r27, r26
     912:	62 0b       	sbc	r22, r18
     914:	73 0b       	sbc	r23, r19
     916:	84 0b       	sbc	r24, r20
     918:	ba f0       	brmi	.+46     	; 0x948 <__stack+0x49>
     91a:	91 50       	subi	r25, 0x01	; 1
     91c:	a1 f0       	breq	.+40     	; 0x946 <__stack+0x47>
     91e:	ff 0f       	add	r31, r31
     920:	bb 1f       	adc	r27, r27
     922:	66 1f       	adc	r22, r22
     924:	77 1f       	adc	r23, r23
     926:	88 1f       	adc	r24, r24
     928:	c2 f7       	brpl	.-16     	; 0x91a <__stack+0x1b>
     92a:	0e c0       	rjmp	.+28     	; 0x948 <__stack+0x49>
     92c:	ba 0f       	add	r27, r26
     92e:	62 1f       	adc	r22, r18
     930:	73 1f       	adc	r23, r19
     932:	84 1f       	adc	r24, r20
     934:	48 f4       	brcc	.+18     	; 0x948 <__stack+0x49>
     936:	87 95       	ror	r24
     938:	77 95       	ror	r23
     93a:	67 95       	ror	r22
     93c:	b7 95       	ror	r27
     93e:	f7 95       	ror	r31
     940:	9e 3f       	cpi	r25, 0xFE	; 254
     942:	08 f0       	brcs	.+2      	; 0x946 <__stack+0x47>
     944:	b3 cf       	rjmp	.-154    	; 0x8ac <__addsf3+0x1e>
     946:	93 95       	inc	r25
     948:	88 0f       	add	r24, r24
     94a:	08 f0       	brcs	.+2      	; 0x94e <__stack+0x4f>
     94c:	99 27       	eor	r25, r25
     94e:	ee 0f       	add	r30, r30
     950:	97 95       	ror	r25
     952:	87 95       	ror	r24
     954:	08 95       	ret

00000956 <__fixunssfsi>:
     956:	98 d0       	rcall	.+304    	; 0xa88 <__fp_splitA>
     958:	88 f0       	brcs	.+34     	; 0x97c <__fixunssfsi+0x26>
     95a:	9f 57       	subi	r25, 0x7F	; 127
     95c:	90 f0       	brcs	.+36     	; 0x982 <__fixunssfsi+0x2c>
     95e:	b9 2f       	mov	r27, r25
     960:	99 27       	eor	r25, r25
     962:	b7 51       	subi	r27, 0x17	; 23
     964:	a0 f0       	brcs	.+40     	; 0x98e <__fixunssfsi+0x38>
     966:	d1 f0       	breq	.+52     	; 0x99c <__fixunssfsi+0x46>
     968:	66 0f       	add	r22, r22
     96a:	77 1f       	adc	r23, r23
     96c:	88 1f       	adc	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	1a f0       	brmi	.+6      	; 0x978 <__fixunssfsi+0x22>
     972:	ba 95       	dec	r27
     974:	c9 f7       	brne	.-14     	; 0x968 <__fixunssfsi+0x12>
     976:	12 c0       	rjmp	.+36     	; 0x99c <__fixunssfsi+0x46>
     978:	b1 30       	cpi	r27, 0x01	; 1
     97a:	81 f0       	breq	.+32     	; 0x99c <__fixunssfsi+0x46>
     97c:	9f d0       	rcall	.+318    	; 0xabc <__fp_zero>
     97e:	b1 e0       	ldi	r27, 0x01	; 1
     980:	08 95       	ret
     982:	9c c0       	rjmp	.+312    	; 0xabc <__fp_zero>
     984:	67 2f       	mov	r22, r23
     986:	78 2f       	mov	r23, r24
     988:	88 27       	eor	r24, r24
     98a:	b8 5f       	subi	r27, 0xF8	; 248
     98c:	39 f0       	breq	.+14     	; 0x99c <__fixunssfsi+0x46>
     98e:	b9 3f       	cpi	r27, 0xF9	; 249
     990:	cc f3       	brlt	.-14     	; 0x984 <__fixunssfsi+0x2e>
     992:	86 95       	lsr	r24
     994:	77 95       	ror	r23
     996:	67 95       	ror	r22
     998:	b3 95       	inc	r27
     99a:	d9 f7       	brne	.-10     	; 0x992 <__fixunssfsi+0x3c>
     99c:	3e f4       	brtc	.+14     	; 0x9ac <__fixunssfsi+0x56>
     99e:	90 95       	com	r25
     9a0:	80 95       	com	r24
     9a2:	70 95       	com	r23
     9a4:	61 95       	neg	r22
     9a6:	7f 4f       	sbci	r23, 0xFF	; 255
     9a8:	8f 4f       	sbci	r24, 0xFF	; 255
     9aa:	9f 4f       	sbci	r25, 0xFF	; 255
     9ac:	08 95       	ret

000009ae <__floatunsisf>:
     9ae:	e8 94       	clt
     9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <__floatsisf+0x12>

000009b2 <__floatsisf>:
     9b2:	97 fb       	bst	r25, 7
     9b4:	3e f4       	brtc	.+14     	; 0x9c4 <__floatsisf+0x12>
     9b6:	90 95       	com	r25
     9b8:	80 95       	com	r24
     9ba:	70 95       	com	r23
     9bc:	61 95       	neg	r22
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	8f 4f       	sbci	r24, 0xFF	; 255
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	99 23       	and	r25, r25
     9c6:	a9 f0       	breq	.+42     	; 0x9f2 <__floatsisf+0x40>
     9c8:	f9 2f       	mov	r31, r25
     9ca:	96 e9       	ldi	r25, 0x96	; 150
     9cc:	bb 27       	eor	r27, r27
     9ce:	93 95       	inc	r25
     9d0:	f6 95       	lsr	r31
     9d2:	87 95       	ror	r24
     9d4:	77 95       	ror	r23
     9d6:	67 95       	ror	r22
     9d8:	b7 95       	ror	r27
     9da:	f1 11       	cpse	r31, r1
     9dc:	f8 cf       	rjmp	.-16     	; 0x9ce <__floatsisf+0x1c>
     9de:	fa f4       	brpl	.+62     	; 0xa1e <__floatsisf+0x6c>
     9e0:	bb 0f       	add	r27, r27
     9e2:	11 f4       	brne	.+4      	; 0x9e8 <__floatsisf+0x36>
     9e4:	60 ff       	sbrs	r22, 0
     9e6:	1b c0       	rjmp	.+54     	; 0xa1e <__floatsisf+0x6c>
     9e8:	6f 5f       	subi	r22, 0xFF	; 255
     9ea:	7f 4f       	sbci	r23, 0xFF	; 255
     9ec:	8f 4f       	sbci	r24, 0xFF	; 255
     9ee:	9f 4f       	sbci	r25, 0xFF	; 255
     9f0:	16 c0       	rjmp	.+44     	; 0xa1e <__floatsisf+0x6c>
     9f2:	88 23       	and	r24, r24
     9f4:	11 f0       	breq	.+4      	; 0x9fa <__floatsisf+0x48>
     9f6:	96 e9       	ldi	r25, 0x96	; 150
     9f8:	11 c0       	rjmp	.+34     	; 0xa1c <__floatsisf+0x6a>
     9fa:	77 23       	and	r23, r23
     9fc:	21 f0       	breq	.+8      	; 0xa06 <__floatsisf+0x54>
     9fe:	9e e8       	ldi	r25, 0x8E	; 142
     a00:	87 2f       	mov	r24, r23
     a02:	76 2f       	mov	r23, r22
     a04:	05 c0       	rjmp	.+10     	; 0xa10 <__floatsisf+0x5e>
     a06:	66 23       	and	r22, r22
     a08:	71 f0       	breq	.+28     	; 0xa26 <__floatsisf+0x74>
     a0a:	96 e8       	ldi	r25, 0x86	; 134
     a0c:	86 2f       	mov	r24, r22
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	2a f0       	brmi	.+10     	; 0xa1e <__floatsisf+0x6c>
     a14:	9a 95       	dec	r25
     a16:	66 0f       	add	r22, r22
     a18:	77 1f       	adc	r23, r23
     a1a:	88 1f       	adc	r24, r24
     a1c:	da f7       	brpl	.-10     	; 0xa14 <__floatsisf+0x62>
     a1e:	88 0f       	add	r24, r24
     a20:	96 95       	lsr	r25
     a22:	87 95       	ror	r24
     a24:	97 f9       	bld	r25, 7
     a26:	08 95       	ret

00000a28 <__fp_inf>:
     a28:	97 f9       	bld	r25, 7
     a2a:	9f 67       	ori	r25, 0x7F	; 127
     a2c:	80 e8       	ldi	r24, 0x80	; 128
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	08 95       	ret

00000a34 <__fp_nan>:
     a34:	9f ef       	ldi	r25, 0xFF	; 255
     a36:	80 ec       	ldi	r24, 0xC0	; 192
     a38:	08 95       	ret

00000a3a <__fp_pscA>:
     a3a:	00 24       	eor	r0, r0
     a3c:	0a 94       	dec	r0
     a3e:	16 16       	cp	r1, r22
     a40:	17 06       	cpc	r1, r23
     a42:	18 06       	cpc	r1, r24
     a44:	09 06       	cpc	r0, r25
     a46:	08 95       	ret

00000a48 <__fp_pscB>:
     a48:	00 24       	eor	r0, r0
     a4a:	0a 94       	dec	r0
     a4c:	12 16       	cp	r1, r18
     a4e:	13 06       	cpc	r1, r19
     a50:	14 06       	cpc	r1, r20
     a52:	05 06       	cpc	r0, r21
     a54:	08 95       	ret

00000a56 <__fp_round>:
     a56:	09 2e       	mov	r0, r25
     a58:	03 94       	inc	r0
     a5a:	00 0c       	add	r0, r0
     a5c:	11 f4       	brne	.+4      	; 0xa62 <__fp_round+0xc>
     a5e:	88 23       	and	r24, r24
     a60:	52 f0       	brmi	.+20     	; 0xa76 <__fp_round+0x20>
     a62:	bb 0f       	add	r27, r27
     a64:	40 f4       	brcc	.+16     	; 0xa76 <__fp_round+0x20>
     a66:	bf 2b       	or	r27, r31
     a68:	11 f4       	brne	.+4      	; 0xa6e <__fp_round+0x18>
     a6a:	60 ff       	sbrs	r22, 0
     a6c:	04 c0       	rjmp	.+8      	; 0xa76 <__fp_round+0x20>
     a6e:	6f 5f       	subi	r22, 0xFF	; 255
     a70:	7f 4f       	sbci	r23, 0xFF	; 255
     a72:	8f 4f       	sbci	r24, 0xFF	; 255
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	08 95       	ret

00000a78 <__fp_split3>:
     a78:	57 fd       	sbrc	r21, 7
     a7a:	90 58       	subi	r25, 0x80	; 128
     a7c:	44 0f       	add	r20, r20
     a7e:	55 1f       	adc	r21, r21
     a80:	59 f0       	breq	.+22     	; 0xa98 <__fp_splitA+0x10>
     a82:	5f 3f       	cpi	r21, 0xFF	; 255
     a84:	71 f0       	breq	.+28     	; 0xaa2 <__fp_splitA+0x1a>
     a86:	47 95       	ror	r20

00000a88 <__fp_splitA>:
     a88:	88 0f       	add	r24, r24
     a8a:	97 fb       	bst	r25, 7
     a8c:	99 1f       	adc	r25, r25
     a8e:	61 f0       	breq	.+24     	; 0xaa8 <__fp_splitA+0x20>
     a90:	9f 3f       	cpi	r25, 0xFF	; 255
     a92:	79 f0       	breq	.+30     	; 0xab2 <__fp_splitA+0x2a>
     a94:	87 95       	ror	r24
     a96:	08 95       	ret
     a98:	12 16       	cp	r1, r18
     a9a:	13 06       	cpc	r1, r19
     a9c:	14 06       	cpc	r1, r20
     a9e:	55 1f       	adc	r21, r21
     aa0:	f2 cf       	rjmp	.-28     	; 0xa86 <__fp_split3+0xe>
     aa2:	46 95       	lsr	r20
     aa4:	f1 df       	rcall	.-30     	; 0xa88 <__fp_splitA>
     aa6:	08 c0       	rjmp	.+16     	; 0xab8 <__fp_splitA+0x30>
     aa8:	16 16       	cp	r1, r22
     aaa:	17 06       	cpc	r1, r23
     aac:	18 06       	cpc	r1, r24
     aae:	99 1f       	adc	r25, r25
     ab0:	f1 cf       	rjmp	.-30     	; 0xa94 <__fp_splitA+0xc>
     ab2:	86 95       	lsr	r24
     ab4:	71 05       	cpc	r23, r1
     ab6:	61 05       	cpc	r22, r1
     ab8:	08 94       	sec
     aba:	08 95       	ret

00000abc <__fp_zero>:
     abc:	e8 94       	clt

00000abe <__fp_szero>:
     abe:	bb 27       	eor	r27, r27
     ac0:	66 27       	eor	r22, r22
     ac2:	77 27       	eor	r23, r23
     ac4:	cb 01       	movw	r24, r22
     ac6:	97 f9       	bld	r25, 7
     ac8:	08 95       	ret

00000aca <__mulsf3>:
     aca:	0b d0       	rcall	.+22     	; 0xae2 <__mulsf3x>
     acc:	c4 cf       	rjmp	.-120    	; 0xa56 <__fp_round>
     ace:	b5 df       	rcall	.-150    	; 0xa3a <__fp_pscA>
     ad0:	28 f0       	brcs	.+10     	; 0xadc <__mulsf3+0x12>
     ad2:	ba df       	rcall	.-140    	; 0xa48 <__fp_pscB>
     ad4:	18 f0       	brcs	.+6      	; 0xadc <__mulsf3+0x12>
     ad6:	95 23       	and	r25, r21
     ad8:	09 f0       	breq	.+2      	; 0xadc <__mulsf3+0x12>
     ada:	a6 cf       	rjmp	.-180    	; 0xa28 <__fp_inf>
     adc:	ab cf       	rjmp	.-170    	; 0xa34 <__fp_nan>
     ade:	11 24       	eor	r1, r1
     ae0:	ee cf       	rjmp	.-36     	; 0xabe <__fp_szero>

00000ae2 <__mulsf3x>:
     ae2:	ca df       	rcall	.-108    	; 0xa78 <__fp_split3>
     ae4:	a0 f3       	brcs	.-24     	; 0xace <__mulsf3+0x4>

00000ae6 <__mulsf3_pse>:
     ae6:	95 9f       	mul	r25, r21
     ae8:	d1 f3       	breq	.-12     	; 0xade <__mulsf3+0x14>
     aea:	95 0f       	add	r25, r21
     aec:	50 e0       	ldi	r21, 0x00	; 0
     aee:	55 1f       	adc	r21, r21
     af0:	62 9f       	mul	r22, r18
     af2:	f0 01       	movw	r30, r0
     af4:	72 9f       	mul	r23, r18
     af6:	bb 27       	eor	r27, r27
     af8:	f0 0d       	add	r31, r0
     afa:	b1 1d       	adc	r27, r1
     afc:	63 9f       	mul	r22, r19
     afe:	aa 27       	eor	r26, r26
     b00:	f0 0d       	add	r31, r0
     b02:	b1 1d       	adc	r27, r1
     b04:	aa 1f       	adc	r26, r26
     b06:	64 9f       	mul	r22, r20
     b08:	66 27       	eor	r22, r22
     b0a:	b0 0d       	add	r27, r0
     b0c:	a1 1d       	adc	r26, r1
     b0e:	66 1f       	adc	r22, r22
     b10:	82 9f       	mul	r24, r18
     b12:	22 27       	eor	r18, r18
     b14:	b0 0d       	add	r27, r0
     b16:	a1 1d       	adc	r26, r1
     b18:	62 1f       	adc	r22, r18
     b1a:	73 9f       	mul	r23, r19
     b1c:	b0 0d       	add	r27, r0
     b1e:	a1 1d       	adc	r26, r1
     b20:	62 1f       	adc	r22, r18
     b22:	83 9f       	mul	r24, r19
     b24:	a0 0d       	add	r26, r0
     b26:	61 1d       	adc	r22, r1
     b28:	22 1f       	adc	r18, r18
     b2a:	74 9f       	mul	r23, r20
     b2c:	33 27       	eor	r19, r19
     b2e:	a0 0d       	add	r26, r0
     b30:	61 1d       	adc	r22, r1
     b32:	23 1f       	adc	r18, r19
     b34:	84 9f       	mul	r24, r20
     b36:	60 0d       	add	r22, r0
     b38:	21 1d       	adc	r18, r1
     b3a:	82 2f       	mov	r24, r18
     b3c:	76 2f       	mov	r23, r22
     b3e:	6a 2f       	mov	r22, r26
     b40:	11 24       	eor	r1, r1
     b42:	9f 57       	subi	r25, 0x7F	; 127
     b44:	50 40       	sbci	r21, 0x00	; 0
     b46:	8a f0       	brmi	.+34     	; 0xb6a <__mulsf3_pse+0x84>
     b48:	e1 f0       	breq	.+56     	; 0xb82 <__mulsf3_pse+0x9c>
     b4a:	88 23       	and	r24, r24
     b4c:	4a f0       	brmi	.+18     	; 0xb60 <__mulsf3_pse+0x7a>
     b4e:	ee 0f       	add	r30, r30
     b50:	ff 1f       	adc	r31, r31
     b52:	bb 1f       	adc	r27, r27
     b54:	66 1f       	adc	r22, r22
     b56:	77 1f       	adc	r23, r23
     b58:	88 1f       	adc	r24, r24
     b5a:	91 50       	subi	r25, 0x01	; 1
     b5c:	50 40       	sbci	r21, 0x00	; 0
     b5e:	a9 f7       	brne	.-22     	; 0xb4a <__mulsf3_pse+0x64>
     b60:	9e 3f       	cpi	r25, 0xFE	; 254
     b62:	51 05       	cpc	r21, r1
     b64:	70 f0       	brcs	.+28     	; 0xb82 <__mulsf3_pse+0x9c>
     b66:	60 cf       	rjmp	.-320    	; 0xa28 <__fp_inf>
     b68:	aa cf       	rjmp	.-172    	; 0xabe <__fp_szero>
     b6a:	5f 3f       	cpi	r21, 0xFF	; 255
     b6c:	ec f3       	brlt	.-6      	; 0xb68 <__mulsf3_pse+0x82>
     b6e:	98 3e       	cpi	r25, 0xE8	; 232
     b70:	dc f3       	brlt	.-10     	; 0xb68 <__mulsf3_pse+0x82>
     b72:	86 95       	lsr	r24
     b74:	77 95       	ror	r23
     b76:	67 95       	ror	r22
     b78:	b7 95       	ror	r27
     b7a:	f7 95       	ror	r31
     b7c:	e7 95       	ror	r30
     b7e:	9f 5f       	subi	r25, 0xFF	; 255
     b80:	c1 f7       	brne	.-16     	; 0xb72 <__mulsf3_pse+0x8c>
     b82:	fe 2b       	or	r31, r30
     b84:	88 0f       	add	r24, r24
     b86:	91 1d       	adc	r25, r1
     b88:	96 95       	lsr	r25
     b8a:	87 95       	ror	r24
     b8c:	97 f9       	bld	r25, 7
     b8e:	08 95       	ret

00000b90 <dtostrf>:
     b90:	ef 92       	push	r14
     b92:	0f 93       	push	r16
     b94:	1f 93       	push	r17
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	e8 01       	movw	r28, r16
     b9c:	47 fd       	sbrc	r20, 7
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <dtostrf+0x14>
     ba0:	34 e0       	ldi	r19, 0x04	; 4
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <dtostrf+0x16>
     ba4:	34 e1       	ldi	r19, 0x14	; 20
     ba6:	04 2e       	mov	r0, r20
     ba8:	00 0c       	add	r0, r0
     baa:	55 0b       	sbc	r21, r21
     bac:	57 ff       	sbrs	r21, 7
     bae:	03 c0       	rjmp	.+6      	; 0xbb6 <dtostrf+0x26>
     bb0:	51 95       	neg	r21
     bb2:	41 95       	neg	r20
     bb4:	51 09       	sbc	r21, r1
     bb6:	e3 2e       	mov	r14, r19
     bb8:	02 2f       	mov	r16, r18
     bba:	24 2f       	mov	r18, r20
     bbc:	ae 01       	movw	r20, r28
     bbe:	1b d2       	rcall	.+1078   	; 0xff6 <dtoa_prf>
     bc0:	ce 01       	movw	r24, r28
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	1f 91       	pop	r17
     bc8:	0f 91       	pop	r16
     bca:	ef 90       	pop	r14
     bcc:	08 95       	ret

00000bce <__itoa_ncheck>:
     bce:	bb 27       	eor	r27, r27
     bd0:	4a 30       	cpi	r20, 0x0A	; 10
     bd2:	31 f4       	brne	.+12     	; 0xbe0 <__itoa_ncheck+0x12>
     bd4:	99 23       	and	r25, r25
     bd6:	22 f4       	brpl	.+8      	; 0xbe0 <__itoa_ncheck+0x12>
     bd8:	bd e2       	ldi	r27, 0x2D	; 45
     bda:	90 95       	com	r25
     bdc:	81 95       	neg	r24
     bde:	9f 4f       	sbci	r25, 0xFF	; 255
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <__utoa_common>

00000be2 <__utoa_ncheck>:
     be2:	bb 27       	eor	r27, r27

00000be4 <__utoa_common>:
     be4:	fb 01       	movw	r30, r22
     be6:	55 27       	eor	r21, r21
     be8:	aa 27       	eor	r26, r26
     bea:	88 0f       	add	r24, r24
     bec:	99 1f       	adc	r25, r25
     bee:	aa 1f       	adc	r26, r26
     bf0:	a4 17       	cp	r26, r20
     bf2:	10 f0       	brcs	.+4      	; 0xbf8 <__utoa_common+0x14>
     bf4:	a4 1b       	sub	r26, r20
     bf6:	83 95       	inc	r24
     bf8:	50 51       	subi	r21, 0x10	; 16
     bfa:	b9 f7       	brne	.-18     	; 0xbea <__utoa_common+0x6>
     bfc:	a0 5d       	subi	r26, 0xD0	; 208
     bfe:	aa 33       	cpi	r26, 0x3A	; 58
     c00:	08 f0       	brcs	.+2      	; 0xc04 <__utoa_common+0x20>
     c02:	a9 5d       	subi	r26, 0xD9	; 217
     c04:	a1 93       	st	Z+, r26
     c06:	00 97       	sbiw	r24, 0x00	; 0
     c08:	79 f7       	brne	.-34     	; 0xbe8 <__utoa_common+0x4>
     c0a:	b1 11       	cpse	r27, r1
     c0c:	b1 93       	st	Z+, r27
     c0e:	11 92       	st	Z+, r1
     c10:	cb 01       	movw	r24, r22
     c12:	36 c4       	rjmp	.+2156   	; 0x1480 <strrev>

00000c14 <sprintf>:
     c14:	ae e0       	ldi	r26, 0x0E	; 14
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	ef e0       	ldi	r30, 0x0F	; 15
     c1a:	f6 e0       	ldi	r31, 0x06	; 6
     c1c:	e9 c4       	rjmp	.+2514   	; 0x15f0 <__prologue_saves__+0x1c>
     c1e:	0d 89       	ldd	r16, Y+21	; 0x15
     c20:	1e 89       	ldd	r17, Y+22	; 0x16
     c22:	86 e0       	ldi	r24, 0x06	; 6
     c24:	8c 83       	std	Y+4, r24	; 0x04
     c26:	1a 83       	std	Y+2, r17	; 0x02
     c28:	09 83       	std	Y+1, r16	; 0x01
     c2a:	8f ef       	ldi	r24, 0xFF	; 255
     c2c:	9f e7       	ldi	r25, 0x7F	; 127
     c2e:	9e 83       	std	Y+6, r25	; 0x06
     c30:	8d 83       	std	Y+5, r24	; 0x05
     c32:	ae 01       	movw	r20, r28
     c34:	47 5e       	subi	r20, 0xE7	; 231
     c36:	5f 4f       	sbci	r21, 0xFF	; 255
     c38:	6f 89       	ldd	r22, Y+23	; 0x17
     c3a:	78 8d       	ldd	r23, Y+24	; 0x18
     c3c:	ce 01       	movw	r24, r28
     c3e:	01 96       	adiw	r24, 0x01	; 1
     c40:	08 d0       	rcall	.+16     	; 0xc52 <vfprintf>
     c42:	ef 81       	ldd	r30, Y+7	; 0x07
     c44:	f8 85       	ldd	r31, Y+8	; 0x08
     c46:	e0 0f       	add	r30, r16
     c48:	f1 1f       	adc	r31, r17
     c4a:	10 82       	st	Z, r1
     c4c:	2e 96       	adiw	r28, 0x0e	; 14
     c4e:	e4 e0       	ldi	r30, 0x04	; 4
     c50:	eb c4       	rjmp	.+2518   	; 0x1628 <__epilogue_restores__+0x1c>

00000c52 <vfprintf>:
     c52:	ab e0       	ldi	r26, 0x0B	; 11
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	ee e2       	ldi	r30, 0x2E	; 46
     c58:	f6 e0       	ldi	r31, 0x06	; 6
     c5a:	bc c4       	rjmp	.+2424   	; 0x15d4 <__prologue_saves__>
     c5c:	6c 01       	movw	r12, r24
     c5e:	7b 01       	movw	r14, r22
     c60:	8a 01       	movw	r16, r20
     c62:	fc 01       	movw	r30, r24
     c64:	17 82       	std	Z+7, r1	; 0x07
     c66:	16 82       	std	Z+6, r1	; 0x06
     c68:	83 81       	ldd	r24, Z+3	; 0x03
     c6a:	81 ff       	sbrs	r24, 1
     c6c:	bf c1       	rjmp	.+894    	; 0xfec <vfprintf+0x39a>
     c6e:	ce 01       	movw	r24, r28
     c70:	01 96       	adiw	r24, 0x01	; 1
     c72:	3c 01       	movw	r6, r24
     c74:	f6 01       	movw	r30, r12
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	f7 01       	movw	r30, r14
     c7a:	93 fd       	sbrc	r25, 3
     c7c:	85 91       	lpm	r24, Z+
     c7e:	93 ff       	sbrs	r25, 3
     c80:	81 91       	ld	r24, Z+
     c82:	7f 01       	movw	r14, r30
     c84:	88 23       	and	r24, r24
     c86:	09 f4       	brne	.+2      	; 0xc8a <vfprintf+0x38>
     c88:	ad c1       	rjmp	.+858    	; 0xfe4 <vfprintf+0x392>
     c8a:	85 32       	cpi	r24, 0x25	; 37
     c8c:	39 f4       	brne	.+14     	; 0xc9c <vfprintf+0x4a>
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	7f 01       	movw	r14, r30
     c98:	85 32       	cpi	r24, 0x25	; 37
     c9a:	21 f4       	brne	.+8      	; 0xca4 <vfprintf+0x52>
     c9c:	b6 01       	movw	r22, r12
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	ff d3       	rcall	.+2046   	; 0x14a0 <fputc>
     ca2:	e8 cf       	rjmp	.-48     	; 0xc74 <vfprintf+0x22>
     ca4:	91 2c       	mov	r9, r1
     ca6:	21 2c       	mov	r2, r1
     ca8:	31 2c       	mov	r3, r1
     caa:	ff e1       	ldi	r31, 0x1F	; 31
     cac:	f3 15       	cp	r31, r3
     cae:	d8 f0       	brcs	.+54     	; 0xce6 <vfprintf+0x94>
     cb0:	8b 32       	cpi	r24, 0x2B	; 43
     cb2:	79 f0       	breq	.+30     	; 0xcd2 <vfprintf+0x80>
     cb4:	38 f4       	brcc	.+14     	; 0xcc4 <vfprintf+0x72>
     cb6:	80 32       	cpi	r24, 0x20	; 32
     cb8:	79 f0       	breq	.+30     	; 0xcd8 <vfprintf+0x86>
     cba:	83 32       	cpi	r24, 0x23	; 35
     cbc:	a1 f4       	brne	.+40     	; 0xce6 <vfprintf+0x94>
     cbe:	23 2d       	mov	r18, r3
     cc0:	20 61       	ori	r18, 0x10	; 16
     cc2:	1d c0       	rjmp	.+58     	; 0xcfe <vfprintf+0xac>
     cc4:	8d 32       	cpi	r24, 0x2D	; 45
     cc6:	61 f0       	breq	.+24     	; 0xce0 <vfprintf+0x8e>
     cc8:	80 33       	cpi	r24, 0x30	; 48
     cca:	69 f4       	brne	.+26     	; 0xce6 <vfprintf+0x94>
     ccc:	23 2d       	mov	r18, r3
     cce:	21 60       	ori	r18, 0x01	; 1
     cd0:	16 c0       	rjmp	.+44     	; 0xcfe <vfprintf+0xac>
     cd2:	83 2d       	mov	r24, r3
     cd4:	82 60       	ori	r24, 0x02	; 2
     cd6:	38 2e       	mov	r3, r24
     cd8:	e3 2d       	mov	r30, r3
     cda:	e4 60       	ori	r30, 0x04	; 4
     cdc:	3e 2e       	mov	r3, r30
     cde:	2a c0       	rjmp	.+84     	; 0xd34 <vfprintf+0xe2>
     ce0:	f3 2d       	mov	r31, r3
     ce2:	f8 60       	ori	r31, 0x08	; 8
     ce4:	1d c0       	rjmp	.+58     	; 0xd20 <vfprintf+0xce>
     ce6:	37 fc       	sbrc	r3, 7
     ce8:	2d c0       	rjmp	.+90     	; 0xd44 <vfprintf+0xf2>
     cea:	20 ed       	ldi	r18, 0xD0	; 208
     cec:	28 0f       	add	r18, r24
     cee:	2a 30       	cpi	r18, 0x0A	; 10
     cf0:	40 f0       	brcs	.+16     	; 0xd02 <vfprintf+0xb0>
     cf2:	8e 32       	cpi	r24, 0x2E	; 46
     cf4:	b9 f4       	brne	.+46     	; 0xd24 <vfprintf+0xd2>
     cf6:	36 fc       	sbrc	r3, 6
     cf8:	75 c1       	rjmp	.+746    	; 0xfe4 <vfprintf+0x392>
     cfa:	23 2d       	mov	r18, r3
     cfc:	20 64       	ori	r18, 0x40	; 64
     cfe:	32 2e       	mov	r3, r18
     d00:	19 c0       	rjmp	.+50     	; 0xd34 <vfprintf+0xe2>
     d02:	36 fe       	sbrs	r3, 6
     d04:	06 c0       	rjmp	.+12     	; 0xd12 <vfprintf+0xc0>
     d06:	8a e0       	ldi	r24, 0x0A	; 10
     d08:	98 9e       	mul	r9, r24
     d0a:	20 0d       	add	r18, r0
     d0c:	11 24       	eor	r1, r1
     d0e:	92 2e       	mov	r9, r18
     d10:	11 c0       	rjmp	.+34     	; 0xd34 <vfprintf+0xe2>
     d12:	ea e0       	ldi	r30, 0x0A	; 10
     d14:	2e 9e       	mul	r2, r30
     d16:	20 0d       	add	r18, r0
     d18:	11 24       	eor	r1, r1
     d1a:	22 2e       	mov	r2, r18
     d1c:	f3 2d       	mov	r31, r3
     d1e:	f0 62       	ori	r31, 0x20	; 32
     d20:	3f 2e       	mov	r3, r31
     d22:	08 c0       	rjmp	.+16     	; 0xd34 <vfprintf+0xe2>
     d24:	8c 36       	cpi	r24, 0x6C	; 108
     d26:	21 f4       	brne	.+8      	; 0xd30 <vfprintf+0xde>
     d28:	83 2d       	mov	r24, r3
     d2a:	80 68       	ori	r24, 0x80	; 128
     d2c:	38 2e       	mov	r3, r24
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <vfprintf+0xe2>
     d30:	88 36       	cpi	r24, 0x68	; 104
     d32:	41 f4       	brne	.+16     	; 0xd44 <vfprintf+0xf2>
     d34:	f7 01       	movw	r30, r14
     d36:	93 fd       	sbrc	r25, 3
     d38:	85 91       	lpm	r24, Z+
     d3a:	93 ff       	sbrs	r25, 3
     d3c:	81 91       	ld	r24, Z+
     d3e:	7f 01       	movw	r14, r30
     d40:	81 11       	cpse	r24, r1
     d42:	b3 cf       	rjmp	.-154    	; 0xcaa <vfprintf+0x58>
     d44:	98 2f       	mov	r25, r24
     d46:	9f 7d       	andi	r25, 0xDF	; 223
     d48:	95 54       	subi	r25, 0x45	; 69
     d4a:	93 30       	cpi	r25, 0x03	; 3
     d4c:	28 f4       	brcc	.+10     	; 0xd58 <vfprintf+0x106>
     d4e:	0c 5f       	subi	r16, 0xFC	; 252
     d50:	1f 4f       	sbci	r17, 0xFF	; 255
     d52:	9f e3       	ldi	r25, 0x3F	; 63
     d54:	99 83       	std	Y+1, r25	; 0x01
     d56:	0d c0       	rjmp	.+26     	; 0xd72 <vfprintf+0x120>
     d58:	83 36       	cpi	r24, 0x63	; 99
     d5a:	31 f0       	breq	.+12     	; 0xd68 <vfprintf+0x116>
     d5c:	83 37       	cpi	r24, 0x73	; 115
     d5e:	71 f0       	breq	.+28     	; 0xd7c <vfprintf+0x12a>
     d60:	83 35       	cpi	r24, 0x53	; 83
     d62:	09 f0       	breq	.+2      	; 0xd66 <vfprintf+0x114>
     d64:	55 c0       	rjmp	.+170    	; 0xe10 <vfprintf+0x1be>
     d66:	20 c0       	rjmp	.+64     	; 0xda8 <vfprintf+0x156>
     d68:	f8 01       	movw	r30, r16
     d6a:	80 81       	ld	r24, Z
     d6c:	89 83       	std	Y+1, r24	; 0x01
     d6e:	0e 5f       	subi	r16, 0xFE	; 254
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	88 24       	eor	r8, r8
     d74:	83 94       	inc	r8
     d76:	91 2c       	mov	r9, r1
     d78:	53 01       	movw	r10, r6
     d7a:	12 c0       	rjmp	.+36     	; 0xda0 <vfprintf+0x14e>
     d7c:	28 01       	movw	r4, r16
     d7e:	f2 e0       	ldi	r31, 0x02	; 2
     d80:	4f 0e       	add	r4, r31
     d82:	51 1c       	adc	r5, r1
     d84:	f8 01       	movw	r30, r16
     d86:	a0 80       	ld	r10, Z
     d88:	b1 80       	ldd	r11, Z+1	; 0x01
     d8a:	36 fe       	sbrs	r3, 6
     d8c:	03 c0       	rjmp	.+6      	; 0xd94 <vfprintf+0x142>
     d8e:	69 2d       	mov	r22, r9
     d90:	70 e0       	ldi	r23, 0x00	; 0
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <vfprintf+0x146>
     d94:	6f ef       	ldi	r22, 0xFF	; 255
     d96:	7f ef       	ldi	r23, 0xFF	; 255
     d98:	c5 01       	movw	r24, r10
     d9a:	67 d3       	rcall	.+1742   	; 0x146a <strnlen>
     d9c:	4c 01       	movw	r8, r24
     d9e:	82 01       	movw	r16, r4
     da0:	f3 2d       	mov	r31, r3
     da2:	ff 77       	andi	r31, 0x7F	; 127
     da4:	3f 2e       	mov	r3, r31
     da6:	15 c0       	rjmp	.+42     	; 0xdd2 <vfprintf+0x180>
     da8:	28 01       	movw	r4, r16
     daa:	22 e0       	ldi	r18, 0x02	; 2
     dac:	42 0e       	add	r4, r18
     dae:	51 1c       	adc	r5, r1
     db0:	f8 01       	movw	r30, r16
     db2:	a0 80       	ld	r10, Z
     db4:	b1 80       	ldd	r11, Z+1	; 0x01
     db6:	36 fe       	sbrs	r3, 6
     db8:	03 c0       	rjmp	.+6      	; 0xdc0 <vfprintf+0x16e>
     dba:	69 2d       	mov	r22, r9
     dbc:	70 e0       	ldi	r23, 0x00	; 0
     dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <vfprintf+0x172>
     dc0:	6f ef       	ldi	r22, 0xFF	; 255
     dc2:	7f ef       	ldi	r23, 0xFF	; 255
     dc4:	c5 01       	movw	r24, r10
     dc6:	46 d3       	rcall	.+1676   	; 0x1454 <strnlen_P>
     dc8:	4c 01       	movw	r8, r24
     dca:	f3 2d       	mov	r31, r3
     dcc:	f0 68       	ori	r31, 0x80	; 128
     dce:	3f 2e       	mov	r3, r31
     dd0:	82 01       	movw	r16, r4
     dd2:	33 fc       	sbrc	r3, 3
     dd4:	19 c0       	rjmp	.+50     	; 0xe08 <vfprintf+0x1b6>
     dd6:	82 2d       	mov	r24, r2
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	88 16       	cp	r8, r24
     ddc:	99 06       	cpc	r9, r25
     dde:	a0 f4       	brcc	.+40     	; 0xe08 <vfprintf+0x1b6>
     de0:	b6 01       	movw	r22, r12
     de2:	80 e2       	ldi	r24, 0x20	; 32
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	5c d3       	rcall	.+1720   	; 0x14a0 <fputc>
     de8:	2a 94       	dec	r2
     dea:	f5 cf       	rjmp	.-22     	; 0xdd6 <vfprintf+0x184>
     dec:	f5 01       	movw	r30, r10
     dee:	37 fc       	sbrc	r3, 7
     df0:	85 91       	lpm	r24, Z+
     df2:	37 fe       	sbrs	r3, 7
     df4:	81 91       	ld	r24, Z+
     df6:	5f 01       	movw	r10, r30
     df8:	b6 01       	movw	r22, r12
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	51 d3       	rcall	.+1698   	; 0x14a0 <fputc>
     dfe:	21 10       	cpse	r2, r1
     e00:	2a 94       	dec	r2
     e02:	21 e0       	ldi	r18, 0x01	; 1
     e04:	82 1a       	sub	r8, r18
     e06:	91 08       	sbc	r9, r1
     e08:	81 14       	cp	r8, r1
     e0a:	91 04       	cpc	r9, r1
     e0c:	79 f7       	brne	.-34     	; 0xdec <vfprintf+0x19a>
     e0e:	e1 c0       	rjmp	.+450    	; 0xfd2 <vfprintf+0x380>
     e10:	84 36       	cpi	r24, 0x64	; 100
     e12:	11 f0       	breq	.+4      	; 0xe18 <vfprintf+0x1c6>
     e14:	89 36       	cpi	r24, 0x69	; 105
     e16:	39 f5       	brne	.+78     	; 0xe66 <vfprintf+0x214>
     e18:	f8 01       	movw	r30, r16
     e1a:	37 fe       	sbrs	r3, 7
     e1c:	07 c0       	rjmp	.+14     	; 0xe2c <vfprintf+0x1da>
     e1e:	60 81       	ld	r22, Z
     e20:	71 81       	ldd	r23, Z+1	; 0x01
     e22:	82 81       	ldd	r24, Z+2	; 0x02
     e24:	93 81       	ldd	r25, Z+3	; 0x03
     e26:	0c 5f       	subi	r16, 0xFC	; 252
     e28:	1f 4f       	sbci	r17, 0xFF	; 255
     e2a:	08 c0       	rjmp	.+16     	; 0xe3c <vfprintf+0x1ea>
     e2c:	60 81       	ld	r22, Z
     e2e:	71 81       	ldd	r23, Z+1	; 0x01
     e30:	07 2e       	mov	r0, r23
     e32:	00 0c       	add	r0, r0
     e34:	88 0b       	sbc	r24, r24
     e36:	99 0b       	sbc	r25, r25
     e38:	0e 5f       	subi	r16, 0xFE	; 254
     e3a:	1f 4f       	sbci	r17, 0xFF	; 255
     e3c:	f3 2d       	mov	r31, r3
     e3e:	ff 76       	andi	r31, 0x6F	; 111
     e40:	3f 2e       	mov	r3, r31
     e42:	97 ff       	sbrs	r25, 7
     e44:	09 c0       	rjmp	.+18     	; 0xe58 <vfprintf+0x206>
     e46:	90 95       	com	r25
     e48:	80 95       	com	r24
     e4a:	70 95       	com	r23
     e4c:	61 95       	neg	r22
     e4e:	7f 4f       	sbci	r23, 0xFF	; 255
     e50:	8f 4f       	sbci	r24, 0xFF	; 255
     e52:	9f 4f       	sbci	r25, 0xFF	; 255
     e54:	f0 68       	ori	r31, 0x80	; 128
     e56:	3f 2e       	mov	r3, r31
     e58:	2a e0       	ldi	r18, 0x0A	; 10
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	a3 01       	movw	r20, r6
     e5e:	5c d3       	rcall	.+1720   	; 0x1518 <__ultoa_invert>
     e60:	88 2e       	mov	r8, r24
     e62:	86 18       	sub	r8, r6
     e64:	44 c0       	rjmp	.+136    	; 0xeee <vfprintf+0x29c>
     e66:	85 37       	cpi	r24, 0x75	; 117
     e68:	31 f4       	brne	.+12     	; 0xe76 <vfprintf+0x224>
     e6a:	23 2d       	mov	r18, r3
     e6c:	2f 7e       	andi	r18, 0xEF	; 239
     e6e:	b2 2e       	mov	r11, r18
     e70:	2a e0       	ldi	r18, 0x0A	; 10
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	25 c0       	rjmp	.+74     	; 0xec0 <vfprintf+0x26e>
     e76:	93 2d       	mov	r25, r3
     e78:	99 7f       	andi	r25, 0xF9	; 249
     e7a:	b9 2e       	mov	r11, r25
     e7c:	8f 36       	cpi	r24, 0x6F	; 111
     e7e:	c1 f0       	breq	.+48     	; 0xeb0 <vfprintf+0x25e>
     e80:	18 f4       	brcc	.+6      	; 0xe88 <vfprintf+0x236>
     e82:	88 35       	cpi	r24, 0x58	; 88
     e84:	79 f0       	breq	.+30     	; 0xea4 <vfprintf+0x252>
     e86:	ae c0       	rjmp	.+348    	; 0xfe4 <vfprintf+0x392>
     e88:	80 37       	cpi	r24, 0x70	; 112
     e8a:	19 f0       	breq	.+6      	; 0xe92 <vfprintf+0x240>
     e8c:	88 37       	cpi	r24, 0x78	; 120
     e8e:	21 f0       	breq	.+8      	; 0xe98 <vfprintf+0x246>
     e90:	a9 c0       	rjmp	.+338    	; 0xfe4 <vfprintf+0x392>
     e92:	e9 2f       	mov	r30, r25
     e94:	e0 61       	ori	r30, 0x10	; 16
     e96:	be 2e       	mov	r11, r30
     e98:	b4 fe       	sbrs	r11, 4
     e9a:	0d c0       	rjmp	.+26     	; 0xeb6 <vfprintf+0x264>
     e9c:	fb 2d       	mov	r31, r11
     e9e:	f4 60       	ori	r31, 0x04	; 4
     ea0:	bf 2e       	mov	r11, r31
     ea2:	09 c0       	rjmp	.+18     	; 0xeb6 <vfprintf+0x264>
     ea4:	34 fe       	sbrs	r3, 4
     ea6:	0a c0       	rjmp	.+20     	; 0xebc <vfprintf+0x26a>
     ea8:	29 2f       	mov	r18, r25
     eaa:	26 60       	ori	r18, 0x06	; 6
     eac:	b2 2e       	mov	r11, r18
     eae:	06 c0       	rjmp	.+12     	; 0xebc <vfprintf+0x26a>
     eb0:	28 e0       	ldi	r18, 0x08	; 8
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	05 c0       	rjmp	.+10     	; 0xec0 <vfprintf+0x26e>
     eb6:	20 e1       	ldi	r18, 0x10	; 16
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <vfprintf+0x26e>
     ebc:	20 e1       	ldi	r18, 0x10	; 16
     ebe:	32 e0       	ldi	r19, 0x02	; 2
     ec0:	f8 01       	movw	r30, r16
     ec2:	b7 fe       	sbrs	r11, 7
     ec4:	07 c0       	rjmp	.+14     	; 0xed4 <vfprintf+0x282>
     ec6:	60 81       	ld	r22, Z
     ec8:	71 81       	ldd	r23, Z+1	; 0x01
     eca:	82 81       	ldd	r24, Z+2	; 0x02
     ecc:	93 81       	ldd	r25, Z+3	; 0x03
     ece:	0c 5f       	subi	r16, 0xFC	; 252
     ed0:	1f 4f       	sbci	r17, 0xFF	; 255
     ed2:	06 c0       	rjmp	.+12     	; 0xee0 <vfprintf+0x28e>
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 5f       	subi	r16, 0xFE	; 254
     ede:	1f 4f       	sbci	r17, 0xFF	; 255
     ee0:	a3 01       	movw	r20, r6
     ee2:	1a d3       	rcall	.+1588   	; 0x1518 <__ultoa_invert>
     ee4:	88 2e       	mov	r8, r24
     ee6:	86 18       	sub	r8, r6
     ee8:	fb 2d       	mov	r31, r11
     eea:	ff 77       	andi	r31, 0x7F	; 127
     eec:	3f 2e       	mov	r3, r31
     eee:	36 fe       	sbrs	r3, 6
     ef0:	0d c0       	rjmp	.+26     	; 0xf0c <vfprintf+0x2ba>
     ef2:	23 2d       	mov	r18, r3
     ef4:	2e 7f       	andi	r18, 0xFE	; 254
     ef6:	a2 2e       	mov	r10, r18
     ef8:	89 14       	cp	r8, r9
     efa:	58 f4       	brcc	.+22     	; 0xf12 <vfprintf+0x2c0>
     efc:	34 fe       	sbrs	r3, 4
     efe:	0b c0       	rjmp	.+22     	; 0xf16 <vfprintf+0x2c4>
     f00:	32 fc       	sbrc	r3, 2
     f02:	09 c0       	rjmp	.+18     	; 0xf16 <vfprintf+0x2c4>
     f04:	83 2d       	mov	r24, r3
     f06:	8e 7e       	andi	r24, 0xEE	; 238
     f08:	a8 2e       	mov	r10, r24
     f0a:	05 c0       	rjmp	.+10     	; 0xf16 <vfprintf+0x2c4>
     f0c:	b8 2c       	mov	r11, r8
     f0e:	a3 2c       	mov	r10, r3
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <vfprintf+0x2c6>
     f12:	b8 2c       	mov	r11, r8
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <vfprintf+0x2c6>
     f16:	b9 2c       	mov	r11, r9
     f18:	a4 fe       	sbrs	r10, 4
     f1a:	0f c0       	rjmp	.+30     	; 0xf3a <vfprintf+0x2e8>
     f1c:	fe 01       	movw	r30, r28
     f1e:	e8 0d       	add	r30, r8
     f20:	f1 1d       	adc	r31, r1
     f22:	80 81       	ld	r24, Z
     f24:	80 33       	cpi	r24, 0x30	; 48
     f26:	21 f4       	brne	.+8      	; 0xf30 <vfprintf+0x2de>
     f28:	9a 2d       	mov	r25, r10
     f2a:	99 7e       	andi	r25, 0xE9	; 233
     f2c:	a9 2e       	mov	r10, r25
     f2e:	09 c0       	rjmp	.+18     	; 0xf42 <vfprintf+0x2f0>
     f30:	a2 fe       	sbrs	r10, 2
     f32:	06 c0       	rjmp	.+12     	; 0xf40 <vfprintf+0x2ee>
     f34:	b3 94       	inc	r11
     f36:	b3 94       	inc	r11
     f38:	04 c0       	rjmp	.+8      	; 0xf42 <vfprintf+0x2f0>
     f3a:	8a 2d       	mov	r24, r10
     f3c:	86 78       	andi	r24, 0x86	; 134
     f3e:	09 f0       	breq	.+2      	; 0xf42 <vfprintf+0x2f0>
     f40:	b3 94       	inc	r11
     f42:	a3 fc       	sbrc	r10, 3
     f44:	10 c0       	rjmp	.+32     	; 0xf66 <vfprintf+0x314>
     f46:	a0 fe       	sbrs	r10, 0
     f48:	06 c0       	rjmp	.+12     	; 0xf56 <vfprintf+0x304>
     f4a:	b2 14       	cp	r11, r2
     f4c:	80 f4       	brcc	.+32     	; 0xf6e <vfprintf+0x31c>
     f4e:	28 0c       	add	r2, r8
     f50:	92 2c       	mov	r9, r2
     f52:	9b 18       	sub	r9, r11
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <vfprintf+0x31e>
     f56:	b2 14       	cp	r11, r2
     f58:	58 f4       	brcc	.+22     	; 0xf70 <vfprintf+0x31e>
     f5a:	b6 01       	movw	r22, r12
     f5c:	80 e2       	ldi	r24, 0x20	; 32
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	9f d2       	rcall	.+1342   	; 0x14a0 <fputc>
     f62:	b3 94       	inc	r11
     f64:	f8 cf       	rjmp	.-16     	; 0xf56 <vfprintf+0x304>
     f66:	b2 14       	cp	r11, r2
     f68:	18 f4       	brcc	.+6      	; 0xf70 <vfprintf+0x31e>
     f6a:	2b 18       	sub	r2, r11
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <vfprintf+0x320>
     f6e:	98 2c       	mov	r9, r8
     f70:	21 2c       	mov	r2, r1
     f72:	a4 fe       	sbrs	r10, 4
     f74:	0f c0       	rjmp	.+30     	; 0xf94 <vfprintf+0x342>
     f76:	b6 01       	movw	r22, r12
     f78:	80 e3       	ldi	r24, 0x30	; 48
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	91 d2       	rcall	.+1314   	; 0x14a0 <fputc>
     f7e:	a2 fe       	sbrs	r10, 2
     f80:	16 c0       	rjmp	.+44     	; 0xfae <vfprintf+0x35c>
     f82:	a1 fc       	sbrc	r10, 1
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <vfprintf+0x33a>
     f86:	88 e7       	ldi	r24, 0x78	; 120
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <vfprintf+0x33e>
     f8c:	88 e5       	ldi	r24, 0x58	; 88
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	b6 01       	movw	r22, r12
     f92:	0c c0       	rjmp	.+24     	; 0xfac <vfprintf+0x35a>
     f94:	8a 2d       	mov	r24, r10
     f96:	86 78       	andi	r24, 0x86	; 134
     f98:	51 f0       	breq	.+20     	; 0xfae <vfprintf+0x35c>
     f9a:	a1 fe       	sbrs	r10, 1
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <vfprintf+0x350>
     f9e:	8b e2       	ldi	r24, 0x2B	; 43
     fa0:	01 c0       	rjmp	.+2      	; 0xfa4 <vfprintf+0x352>
     fa2:	80 e2       	ldi	r24, 0x20	; 32
     fa4:	a7 fc       	sbrc	r10, 7
     fa6:	8d e2       	ldi	r24, 0x2D	; 45
     fa8:	b6 01       	movw	r22, r12
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	79 d2       	rcall	.+1266   	; 0x14a0 <fputc>
     fae:	89 14       	cp	r8, r9
     fb0:	30 f4       	brcc	.+12     	; 0xfbe <vfprintf+0x36c>
     fb2:	b6 01       	movw	r22, r12
     fb4:	80 e3       	ldi	r24, 0x30	; 48
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	73 d2       	rcall	.+1254   	; 0x14a0 <fputc>
     fba:	9a 94       	dec	r9
     fbc:	f8 cf       	rjmp	.-16     	; 0xfae <vfprintf+0x35c>
     fbe:	8a 94       	dec	r8
     fc0:	f3 01       	movw	r30, r6
     fc2:	e8 0d       	add	r30, r8
     fc4:	f1 1d       	adc	r31, r1
     fc6:	80 81       	ld	r24, Z
     fc8:	b6 01       	movw	r22, r12
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	69 d2       	rcall	.+1234   	; 0x14a0 <fputc>
     fce:	81 10       	cpse	r8, r1
     fd0:	f6 cf       	rjmp	.-20     	; 0xfbe <vfprintf+0x36c>
     fd2:	22 20       	and	r2, r2
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <vfprintf+0x386>
     fd6:	4e ce       	rjmp	.-868    	; 0xc74 <vfprintf+0x22>
     fd8:	b6 01       	movw	r22, r12
     fda:	80 e2       	ldi	r24, 0x20	; 32
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	60 d2       	rcall	.+1216   	; 0x14a0 <fputc>
     fe0:	2a 94       	dec	r2
     fe2:	f7 cf       	rjmp	.-18     	; 0xfd2 <vfprintf+0x380>
     fe4:	f6 01       	movw	r30, r12
     fe6:	86 81       	ldd	r24, Z+6	; 0x06
     fe8:	97 81       	ldd	r25, Z+7	; 0x07
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <vfprintf+0x39e>
     fec:	8f ef       	ldi	r24, 0xFF	; 255
     fee:	9f ef       	ldi	r25, 0xFF	; 255
     ff0:	2b 96       	adiw	r28, 0x0b	; 11
     ff2:	e2 e1       	ldi	r30, 0x12	; 18
     ff4:	0b c3       	rjmp	.+1558   	; 0x160c <__epilogue_restores__>

00000ff6 <dtoa_prf>:
     ff6:	a9 e0       	ldi	r26, 0x09	; 9
     ff8:	b0 e0       	ldi	r27, 0x00	; 0
     ffa:	e0 e0       	ldi	r30, 0x00	; 0
     ffc:	f8 e0       	ldi	r31, 0x08	; 8
     ffe:	f0 c2       	rjmp	.+1504   	; 0x15e0 <__prologue_saves__+0xc>
    1000:	6a 01       	movw	r12, r20
    1002:	12 2f       	mov	r17, r18
    1004:	b0 2e       	mov	r11, r16
    1006:	2b e3       	ldi	r18, 0x3B	; 59
    1008:	20 17       	cp	r18, r16
    100a:	20 f0       	brcs	.+8      	; 0x1014 <dtoa_prf+0x1e>
    100c:	ff 24       	eor	r15, r15
    100e:	f3 94       	inc	r15
    1010:	f0 0e       	add	r15, r16
    1012:	02 c0       	rjmp	.+4      	; 0x1018 <dtoa_prf+0x22>
    1014:	2c e3       	ldi	r18, 0x3C	; 60
    1016:	f2 2e       	mov	r15, r18
    1018:	0f 2d       	mov	r16, r15
    101a:	27 e0       	ldi	r18, 0x07	; 7
    101c:	ae 01       	movw	r20, r28
    101e:	4f 5f       	subi	r20, 0xFF	; 255
    1020:	5f 4f       	sbci	r21, 0xFF	; 255
    1022:	40 d1       	rcall	.+640    	; 0x12a4 <__ftoa_engine>
    1024:	bc 01       	movw	r22, r24
    1026:	49 81       	ldd	r20, Y+1	; 0x01
    1028:	84 2f       	mov	r24, r20
    102a:	89 70       	andi	r24, 0x09	; 9
    102c:	81 30       	cpi	r24, 0x01	; 1
    102e:	31 f0       	breq	.+12     	; 0x103c <dtoa_prf+0x46>
    1030:	e1 fc       	sbrc	r14, 1
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <dtoa_prf+0x4a>
    1034:	e0 fe       	sbrs	r14, 0
    1036:	06 c0       	rjmp	.+12     	; 0x1044 <dtoa_prf+0x4e>
    1038:	90 e2       	ldi	r25, 0x20	; 32
    103a:	05 c0       	rjmp	.+10     	; 0x1046 <dtoa_prf+0x50>
    103c:	9d e2       	ldi	r25, 0x2D	; 45
    103e:	03 c0       	rjmp	.+6      	; 0x1046 <dtoa_prf+0x50>
    1040:	9b e2       	ldi	r25, 0x2B	; 43
    1042:	01 c0       	rjmp	.+2      	; 0x1046 <dtoa_prf+0x50>
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	5e 2d       	mov	r21, r14
    1048:	50 71       	andi	r21, 0x10	; 16
    104a:	43 ff       	sbrs	r20, 3
    104c:	3c c0       	rjmp	.+120    	; 0x10c6 <dtoa_prf+0xd0>
    104e:	91 11       	cpse	r25, r1
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <dtoa_prf+0x60>
    1052:	83 e0       	ldi	r24, 0x03	; 3
    1054:	01 c0       	rjmp	.+2      	; 0x1058 <dtoa_prf+0x62>
    1056:	84 e0       	ldi	r24, 0x04	; 4
    1058:	81 17       	cp	r24, r17
    105a:	18 f4       	brcc	.+6      	; 0x1062 <dtoa_prf+0x6c>
    105c:	21 2f       	mov	r18, r17
    105e:	28 1b       	sub	r18, r24
    1060:	01 c0       	rjmp	.+2      	; 0x1064 <dtoa_prf+0x6e>
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	51 11       	cpse	r21, r1
    1066:	0b c0       	rjmp	.+22     	; 0x107e <dtoa_prf+0x88>
    1068:	f6 01       	movw	r30, r12
    106a:	82 2f       	mov	r24, r18
    106c:	30 e2       	ldi	r19, 0x20	; 32
    106e:	88 23       	and	r24, r24
    1070:	19 f0       	breq	.+6      	; 0x1078 <dtoa_prf+0x82>
    1072:	31 93       	st	Z+, r19
    1074:	81 50       	subi	r24, 0x01	; 1
    1076:	fb cf       	rjmp	.-10     	; 0x106e <dtoa_prf+0x78>
    1078:	c2 0e       	add	r12, r18
    107a:	d1 1c       	adc	r13, r1
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	99 23       	and	r25, r25
    1080:	29 f0       	breq	.+10     	; 0x108c <dtoa_prf+0x96>
    1082:	d6 01       	movw	r26, r12
    1084:	9c 93       	st	X, r25
    1086:	f6 01       	movw	r30, r12
    1088:	31 96       	adiw	r30, 0x01	; 1
    108a:	6f 01       	movw	r12, r30
    108c:	c6 01       	movw	r24, r12
    108e:	03 96       	adiw	r24, 0x03	; 3
    1090:	e2 fe       	sbrs	r14, 2
    1092:	0a c0       	rjmp	.+20     	; 0x10a8 <dtoa_prf+0xb2>
    1094:	3e e4       	ldi	r19, 0x4E	; 78
    1096:	d6 01       	movw	r26, r12
    1098:	3c 93       	st	X, r19
    109a:	41 e4       	ldi	r20, 0x41	; 65
    109c:	11 96       	adiw	r26, 0x01	; 1
    109e:	4c 93       	st	X, r20
    10a0:	11 97       	sbiw	r26, 0x01	; 1
    10a2:	12 96       	adiw	r26, 0x02	; 2
    10a4:	3c 93       	st	X, r19
    10a6:	06 c0       	rjmp	.+12     	; 0x10b4 <dtoa_prf+0xbe>
    10a8:	3e e6       	ldi	r19, 0x6E	; 110
    10aa:	f6 01       	movw	r30, r12
    10ac:	30 83       	st	Z, r19
    10ae:	41 e6       	ldi	r20, 0x61	; 97
    10b0:	41 83       	std	Z+1, r20	; 0x01
    10b2:	32 83       	std	Z+2, r19	; 0x02
    10b4:	fc 01       	movw	r30, r24
    10b6:	32 2f       	mov	r19, r18
    10b8:	40 e2       	ldi	r20, 0x20	; 32
    10ba:	33 23       	and	r19, r19
    10bc:	09 f4       	brne	.+2      	; 0x10c0 <dtoa_prf+0xca>
    10be:	42 c0       	rjmp	.+132    	; 0x1144 <dtoa_prf+0x14e>
    10c0:	41 93       	st	Z+, r20
    10c2:	31 50       	subi	r19, 0x01	; 1
    10c4:	fa cf       	rjmp	.-12     	; 0x10ba <dtoa_prf+0xc4>
    10c6:	42 ff       	sbrs	r20, 2
    10c8:	44 c0       	rjmp	.+136    	; 0x1152 <dtoa_prf+0x15c>
    10ca:	91 11       	cpse	r25, r1
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <dtoa_prf+0xdc>
    10ce:	83 e0       	ldi	r24, 0x03	; 3
    10d0:	01 c0       	rjmp	.+2      	; 0x10d4 <dtoa_prf+0xde>
    10d2:	84 e0       	ldi	r24, 0x04	; 4
    10d4:	81 17       	cp	r24, r17
    10d6:	18 f4       	brcc	.+6      	; 0x10de <dtoa_prf+0xe8>
    10d8:	21 2f       	mov	r18, r17
    10da:	28 1b       	sub	r18, r24
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <dtoa_prf+0xea>
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	51 11       	cpse	r21, r1
    10e2:	0b c0       	rjmp	.+22     	; 0x10fa <dtoa_prf+0x104>
    10e4:	f6 01       	movw	r30, r12
    10e6:	82 2f       	mov	r24, r18
    10e8:	30 e2       	ldi	r19, 0x20	; 32
    10ea:	88 23       	and	r24, r24
    10ec:	19 f0       	breq	.+6      	; 0x10f4 <dtoa_prf+0xfe>
    10ee:	31 93       	st	Z+, r19
    10f0:	81 50       	subi	r24, 0x01	; 1
    10f2:	fb cf       	rjmp	.-10     	; 0x10ea <dtoa_prf+0xf4>
    10f4:	c2 0e       	add	r12, r18
    10f6:	d1 1c       	adc	r13, r1
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	99 23       	and	r25, r25
    10fc:	29 f0       	breq	.+10     	; 0x1108 <dtoa_prf+0x112>
    10fe:	d6 01       	movw	r26, r12
    1100:	9c 93       	st	X, r25
    1102:	f6 01       	movw	r30, r12
    1104:	31 96       	adiw	r30, 0x01	; 1
    1106:	6f 01       	movw	r12, r30
    1108:	c6 01       	movw	r24, r12
    110a:	03 96       	adiw	r24, 0x03	; 3
    110c:	e2 fe       	sbrs	r14, 2
    110e:	0b c0       	rjmp	.+22     	; 0x1126 <dtoa_prf+0x130>
    1110:	39 e4       	ldi	r19, 0x49	; 73
    1112:	d6 01       	movw	r26, r12
    1114:	3c 93       	st	X, r19
    1116:	3e e4       	ldi	r19, 0x4E	; 78
    1118:	11 96       	adiw	r26, 0x01	; 1
    111a:	3c 93       	st	X, r19
    111c:	11 97       	sbiw	r26, 0x01	; 1
    111e:	36 e4       	ldi	r19, 0x46	; 70
    1120:	12 96       	adiw	r26, 0x02	; 2
    1122:	3c 93       	st	X, r19
    1124:	07 c0       	rjmp	.+14     	; 0x1134 <dtoa_prf+0x13e>
    1126:	39 e6       	ldi	r19, 0x69	; 105
    1128:	f6 01       	movw	r30, r12
    112a:	30 83       	st	Z, r19
    112c:	3e e6       	ldi	r19, 0x6E	; 110
    112e:	31 83       	std	Z+1, r19	; 0x01
    1130:	36 e6       	ldi	r19, 0x66	; 102
    1132:	32 83       	std	Z+2, r19	; 0x02
    1134:	fc 01       	movw	r30, r24
    1136:	32 2f       	mov	r19, r18
    1138:	40 e2       	ldi	r20, 0x20	; 32
    113a:	33 23       	and	r19, r19
    113c:	19 f0       	breq	.+6      	; 0x1144 <dtoa_prf+0x14e>
    113e:	41 93       	st	Z+, r20
    1140:	31 50       	subi	r19, 0x01	; 1
    1142:	fb cf       	rjmp	.-10     	; 0x113a <dtoa_prf+0x144>
    1144:	fc 01       	movw	r30, r24
    1146:	e2 0f       	add	r30, r18
    1148:	f1 1d       	adc	r31, r1
    114a:	10 82       	st	Z, r1
    114c:	8e ef       	ldi	r24, 0xFE	; 254
    114e:	9f ef       	ldi	r25, 0xFF	; 255
    1150:	a6 c0       	rjmp	.+332    	; 0x129e <dtoa_prf+0x2a8>
    1152:	21 e0       	ldi	r18, 0x01	; 1
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	91 11       	cpse	r25, r1
    1158:	02 c0       	rjmp	.+4      	; 0x115e <dtoa_prf+0x168>
    115a:	20 e0       	ldi	r18, 0x00	; 0
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	16 16       	cp	r1, r22
    1160:	17 06       	cpc	r1, r23
    1162:	1c f4       	brge	.+6      	; 0x116a <dtoa_prf+0x174>
    1164:	fb 01       	movw	r30, r22
    1166:	31 96       	adiw	r30, 0x01	; 1
    1168:	02 c0       	rjmp	.+4      	; 0x116e <dtoa_prf+0x178>
    116a:	e1 e0       	ldi	r30, 0x01	; 1
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	2e 0f       	add	r18, r30
    1170:	3f 1f       	adc	r19, r31
    1172:	bb 20       	and	r11, r11
    1174:	21 f0       	breq	.+8      	; 0x117e <dtoa_prf+0x188>
    1176:	eb 2d       	mov	r30, r11
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	31 96       	adiw	r30, 0x01	; 1
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <dtoa_prf+0x18c>
    117e:	e0 e0       	ldi	r30, 0x00	; 0
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	2e 0f       	add	r18, r30
    1184:	3f 1f       	adc	r19, r31
    1186:	e1 2f       	mov	r30, r17
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	2e 17       	cp	r18, r30
    118c:	3f 07       	cpc	r19, r31
    118e:	1c f4       	brge	.+6      	; 0x1196 <dtoa_prf+0x1a0>
    1190:	12 1b       	sub	r17, r18
    1192:	21 2f       	mov	r18, r17
    1194:	01 c0       	rjmp	.+2      	; 0x1198 <dtoa_prf+0x1a2>
    1196:	20 e0       	ldi	r18, 0x00	; 0
    1198:	8e 2d       	mov	r24, r14
    119a:	88 71       	andi	r24, 0x18	; 24
    119c:	59 f4       	brne	.+22     	; 0x11b4 <dtoa_prf+0x1be>
    119e:	f6 01       	movw	r30, r12
    11a0:	82 2f       	mov	r24, r18
    11a2:	30 e2       	ldi	r19, 0x20	; 32
    11a4:	88 23       	and	r24, r24
    11a6:	19 f0       	breq	.+6      	; 0x11ae <dtoa_prf+0x1b8>
    11a8:	31 93       	st	Z+, r19
    11aa:	81 50       	subi	r24, 0x01	; 1
    11ac:	fb cf       	rjmp	.-10     	; 0x11a4 <dtoa_prf+0x1ae>
    11ae:	c2 0e       	add	r12, r18
    11b0:	d1 1c       	adc	r13, r1
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	99 23       	and	r25, r25
    11b6:	29 f0       	breq	.+10     	; 0x11c2 <dtoa_prf+0x1cc>
    11b8:	d6 01       	movw	r26, r12
    11ba:	9c 93       	st	X, r25
    11bc:	f6 01       	movw	r30, r12
    11be:	31 96       	adiw	r30, 0x01	; 1
    11c0:	6f 01       	movw	r12, r30
    11c2:	51 11       	cpse	r21, r1
    11c4:	0b c0       	rjmp	.+22     	; 0x11dc <dtoa_prf+0x1e6>
    11c6:	f6 01       	movw	r30, r12
    11c8:	82 2f       	mov	r24, r18
    11ca:	90 e3       	ldi	r25, 0x30	; 48
    11cc:	88 23       	and	r24, r24
    11ce:	19 f0       	breq	.+6      	; 0x11d6 <dtoa_prf+0x1e0>
    11d0:	91 93       	st	Z+, r25
    11d2:	81 50       	subi	r24, 0x01	; 1
    11d4:	fb cf       	rjmp	.-10     	; 0x11cc <dtoa_prf+0x1d6>
    11d6:	c2 0e       	add	r12, r18
    11d8:	d1 1c       	adc	r13, r1
    11da:	20 e0       	ldi	r18, 0x00	; 0
    11dc:	0f 2d       	mov	r16, r15
    11de:	06 0f       	add	r16, r22
    11e0:	9a 81       	ldd	r25, Y+2	; 0x02
    11e2:	34 2f       	mov	r19, r20
    11e4:	30 71       	andi	r19, 0x10	; 16
    11e6:	44 ff       	sbrs	r20, 4
    11e8:	03 c0       	rjmp	.+6      	; 0x11f0 <dtoa_prf+0x1fa>
    11ea:	91 33       	cpi	r25, 0x31	; 49
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <dtoa_prf+0x1fa>
    11ee:	01 50       	subi	r16, 0x01	; 1
    11f0:	10 16       	cp	r1, r16
    11f2:	24 f4       	brge	.+8      	; 0x11fc <dtoa_prf+0x206>
    11f4:	09 30       	cpi	r16, 0x09	; 9
    11f6:	18 f0       	brcs	.+6      	; 0x11fe <dtoa_prf+0x208>
    11f8:	08 e0       	ldi	r16, 0x08	; 8
    11fa:	01 c0       	rjmp	.+2      	; 0x11fe <dtoa_prf+0x208>
    11fc:	01 e0       	ldi	r16, 0x01	; 1
    11fe:	ab 01       	movw	r20, r22
    1200:	77 ff       	sbrs	r23, 7
    1202:	02 c0       	rjmp	.+4      	; 0x1208 <dtoa_prf+0x212>
    1204:	40 e0       	ldi	r20, 0x00	; 0
    1206:	50 e0       	ldi	r21, 0x00	; 0
    1208:	fb 01       	movw	r30, r22
    120a:	e4 1b       	sub	r30, r20
    120c:	f5 0b       	sbc	r31, r21
    120e:	a1 e0       	ldi	r26, 0x01	; 1
    1210:	b0 e0       	ldi	r27, 0x00	; 0
    1212:	ac 0f       	add	r26, r28
    1214:	bd 1f       	adc	r27, r29
    1216:	ea 0f       	add	r30, r26
    1218:	fb 1f       	adc	r31, r27
    121a:	8e e2       	ldi	r24, 0x2E	; 46
    121c:	a8 2e       	mov	r10, r24
    121e:	4b 01       	movw	r8, r22
    1220:	80 1a       	sub	r8, r16
    1222:	91 08       	sbc	r9, r1
    1224:	0b 2d       	mov	r16, r11
    1226:	10 e0       	ldi	r17, 0x00	; 0
    1228:	11 95       	neg	r17
    122a:	01 95       	neg	r16
    122c:	11 09       	sbc	r17, r1
    122e:	4f 3f       	cpi	r20, 0xFF	; 255
    1230:	bf ef       	ldi	r27, 0xFF	; 255
    1232:	5b 07       	cpc	r21, r27
    1234:	21 f4       	brne	.+8      	; 0x123e <dtoa_prf+0x248>
    1236:	d6 01       	movw	r26, r12
    1238:	ac 92       	st	X, r10
    123a:	11 96       	adiw	r26, 0x01	; 1
    123c:	6d 01       	movw	r12, r26
    123e:	64 17       	cp	r22, r20
    1240:	75 07       	cpc	r23, r21
    1242:	2c f0       	brlt	.+10     	; 0x124e <dtoa_prf+0x258>
    1244:	84 16       	cp	r8, r20
    1246:	95 06       	cpc	r9, r21
    1248:	14 f4       	brge	.+4      	; 0x124e <dtoa_prf+0x258>
    124a:	81 81       	ldd	r24, Z+1	; 0x01
    124c:	01 c0       	rjmp	.+2      	; 0x1250 <dtoa_prf+0x25a>
    124e:	80 e3       	ldi	r24, 0x30	; 48
    1250:	41 50       	subi	r20, 0x01	; 1
    1252:	51 09       	sbc	r21, r1
    1254:	31 96       	adiw	r30, 0x01	; 1
    1256:	d6 01       	movw	r26, r12
    1258:	11 96       	adiw	r26, 0x01	; 1
    125a:	7d 01       	movw	r14, r26
    125c:	40 17       	cp	r20, r16
    125e:	51 07       	cpc	r21, r17
    1260:	24 f0       	brlt	.+8      	; 0x126a <dtoa_prf+0x274>
    1262:	d6 01       	movw	r26, r12
    1264:	8c 93       	st	X, r24
    1266:	67 01       	movw	r12, r14
    1268:	e2 cf       	rjmp	.-60     	; 0x122e <dtoa_prf+0x238>
    126a:	64 17       	cp	r22, r20
    126c:	75 07       	cpc	r23, r21
    126e:	39 f4       	brne	.+14     	; 0x127e <dtoa_prf+0x288>
    1270:	96 33       	cpi	r25, 0x36	; 54
    1272:	20 f4       	brcc	.+8      	; 0x127c <dtoa_prf+0x286>
    1274:	95 33       	cpi	r25, 0x35	; 53
    1276:	19 f4       	brne	.+6      	; 0x127e <dtoa_prf+0x288>
    1278:	31 11       	cpse	r19, r1
    127a:	01 c0       	rjmp	.+2      	; 0x127e <dtoa_prf+0x288>
    127c:	81 e3       	ldi	r24, 0x31	; 49
    127e:	f6 01       	movw	r30, r12
    1280:	80 83       	st	Z, r24
    1282:	f7 01       	movw	r30, r14
    1284:	82 2f       	mov	r24, r18
    1286:	90 e2       	ldi	r25, 0x20	; 32
    1288:	88 23       	and	r24, r24
    128a:	19 f0       	breq	.+6      	; 0x1292 <dtoa_prf+0x29c>
    128c:	91 93       	st	Z+, r25
    128e:	81 50       	subi	r24, 0x01	; 1
    1290:	fb cf       	rjmp	.-10     	; 0x1288 <dtoa_prf+0x292>
    1292:	f7 01       	movw	r30, r14
    1294:	e2 0f       	add	r30, r18
    1296:	f1 1d       	adc	r31, r1
    1298:	10 82       	st	Z, r1
    129a:	80 e0       	ldi	r24, 0x00	; 0
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	29 96       	adiw	r28, 0x09	; 9
    12a0:	ec e0       	ldi	r30, 0x0C	; 12
    12a2:	ba c1       	rjmp	.+884    	; 0x1618 <__epilogue_restores__+0xc>

000012a4 <__ftoa_engine>:
    12a4:	28 30       	cpi	r18, 0x08	; 8
    12a6:	08 f0       	brcs	.+2      	; 0x12aa <__ftoa_engine+0x6>
    12a8:	27 e0       	ldi	r18, 0x07	; 7
    12aa:	33 27       	eor	r19, r19
    12ac:	da 01       	movw	r26, r20
    12ae:	99 0f       	add	r25, r25
    12b0:	31 1d       	adc	r19, r1
    12b2:	87 fd       	sbrc	r24, 7
    12b4:	91 60       	ori	r25, 0x01	; 1
    12b6:	00 96       	adiw	r24, 0x00	; 0
    12b8:	61 05       	cpc	r22, r1
    12ba:	71 05       	cpc	r23, r1
    12bc:	39 f4       	brne	.+14     	; 0x12cc <__ftoa_engine+0x28>
    12be:	32 60       	ori	r19, 0x02	; 2
    12c0:	2e 5f       	subi	r18, 0xFE	; 254
    12c2:	3d 93       	st	X+, r19
    12c4:	30 e3       	ldi	r19, 0x30	; 48
    12c6:	2a 95       	dec	r18
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <__ftoa_engine+0x1e>
    12ca:	08 95       	ret
    12cc:	9f 3f       	cpi	r25, 0xFF	; 255
    12ce:	30 f0       	brcs	.+12     	; 0x12dc <__ftoa_engine+0x38>
    12d0:	80 38       	cpi	r24, 0x80	; 128
    12d2:	71 05       	cpc	r23, r1
    12d4:	61 05       	cpc	r22, r1
    12d6:	09 f0       	breq	.+2      	; 0x12da <__ftoa_engine+0x36>
    12d8:	3c 5f       	subi	r19, 0xFC	; 252
    12da:	3c 5f       	subi	r19, 0xFC	; 252
    12dc:	3d 93       	st	X+, r19
    12de:	91 30       	cpi	r25, 0x01	; 1
    12e0:	08 f0       	brcs	.+2      	; 0x12e4 <__ftoa_engine+0x40>
    12e2:	80 68       	ori	r24, 0x80	; 128
    12e4:	91 1d       	adc	r25, r1
    12e6:	df 93       	push	r29
    12e8:	cf 93       	push	r28
    12ea:	1f 93       	push	r17
    12ec:	0f 93       	push	r16
    12ee:	ff 92       	push	r15
    12f0:	ef 92       	push	r14
    12f2:	19 2f       	mov	r17, r25
    12f4:	98 7f       	andi	r25, 0xF8	; 248
    12f6:	96 95       	lsr	r25
    12f8:	e9 2f       	mov	r30, r25
    12fa:	96 95       	lsr	r25
    12fc:	96 95       	lsr	r25
    12fe:	e9 0f       	add	r30, r25
    1300:	ff 27       	eor	r31, r31
    1302:	e2 5f       	subi	r30, 0xF2	; 242
    1304:	fe 4f       	sbci	r31, 0xFE	; 254
    1306:	99 27       	eor	r25, r25
    1308:	33 27       	eor	r19, r19
    130a:	ee 24       	eor	r14, r14
    130c:	ff 24       	eor	r15, r15
    130e:	a7 01       	movw	r20, r14
    1310:	e7 01       	movw	r28, r14
    1312:	05 90       	lpm	r0, Z+
    1314:	08 94       	sec
    1316:	07 94       	ror	r0
    1318:	28 f4       	brcc	.+10     	; 0x1324 <__ftoa_engine+0x80>
    131a:	36 0f       	add	r19, r22
    131c:	e7 1e       	adc	r14, r23
    131e:	f8 1e       	adc	r15, r24
    1320:	49 1f       	adc	r20, r25
    1322:	51 1d       	adc	r21, r1
    1324:	66 0f       	add	r22, r22
    1326:	77 1f       	adc	r23, r23
    1328:	88 1f       	adc	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	06 94       	lsr	r0
    132e:	a1 f7       	brne	.-24     	; 0x1318 <__ftoa_engine+0x74>
    1330:	05 90       	lpm	r0, Z+
    1332:	07 94       	ror	r0
    1334:	28 f4       	brcc	.+10     	; 0x1340 <__ftoa_engine+0x9c>
    1336:	e7 0e       	add	r14, r23
    1338:	f8 1e       	adc	r15, r24
    133a:	49 1f       	adc	r20, r25
    133c:	56 1f       	adc	r21, r22
    133e:	c1 1d       	adc	r28, r1
    1340:	77 0f       	add	r23, r23
    1342:	88 1f       	adc	r24, r24
    1344:	99 1f       	adc	r25, r25
    1346:	66 1f       	adc	r22, r22
    1348:	06 94       	lsr	r0
    134a:	a1 f7       	brne	.-24     	; 0x1334 <__ftoa_engine+0x90>
    134c:	05 90       	lpm	r0, Z+
    134e:	07 94       	ror	r0
    1350:	28 f4       	brcc	.+10     	; 0x135c <__ftoa_engine+0xb8>
    1352:	f8 0e       	add	r15, r24
    1354:	49 1f       	adc	r20, r25
    1356:	56 1f       	adc	r21, r22
    1358:	c7 1f       	adc	r28, r23
    135a:	d1 1d       	adc	r29, r1
    135c:	88 0f       	add	r24, r24
    135e:	99 1f       	adc	r25, r25
    1360:	66 1f       	adc	r22, r22
    1362:	77 1f       	adc	r23, r23
    1364:	06 94       	lsr	r0
    1366:	a1 f7       	brne	.-24     	; 0x1350 <__ftoa_engine+0xac>
    1368:	05 90       	lpm	r0, Z+
    136a:	07 94       	ror	r0
    136c:	20 f4       	brcc	.+8      	; 0x1376 <__ftoa_engine+0xd2>
    136e:	49 0f       	add	r20, r25
    1370:	56 1f       	adc	r21, r22
    1372:	c7 1f       	adc	r28, r23
    1374:	d8 1f       	adc	r29, r24
    1376:	99 0f       	add	r25, r25
    1378:	66 1f       	adc	r22, r22
    137a:	77 1f       	adc	r23, r23
    137c:	88 1f       	adc	r24, r24
    137e:	06 94       	lsr	r0
    1380:	a9 f7       	brne	.-22     	; 0x136c <__ftoa_engine+0xc8>
    1382:	84 91       	lpm	r24, Z
    1384:	10 95       	com	r17
    1386:	17 70       	andi	r17, 0x07	; 7
    1388:	41 f0       	breq	.+16     	; 0x139a <__ftoa_engine+0xf6>
    138a:	d6 95       	lsr	r29
    138c:	c7 95       	ror	r28
    138e:	57 95       	ror	r21
    1390:	47 95       	ror	r20
    1392:	f7 94       	ror	r15
    1394:	e7 94       	ror	r14
    1396:	1a 95       	dec	r17
    1398:	c1 f7       	brne	.-16     	; 0x138a <__ftoa_engine+0xe6>
    139a:	e4 eb       	ldi	r30, 0xB4	; 180
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	68 94       	set
    13a0:	15 90       	lpm	r1, Z+
    13a2:	15 91       	lpm	r17, Z+
    13a4:	35 91       	lpm	r19, Z+
    13a6:	65 91       	lpm	r22, Z+
    13a8:	95 91       	lpm	r25, Z+
    13aa:	05 90       	lpm	r0, Z+
    13ac:	7f e2       	ldi	r23, 0x2F	; 47
    13ae:	73 95       	inc	r23
    13b0:	e1 18       	sub	r14, r1
    13b2:	f1 0a       	sbc	r15, r17
    13b4:	43 0b       	sbc	r20, r19
    13b6:	56 0b       	sbc	r21, r22
    13b8:	c9 0b       	sbc	r28, r25
    13ba:	d0 09       	sbc	r29, r0
    13bc:	c0 f7       	brcc	.-16     	; 0x13ae <__ftoa_engine+0x10a>
    13be:	e1 0c       	add	r14, r1
    13c0:	f1 1e       	adc	r15, r17
    13c2:	43 1f       	adc	r20, r19
    13c4:	56 1f       	adc	r21, r22
    13c6:	c9 1f       	adc	r28, r25
    13c8:	d0 1d       	adc	r29, r0
    13ca:	7e f4       	brtc	.+30     	; 0x13ea <__ftoa_engine+0x146>
    13cc:	70 33       	cpi	r23, 0x30	; 48
    13ce:	11 f4       	brne	.+4      	; 0x13d4 <__ftoa_engine+0x130>
    13d0:	8a 95       	dec	r24
    13d2:	e6 cf       	rjmp	.-52     	; 0x13a0 <__ftoa_engine+0xfc>
    13d4:	e8 94       	clt
    13d6:	01 50       	subi	r16, 0x01	; 1
    13d8:	30 f0       	brcs	.+12     	; 0x13e6 <__ftoa_engine+0x142>
    13da:	08 0f       	add	r16, r24
    13dc:	0a f4       	brpl	.+2      	; 0x13e0 <__ftoa_engine+0x13c>
    13de:	00 27       	eor	r16, r16
    13e0:	02 17       	cp	r16, r18
    13e2:	08 f4       	brcc	.+2      	; 0x13e6 <__ftoa_engine+0x142>
    13e4:	20 2f       	mov	r18, r16
    13e6:	23 95       	inc	r18
    13e8:	02 2f       	mov	r16, r18
    13ea:	7a 33       	cpi	r23, 0x3A	; 58
    13ec:	28 f0       	brcs	.+10     	; 0x13f8 <__ftoa_engine+0x154>
    13ee:	79 e3       	ldi	r23, 0x39	; 57
    13f0:	7d 93       	st	X+, r23
    13f2:	2a 95       	dec	r18
    13f4:	e9 f7       	brne	.-6      	; 0x13f0 <__ftoa_engine+0x14c>
    13f6:	10 c0       	rjmp	.+32     	; 0x1418 <__ftoa_engine+0x174>
    13f8:	7d 93       	st	X+, r23
    13fa:	2a 95       	dec	r18
    13fc:	89 f6       	brne	.-94     	; 0x13a0 <__ftoa_engine+0xfc>
    13fe:	06 94       	lsr	r0
    1400:	97 95       	ror	r25
    1402:	67 95       	ror	r22
    1404:	37 95       	ror	r19
    1406:	17 95       	ror	r17
    1408:	17 94       	ror	r1
    140a:	e1 18       	sub	r14, r1
    140c:	f1 0a       	sbc	r15, r17
    140e:	43 0b       	sbc	r20, r19
    1410:	56 0b       	sbc	r21, r22
    1412:	c9 0b       	sbc	r28, r25
    1414:	d0 09       	sbc	r29, r0
    1416:	98 f0       	brcs	.+38     	; 0x143e <__ftoa_engine+0x19a>
    1418:	23 95       	inc	r18
    141a:	7e 91       	ld	r23, -X
    141c:	73 95       	inc	r23
    141e:	7a 33       	cpi	r23, 0x3A	; 58
    1420:	08 f0       	brcs	.+2      	; 0x1424 <__ftoa_engine+0x180>
    1422:	70 e3       	ldi	r23, 0x30	; 48
    1424:	7c 93       	st	X, r23
    1426:	20 13       	cpse	r18, r16
    1428:	b8 f7       	brcc	.-18     	; 0x1418 <__ftoa_engine+0x174>
    142a:	7e 91       	ld	r23, -X
    142c:	70 61       	ori	r23, 0x10	; 16
    142e:	7d 93       	st	X+, r23
    1430:	30 f0       	brcs	.+12     	; 0x143e <__ftoa_engine+0x19a>
    1432:	83 95       	inc	r24
    1434:	71 e3       	ldi	r23, 0x31	; 49
    1436:	7d 93       	st	X+, r23
    1438:	70 e3       	ldi	r23, 0x30	; 48
    143a:	2a 95       	dec	r18
    143c:	e1 f7       	brne	.-8      	; 0x1436 <__ftoa_engine+0x192>
    143e:	11 24       	eor	r1, r1
    1440:	ef 90       	pop	r14
    1442:	ff 90       	pop	r15
    1444:	0f 91       	pop	r16
    1446:	1f 91       	pop	r17
    1448:	cf 91       	pop	r28
    144a:	df 91       	pop	r29
    144c:	99 27       	eor	r25, r25
    144e:	87 fd       	sbrc	r24, 7
    1450:	90 95       	com	r25
    1452:	08 95       	ret

00001454 <strnlen_P>:
    1454:	fc 01       	movw	r30, r24
    1456:	05 90       	lpm	r0, Z+
    1458:	61 50       	subi	r22, 0x01	; 1
    145a:	70 40       	sbci	r23, 0x00	; 0
    145c:	01 10       	cpse	r0, r1
    145e:	d8 f7       	brcc	.-10     	; 0x1456 <strnlen_P+0x2>
    1460:	80 95       	com	r24
    1462:	90 95       	com	r25
    1464:	8e 0f       	add	r24, r30
    1466:	9f 1f       	adc	r25, r31
    1468:	08 95       	ret

0000146a <strnlen>:
    146a:	fc 01       	movw	r30, r24
    146c:	61 50       	subi	r22, 0x01	; 1
    146e:	70 40       	sbci	r23, 0x00	; 0
    1470:	01 90       	ld	r0, Z+
    1472:	01 10       	cpse	r0, r1
    1474:	d8 f7       	brcc	.-10     	; 0x146c <strnlen+0x2>
    1476:	80 95       	com	r24
    1478:	90 95       	com	r25
    147a:	8e 0f       	add	r24, r30
    147c:	9f 1f       	adc	r25, r31
    147e:	08 95       	ret

00001480 <strrev>:
    1480:	dc 01       	movw	r26, r24
    1482:	fc 01       	movw	r30, r24
    1484:	67 2f       	mov	r22, r23
    1486:	71 91       	ld	r23, Z+
    1488:	77 23       	and	r23, r23
    148a:	e1 f7       	brne	.-8      	; 0x1484 <strrev+0x4>
    148c:	32 97       	sbiw	r30, 0x02	; 2
    148e:	04 c0       	rjmp	.+8      	; 0x1498 <strrev+0x18>
    1490:	7c 91       	ld	r23, X
    1492:	6d 93       	st	X+, r22
    1494:	70 83       	st	Z, r23
    1496:	62 91       	ld	r22, -Z
    1498:	ae 17       	cp	r26, r30
    149a:	bf 07       	cpc	r27, r31
    149c:	c8 f3       	brcs	.-14     	; 0x1490 <strrev+0x10>
    149e:	08 95       	ret

000014a0 <fputc>:
    14a0:	0f 93       	push	r16
    14a2:	1f 93       	push	r17
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	fb 01       	movw	r30, r22
    14aa:	23 81       	ldd	r18, Z+3	; 0x03
    14ac:	21 fd       	sbrc	r18, 1
    14ae:	03 c0       	rjmp	.+6      	; 0x14b6 <fputc+0x16>
    14b0:	8f ef       	ldi	r24, 0xFF	; 255
    14b2:	9f ef       	ldi	r25, 0xFF	; 255
    14b4:	2c c0       	rjmp	.+88     	; 0x150e <fputc+0x6e>
    14b6:	22 ff       	sbrs	r18, 2
    14b8:	16 c0       	rjmp	.+44     	; 0x14e6 <fputc+0x46>
    14ba:	46 81       	ldd	r20, Z+6	; 0x06
    14bc:	57 81       	ldd	r21, Z+7	; 0x07
    14be:	24 81       	ldd	r18, Z+4	; 0x04
    14c0:	35 81       	ldd	r19, Z+5	; 0x05
    14c2:	42 17       	cp	r20, r18
    14c4:	53 07       	cpc	r21, r19
    14c6:	44 f4       	brge	.+16     	; 0x14d8 <fputc+0x38>
    14c8:	a0 81       	ld	r26, Z
    14ca:	b1 81       	ldd	r27, Z+1	; 0x01
    14cc:	9d 01       	movw	r18, r26
    14ce:	2f 5f       	subi	r18, 0xFF	; 255
    14d0:	3f 4f       	sbci	r19, 0xFF	; 255
    14d2:	31 83       	std	Z+1, r19	; 0x01
    14d4:	20 83       	st	Z, r18
    14d6:	8c 93       	st	X, r24
    14d8:	26 81       	ldd	r18, Z+6	; 0x06
    14da:	37 81       	ldd	r19, Z+7	; 0x07
    14dc:	2f 5f       	subi	r18, 0xFF	; 255
    14de:	3f 4f       	sbci	r19, 0xFF	; 255
    14e0:	37 83       	std	Z+7, r19	; 0x07
    14e2:	26 83       	std	Z+6, r18	; 0x06
    14e4:	14 c0       	rjmp	.+40     	; 0x150e <fputc+0x6e>
    14e6:	8b 01       	movw	r16, r22
    14e8:	ec 01       	movw	r28, r24
    14ea:	fb 01       	movw	r30, r22
    14ec:	00 84       	ldd	r0, Z+8	; 0x08
    14ee:	f1 85       	ldd	r31, Z+9	; 0x09
    14f0:	e0 2d       	mov	r30, r0
    14f2:	09 95       	icall
    14f4:	89 2b       	or	r24, r25
    14f6:	e1 f6       	brne	.-72     	; 0x14b0 <fputc+0x10>
    14f8:	d8 01       	movw	r26, r16
    14fa:	16 96       	adiw	r26, 0x06	; 6
    14fc:	8d 91       	ld	r24, X+
    14fe:	9c 91       	ld	r25, X
    1500:	17 97       	sbiw	r26, 0x07	; 7
    1502:	01 96       	adiw	r24, 0x01	; 1
    1504:	17 96       	adiw	r26, 0x07	; 7
    1506:	9c 93       	st	X, r25
    1508:	8e 93       	st	-X, r24
    150a:	16 97       	sbiw	r26, 0x06	; 6
    150c:	ce 01       	movw	r24, r28
    150e:	df 91       	pop	r29
    1510:	cf 91       	pop	r28
    1512:	1f 91       	pop	r17
    1514:	0f 91       	pop	r16
    1516:	08 95       	ret

00001518 <__ultoa_invert>:
    1518:	fa 01       	movw	r30, r20
    151a:	aa 27       	eor	r26, r26
    151c:	28 30       	cpi	r18, 0x08	; 8
    151e:	51 f1       	breq	.+84     	; 0x1574 <__ultoa_invert+0x5c>
    1520:	20 31       	cpi	r18, 0x10	; 16
    1522:	81 f1       	breq	.+96     	; 0x1584 <__ultoa_invert+0x6c>
    1524:	e8 94       	clt
    1526:	6f 93       	push	r22
    1528:	6e 7f       	andi	r22, 0xFE	; 254
    152a:	6e 5f       	subi	r22, 0xFE	; 254
    152c:	7f 4f       	sbci	r23, 0xFF	; 255
    152e:	8f 4f       	sbci	r24, 0xFF	; 255
    1530:	9f 4f       	sbci	r25, 0xFF	; 255
    1532:	af 4f       	sbci	r26, 0xFF	; 255
    1534:	b1 e0       	ldi	r27, 0x01	; 1
    1536:	3e d0       	rcall	.+124    	; 0x15b4 <__ultoa_invert+0x9c>
    1538:	b4 e0       	ldi	r27, 0x04	; 4
    153a:	3c d0       	rcall	.+120    	; 0x15b4 <__ultoa_invert+0x9c>
    153c:	67 0f       	add	r22, r23
    153e:	78 1f       	adc	r23, r24
    1540:	89 1f       	adc	r24, r25
    1542:	9a 1f       	adc	r25, r26
    1544:	a1 1d       	adc	r26, r1
    1546:	68 0f       	add	r22, r24
    1548:	79 1f       	adc	r23, r25
    154a:	8a 1f       	adc	r24, r26
    154c:	91 1d       	adc	r25, r1
    154e:	a1 1d       	adc	r26, r1
    1550:	6a 0f       	add	r22, r26
    1552:	71 1d       	adc	r23, r1
    1554:	81 1d       	adc	r24, r1
    1556:	91 1d       	adc	r25, r1
    1558:	a1 1d       	adc	r26, r1
    155a:	20 d0       	rcall	.+64     	; 0x159c <__ultoa_invert+0x84>
    155c:	09 f4       	brne	.+2      	; 0x1560 <__ultoa_invert+0x48>
    155e:	68 94       	set
    1560:	3f 91       	pop	r19
    1562:	2a e0       	ldi	r18, 0x0A	; 10
    1564:	26 9f       	mul	r18, r22
    1566:	11 24       	eor	r1, r1
    1568:	30 19       	sub	r19, r0
    156a:	30 5d       	subi	r19, 0xD0	; 208
    156c:	31 93       	st	Z+, r19
    156e:	de f6       	brtc	.-74     	; 0x1526 <__ultoa_invert+0xe>
    1570:	cf 01       	movw	r24, r30
    1572:	08 95       	ret
    1574:	46 2f       	mov	r20, r22
    1576:	47 70       	andi	r20, 0x07	; 7
    1578:	40 5d       	subi	r20, 0xD0	; 208
    157a:	41 93       	st	Z+, r20
    157c:	b3 e0       	ldi	r27, 0x03	; 3
    157e:	0f d0       	rcall	.+30     	; 0x159e <__ultoa_invert+0x86>
    1580:	c9 f7       	brne	.-14     	; 0x1574 <__ultoa_invert+0x5c>
    1582:	f6 cf       	rjmp	.-20     	; 0x1570 <__ultoa_invert+0x58>
    1584:	46 2f       	mov	r20, r22
    1586:	4f 70       	andi	r20, 0x0F	; 15
    1588:	40 5d       	subi	r20, 0xD0	; 208
    158a:	4a 33       	cpi	r20, 0x3A	; 58
    158c:	18 f0       	brcs	.+6      	; 0x1594 <__ultoa_invert+0x7c>
    158e:	49 5d       	subi	r20, 0xD9	; 217
    1590:	31 fd       	sbrc	r19, 1
    1592:	40 52       	subi	r20, 0x20	; 32
    1594:	41 93       	st	Z+, r20
    1596:	02 d0       	rcall	.+4      	; 0x159c <__ultoa_invert+0x84>
    1598:	a9 f7       	brne	.-22     	; 0x1584 <__ultoa_invert+0x6c>
    159a:	ea cf       	rjmp	.-44     	; 0x1570 <__ultoa_invert+0x58>
    159c:	b4 e0       	ldi	r27, 0x04	; 4
    159e:	a6 95       	lsr	r26
    15a0:	97 95       	ror	r25
    15a2:	87 95       	ror	r24
    15a4:	77 95       	ror	r23
    15a6:	67 95       	ror	r22
    15a8:	ba 95       	dec	r27
    15aa:	c9 f7       	brne	.-14     	; 0x159e <__ultoa_invert+0x86>
    15ac:	00 97       	sbiw	r24, 0x00	; 0
    15ae:	61 05       	cpc	r22, r1
    15b0:	71 05       	cpc	r23, r1
    15b2:	08 95       	ret
    15b4:	9b 01       	movw	r18, r22
    15b6:	ac 01       	movw	r20, r24
    15b8:	0a 2e       	mov	r0, r26
    15ba:	06 94       	lsr	r0
    15bc:	57 95       	ror	r21
    15be:	47 95       	ror	r20
    15c0:	37 95       	ror	r19
    15c2:	27 95       	ror	r18
    15c4:	ba 95       	dec	r27
    15c6:	c9 f7       	brne	.-14     	; 0x15ba <__ultoa_invert+0xa2>
    15c8:	62 0f       	add	r22, r18
    15ca:	73 1f       	adc	r23, r19
    15cc:	84 1f       	adc	r24, r20
    15ce:	95 1f       	adc	r25, r21
    15d0:	a0 1d       	adc	r26, r0
    15d2:	08 95       	ret

000015d4 <__prologue_saves__>:
    15d4:	2f 92       	push	r2
    15d6:	3f 92       	push	r3
    15d8:	4f 92       	push	r4
    15da:	5f 92       	push	r5
    15dc:	6f 92       	push	r6
    15de:	7f 92       	push	r7
    15e0:	8f 92       	push	r8
    15e2:	9f 92       	push	r9
    15e4:	af 92       	push	r10
    15e6:	bf 92       	push	r11
    15e8:	cf 92       	push	r12
    15ea:	df 92       	push	r13
    15ec:	ef 92       	push	r14
    15ee:	ff 92       	push	r15
    15f0:	0f 93       	push	r16
    15f2:	1f 93       	push	r17
    15f4:	cf 93       	push	r28
    15f6:	df 93       	push	r29
    15f8:	cd b7       	in	r28, 0x3d	; 61
    15fa:	de b7       	in	r29, 0x3e	; 62
    15fc:	ca 1b       	sub	r28, r26
    15fe:	db 0b       	sbc	r29, r27
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	de bf       	out	0x3e, r29	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	cd bf       	out	0x3d, r28	; 61
    160a:	09 94       	ijmp

0000160c <__epilogue_restores__>:
    160c:	2a 88       	ldd	r2, Y+18	; 0x12
    160e:	39 88       	ldd	r3, Y+17	; 0x11
    1610:	48 88       	ldd	r4, Y+16	; 0x10
    1612:	5f 84       	ldd	r5, Y+15	; 0x0f
    1614:	6e 84       	ldd	r6, Y+14	; 0x0e
    1616:	7d 84       	ldd	r7, Y+13	; 0x0d
    1618:	8c 84       	ldd	r8, Y+12	; 0x0c
    161a:	9b 84       	ldd	r9, Y+11	; 0x0b
    161c:	aa 84       	ldd	r10, Y+10	; 0x0a
    161e:	b9 84       	ldd	r11, Y+9	; 0x09
    1620:	c8 84       	ldd	r12, Y+8	; 0x08
    1622:	df 80       	ldd	r13, Y+7	; 0x07
    1624:	ee 80       	ldd	r14, Y+6	; 0x06
    1626:	fd 80       	ldd	r15, Y+5	; 0x05
    1628:	0c 81       	ldd	r16, Y+4	; 0x04
    162a:	1b 81       	ldd	r17, Y+3	; 0x03
    162c:	aa 81       	ldd	r26, Y+2	; 0x02
    162e:	b9 81       	ldd	r27, Y+1	; 0x01
    1630:	ce 0f       	add	r28, r30
    1632:	d1 1d       	adc	r29, r1
    1634:	0f b6       	in	r0, 0x3f	; 63
    1636:	f8 94       	cli
    1638:	de bf       	out	0x3e, r29	; 62
    163a:	0f be       	out	0x3f, r0	; 63
    163c:	cd bf       	out	0x3d, r28	; 61
    163e:	ed 01       	movw	r28, r26
    1640:	08 95       	ret

00001642 <_exit>:
    1642:	f8 94       	cli

00001644 <__stop_program>:
    1644:	ff cf       	rjmp	.-2      	; 0x1644 <__stop_program>
