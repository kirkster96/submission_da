
midterm1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  00000626  0000069a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000626  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000007b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f18  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000afd  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000626  00000000  00000000  00002209  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00002830  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00008512  00000000  00000000  000028b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000314  00000000  00000000  0000adc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000b0d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000005aa  00000000  00000000  0000b106  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__bad_interrupt>
   6:	00 00       	nop
   8:	70 c0       	rjmp	.+224    	; 0xea <__bad_interrupt>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 e2       	ldi	r30, 0x26	; 38
  c8:	f6 e0       	ldi	r31, 0x06	; 6
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	aa 3a       	cpi	r26, 0xAA	; 170
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	aa ea       	ldi	r26, 0xAA	; 170
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 3a       	cpi	r26, 0xAA	; 170
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	2b d0       	rcall	.+86     	; 0x13e <main>
  e8:	9c c2       	rjmp	.+1336   	; 0x622 <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <usart_init>:
	while(! (UCSR0A & (1<<UDRE0)));	//wait until UDR0 is empty
	UDR0 = ch;		//transmit ch
}

	
void check_OK(){
  ec:	e1 ec       	ldi	r30, 0xC1	; 193
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 61       	ori	r24, 0x18	; 24
  f4:	80 83       	st	Z, r24
  f6:	a2 ec       	ldi	r26, 0xC2	; 194
  f8:	b0 e0       	ldi	r27, 0x00	; 0
  fa:	8c 91       	ld	r24, X
  fc:	86 60       	ori	r24, 0x06	; 6
  fe:	8c 93       	st	X, r24
 100:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 104:	87 e6       	ldi	r24, 0x67	; 103
 106:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 10a:	80 81       	ld	r24, Z
 10c:	80 68       	ori	r24, 0x80	; 128
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <usart_send>:
 112:	e0 ec       	ldi	r30, 0xC0	; 192
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	90 81       	ld	r25, Z
 118:	95 ff       	sbrs	r25, 5
 11a:	fd cf       	rjmp	.-6      	; 0x116 <usart_send+0x4>
 11c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 120:	08 95       	ret

00000122 <UART_sendString>:

	*/
		
	}
	
void UART_sendString(const char *str){
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	ec 01       	movw	r28, r24
	
	while(*str){
 128:	88 81       	ld	r24, Y
 12a:	88 23       	and	r24, r24
 12c:	29 f0       	breq	.+10     	; 0x138 <UART_sendString+0x16>
 12e:	21 96       	adiw	r28, 0x01	; 1
		usart_send(*str++);
 130:	f0 df       	rcall	.-32     	; 0x112 <usart_send>
		
	}
	
void UART_sendString(const char *str){
	
	while(*str){
 132:	89 91       	ld	r24, Y+
 134:	81 11       	cpse	r24, r1
 136:	fc cf       	rjmp	.-8      	; 0x130 <UART_sendString+0xe>
		usart_send(*str++);
		}
			
}
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <main>:
volatile unsigned char data_count;
volatile unsigned char command_ready;


int main (void)
{
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	00 d0       	rcall	.+0      	; 0x144 <main+0x6>
 144:	00 d0       	rcall	.+0      	; 0x146 <main+0x8>
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
	//initialize the usart
	usart_init ();
 14a:	d0 df       	rcall	.-96     	; 0xec <usart_init>
	
	ADMUX = (0<<REFS1)|	//Reference selection bits
 14c:	84 e4       	ldi	r24, 0x44	; 68
 14e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|			//AVcc - external cap at AREF
	(0<<ADLAR)|			//Left adjust most significant bit
	(1<<MUX2)|			//Analog channel selection bits
	(0<<MUX1)|			//ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|	//	Enable ADC
 152:	85 e8       	ldi	r24, 0x85	; 133
 154:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(0<<ADIE)|			//ADC Interrupt Enable
	(1<<ADPS2)|			//ADC prescaler bits
	(0<<ADPS1)|
	(1<<ADPS0);
	
	UART_sendString("AT\r\n");
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	e2 df       	rcall	.-60     	; 0x122 <UART_sendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	3b e7       	ldi	r19, 0x7B	; 123
 162:	82 e9       	ldi	r24, 0x92	; 146
 164:	21 50       	subi	r18, 0x01	; 1
 166:	30 40       	sbci	r19, 0x00	; 0
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x26>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x30>
 16e:	00 00       	nop
		_delay_ms(3000);
	check_OK();
	// Select WIFI mode
	UART_sendString("AT+CWMODE=1\r\n");
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	d6 df       	rcall	.-84     	; 0x122 <UART_sendString>
 176:	9f ef       	ldi	r25, 0xFF	; 255
 178:	eb e7       	ldi	r30, 0x7B	; 123
 17a:	f2 e9       	ldi	r31, 0x92	; 146
 17c:	91 50       	subi	r25, 0x01	; 1
 17e:	e0 40       	sbci	r30, 0x00	; 0
 180:	f0 40       	sbci	r31, 0x00	; 0
 182:	e1 f7       	brne	.-8      	; 0x17c <main+0x3e>
 184:	00 c0       	rjmp	.+0      	; 0x186 <main+0x48>
	_delay_ms(3000);
	// Connect to local WIFI
	UART_sendString("AT+CWJAP=\"tasha\",\"Carlsbad2002\"\r\n");
 186:	00 00       	nop
 188:	83 e1       	ldi	r24, 0x13	; 19
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	ca df       	rcall	.-108    	; 0x122 <UART_sendString>
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	3b e7       	ldi	r19, 0x7B	; 123
 192:	82 e9       	ldi	r24, 0x92	; 146
 194:	21 50       	subi	r18, 0x01	; 1
 196:	30 40       	sbci	r19, 0x00	; 0
 198:	80 40       	sbci	r24, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x56>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x60>
	_delay_ms(3000);
	// Enable connection
	UART_sendString("AT+CIPMUX=0\r\n");
 19e:	00 00       	nop
 1a0:	85 e3       	ldi	r24, 0x35	; 53
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	be df       	rcall	.-132    	; 0x122 <UART_sendString>
 1a6:	9f ef       	ldi	r25, 0xFF	; 255
 1a8:	eb e7       	ldi	r30, 0x7B	; 123
 1aa:	f2 e9       	ldi	r31, 0x92	; 146
 1ac:	91 50       	subi	r25, 0x01	; 1
 1ae:	e0 40       	sbci	r30, 0x00	; 0
 1b0:	f0 40       	sbci	r31, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x6e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x78>
 1b6:	00 00       	nop
	_delay_ms(3000);
		
	volatile unsigned char TEMP [4];
	while (1){
		ADCSRA |= (1<<ADSC);			//start conversion
 1b8:	0a e7       	ldi	r16, 0x7A	; 122
 1ba:	10 e0       	ldi	r17, 0x00	; 0
		
		ADCSRA |= (1<<ADIF);
		
		
		
		int c = ADCL;
 1bc:	0f 2e       	mov	r0, r31
 1be:	f8 e7       	ldi	r31, 0x78	; 120
 1c0:	cf 2e       	mov	r12, r31
 1c2:	d1 2c       	mov	r13, r1
 1c4:	f0 2d       	mov	r31, r0
		c = c | (ADCH<<8);
 1c6:	0f 2e       	mov	r0, r31
 1c8:	f9 e7       	ldi	r31, 0x79	; 121
 1ca:	ef 2e       	mov	r14, r31
 1cc:	f1 2c       	mov	r15, r1
 1ce:	f0 2d       	mov	r31, r0
	UART_sendString("AT+CIPMUX=0\r\n");
	_delay_ms(3000);
		
	volatile unsigned char TEMP [4];
	while (1){
		ADCSRA |= (1<<ADSC);			//start conversion
 1d0:	f8 01       	movw	r30, r16
 1d2:	80 81       	ld	r24, Z
 1d4:	80 64       	ori	r24, 0x40	; 64
 1d6:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);	//wait for conversion to complete 
 1d8:	f8 01       	movw	r30, r16
 1da:	80 81       	ld	r24, Z
 1dc:	84 ff       	sbrs	r24, 4
 1de:	fc cf       	rjmp	.-8      	; 0x1d8 <main+0x9a>
		
		ADCSRA |= (1<<ADIF);
 1e0:	80 81       	ld	r24, Z
 1e2:	80 61       	ori	r24, 0x10	; 16
 1e4:	80 83       	st	Z, r24
		
		
		
		int c = ADCL;
 1e6:	f6 01       	movw	r30, r12
 1e8:	60 81       	ld	r22, Z
		c = c | (ADCH<<8);
 1ea:	f7 01       	movw	r30, r14
 1ec:	80 81       	ld	r24, Z
		c = (c/1024.0)*5000/10;
 1ee:	70 e0       	ldi	r23, 0x00	; 0
 1f0:	78 2b       	or	r23, r24
 1f2:	07 2e       	mov	r0, r23
 1f4:	00 0c       	add	r0, r0
 1f6:	88 0b       	sbc	r24, r24
 1f8:	99 0b       	sbc	r25, r25
 1fa:	f1 d0       	rcall	.+482    	; 0x3de <__floatsisf>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 e8       	ldi	r20, 0x80	; 128
 202:	5a e3       	ldi	r21, 0x3A	; 58
 204:	78 d1       	rcall	.+752    	; 0x4f6 <__mulsf3>
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e4       	ldi	r19, 0x40	; 64
 20a:	4c e9       	ldi	r20, 0x9C	; 156
 20c:	55 e4       	ldi	r21, 0x45	; 69
 20e:	73 d1       	rcall	.+742    	; 0x4f6 <__mulsf3>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	40 e2       	ldi	r20, 0x20	; 32
 216:	51 e4       	ldi	r21, 0x41	; 65
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 218:	47 d0       	rcall	.+142    	; 0x2a8 <__divsf3>
 21a:	ae d0       	rcall	.+348    	; 0x378 <__fixsfsi>
 21c:	dc 01       	movw	r26, r24
 21e:	cb 01       	movw	r24, r22
 220:	4a e0       	ldi	r20, 0x0A	; 10
 222:	be 01       	movw	r22, r28
 224:	6f 5f       	subi	r22, 0xFF	; 255
 226:	7f 4f       	sbci	r23, 0xFF	; 255
 228:	c9 d1       	rcall	.+914    	; 0x5bc <__itoa_ncheck>
		itoa(c,TEMP,10);

		
		
		// Start a connection as client to Thingspeak
		UART_sendString("AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n");
 22a:	83 e4       	ldi	r24, 0x43	; 67
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	79 df       	rcall	.-270    	; 0x122 <UART_sendString>
 230:	ff ef       	ldi	r31, 0xFF	; 255
 232:	27 ea       	ldi	r18, 0xA7	; 167
 234:	31 e6       	ldi	r19, 0x61	; 97
 236:	f1 50       	subi	r31, 0x01	; 1
 238:	20 40       	sbci	r18, 0x00	; 0
 23a:	30 40       	sbci	r19, 0x00	; 0
 23c:	e1 f7       	brne	.-8      	; 0x236 <main+0xf8>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <main+0x102>
 240:	00 00       	nop
		_delay_ms(2000);
		// Specify the size of the data
		UART_sendString("AT+CIPSEND=45\r\n");
 242:	8c e6       	ldi	r24, 0x6C	; 108
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	6d df       	rcall	.-294    	; 0x122 <UART_sendString>
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	97 ea       	ldi	r25, 0xA7	; 167
 24c:	e1 e6       	ldi	r30, 0x61	; 97
 24e:	81 50       	subi	r24, 0x01	; 1
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	e0 40       	sbci	r30, 0x00	; 0
 254:	e1 f7       	brne	.-8      	; 0x24e <main+0x110>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0x11a>
 258:	00 00       	nop
		_delay_ms(2000);
		// Send temperature
		UART_sendString("GET /update?key=2NB8QCW9WK5PJNS9&field1=");
 25a:	8c e7       	ldi	r24, 0x7C	; 124
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	61 df       	rcall	.-318    	; 0x122 <UART_sendString>
 260:	ff ef       	ldi	r31, 0xFF	; 255
 262:	27 ea       	ldi	r18, 0xA7	; 167
 264:	31 e6       	ldi	r19, 0x61	; 97
 266:	f1 50       	subi	r31, 0x01	; 1
 268:	20 40       	sbci	r18, 0x00	; 0
 26a:	30 40       	sbci	r19, 0x00	; 0
 26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x128>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x132>
 270:	00 00       	nop
		_delay_ms(2000);
		UART_sendString(TEMP);
 272:	ce 01       	movw	r24, r28
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	55 df       	rcall	.-342    	; 0x122 <UART_sendString>
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	97 ea       	ldi	r25, 0xA7	; 167
 27c:	e1 e6       	ldi	r30, 0x61	; 97
 27e:	81 50       	subi	r24, 0x01	; 1
 280:	90 40       	sbci	r25, 0x00	; 0
 282:	e0 40       	sbci	r30, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <main+0x140>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x14a>
 288:	00 00       	nop
		_delay_ms(2000);
		UART_sendString("\r\n\r\n");
 28a:	85 ea       	ldi	r24, 0xA5	; 165
 28c:	91 e0       	ldi	r25, 0x01	; 1
 28e:	49 df       	rcall	.-366    	; 0x122 <UART_sendString>
 290:	ff ef       	ldi	r31, 0xFF	; 255
 292:	29 e5       	ldi	r18, 0x59	; 89
 294:	32 e6       	ldi	r19, 0x62	; 98
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	f1 50       	subi	r31, 0x01	; 1
 29a:	20 40       	sbci	r18, 0x00	; 0
 29c:	30 40       	sbci	r19, 0x00	; 0
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	d9 f7       	brne	.-10     	; 0x298 <main+0x15a>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <main+0x166>
 2a4:	00 00       	nop
 2a6:	94 cf       	rjmp	.-216    	; 0x1d0 <main+0x92>

000002a8 <__divsf3>:
 2a8:	0c d0       	rcall	.+24     	; 0x2c2 <__divsf3x>
 2aa:	eb c0       	rjmp	.+470    	; 0x482 <__fp_round>
 2ac:	e3 d0       	rcall	.+454    	; 0x474 <__fp_pscB>
 2ae:	40 f0       	brcs	.+16     	; 0x2c0 <__divsf3+0x18>
 2b0:	da d0       	rcall	.+436    	; 0x466 <__fp_pscA>
 2b2:	30 f0       	brcs	.+12     	; 0x2c0 <__divsf3+0x18>
 2b4:	21 f4       	brne	.+8      	; 0x2be <__divsf3+0x16>
 2b6:	5f 3f       	cpi	r21, 0xFF	; 255
 2b8:	19 f0       	breq	.+6      	; 0x2c0 <__divsf3+0x18>
 2ba:	cc c0       	rjmp	.+408    	; 0x454 <__fp_inf>
 2bc:	51 11       	cpse	r21, r1
 2be:	15 c1       	rjmp	.+554    	; 0x4ea <__fp_szero>
 2c0:	cf c0       	rjmp	.+414    	; 0x460 <__fp_nan>

000002c2 <__divsf3x>:
 2c2:	f0 d0       	rcall	.+480    	; 0x4a4 <__fp_split3>
 2c4:	98 f3       	brcs	.-26     	; 0x2ac <__divsf3+0x4>

000002c6 <__divsf3_pse>:
 2c6:	99 23       	and	r25, r25
 2c8:	c9 f3       	breq	.-14     	; 0x2bc <__divsf3+0x14>
 2ca:	55 23       	and	r21, r21
 2cc:	b1 f3       	breq	.-20     	; 0x2ba <__divsf3+0x12>
 2ce:	95 1b       	sub	r25, r21
 2d0:	55 0b       	sbc	r21, r21
 2d2:	bb 27       	eor	r27, r27
 2d4:	aa 27       	eor	r26, r26
 2d6:	62 17       	cp	r22, r18
 2d8:	73 07       	cpc	r23, r19
 2da:	84 07       	cpc	r24, r20
 2dc:	38 f0       	brcs	.+14     	; 0x2ec <__divsf3_pse+0x26>
 2de:	9f 5f       	subi	r25, 0xFF	; 255
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	22 0f       	add	r18, r18
 2e4:	33 1f       	adc	r19, r19
 2e6:	44 1f       	adc	r20, r20
 2e8:	aa 1f       	adc	r26, r26
 2ea:	a9 f3       	breq	.-22     	; 0x2d6 <__divsf3_pse+0x10>
 2ec:	33 d0       	rcall	.+102    	; 0x354 <__divsf3_pse+0x8e>
 2ee:	0e 2e       	mov	r0, r30
 2f0:	3a f0       	brmi	.+14     	; 0x300 <__divsf3_pse+0x3a>
 2f2:	e0 e8       	ldi	r30, 0x80	; 128
 2f4:	30 d0       	rcall	.+96     	; 0x356 <__divsf3_pse+0x90>
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	50 40       	sbci	r21, 0x00	; 0
 2fa:	e6 95       	lsr	r30
 2fc:	00 1c       	adc	r0, r0
 2fe:	ca f7       	brpl	.-14     	; 0x2f2 <__divsf3_pse+0x2c>
 300:	29 d0       	rcall	.+82     	; 0x354 <__divsf3_pse+0x8e>
 302:	fe 2f       	mov	r31, r30
 304:	27 d0       	rcall	.+78     	; 0x354 <__divsf3_pse+0x8e>
 306:	66 0f       	add	r22, r22
 308:	77 1f       	adc	r23, r23
 30a:	88 1f       	adc	r24, r24
 30c:	bb 1f       	adc	r27, r27
 30e:	26 17       	cp	r18, r22
 310:	37 07       	cpc	r19, r23
 312:	48 07       	cpc	r20, r24
 314:	ab 07       	cpc	r26, r27
 316:	b0 e8       	ldi	r27, 0x80	; 128
 318:	09 f0       	breq	.+2      	; 0x31c <__divsf3_pse+0x56>
 31a:	bb 0b       	sbc	r27, r27
 31c:	80 2d       	mov	r24, r0
 31e:	bf 01       	movw	r22, r30
 320:	ff 27       	eor	r31, r31
 322:	93 58       	subi	r25, 0x83	; 131
 324:	5f 4f       	sbci	r21, 0xFF	; 255
 326:	2a f0       	brmi	.+10     	; 0x332 <__divsf3_pse+0x6c>
 328:	9e 3f       	cpi	r25, 0xFE	; 254
 32a:	51 05       	cpc	r21, r1
 32c:	68 f0       	brcs	.+26     	; 0x348 <__divsf3_pse+0x82>
 32e:	92 c0       	rjmp	.+292    	; 0x454 <__fp_inf>
 330:	dc c0       	rjmp	.+440    	; 0x4ea <__fp_szero>
 332:	5f 3f       	cpi	r21, 0xFF	; 255
 334:	ec f3       	brlt	.-6      	; 0x330 <__divsf3_pse+0x6a>
 336:	98 3e       	cpi	r25, 0xE8	; 232
 338:	dc f3       	brlt	.-10     	; 0x330 <__divsf3_pse+0x6a>
 33a:	86 95       	lsr	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b7 95       	ror	r27
 342:	f7 95       	ror	r31
 344:	9f 5f       	subi	r25, 0xFF	; 255
 346:	c9 f7       	brne	.-14     	; 0x33a <__divsf3_pse+0x74>
 348:	88 0f       	add	r24, r24
 34a:	91 1d       	adc	r25, r1
 34c:	96 95       	lsr	r25
 34e:	87 95       	ror	r24
 350:	97 f9       	bld	r25, 7
 352:	08 95       	ret
 354:	e1 e0       	ldi	r30, 0x01	; 1
 356:	66 0f       	add	r22, r22
 358:	77 1f       	adc	r23, r23
 35a:	88 1f       	adc	r24, r24
 35c:	bb 1f       	adc	r27, r27
 35e:	62 17       	cp	r22, r18
 360:	73 07       	cpc	r23, r19
 362:	84 07       	cpc	r24, r20
 364:	ba 07       	cpc	r27, r26
 366:	20 f0       	brcs	.+8      	; 0x370 <__divsf3_pse+0xaa>
 368:	62 1b       	sub	r22, r18
 36a:	73 0b       	sbc	r23, r19
 36c:	84 0b       	sbc	r24, r20
 36e:	ba 0b       	sbc	r27, r26
 370:	ee 1f       	adc	r30, r30
 372:	88 f7       	brcc	.-30     	; 0x356 <__divsf3_pse+0x90>
 374:	e0 95       	com	r30
 376:	08 95       	ret

00000378 <__fixsfsi>:
 378:	04 d0       	rcall	.+8      	; 0x382 <__fixunssfsi>
 37a:	68 94       	set
 37c:	b1 11       	cpse	r27, r1
 37e:	b5 c0       	rjmp	.+362    	; 0x4ea <__fp_szero>
 380:	08 95       	ret

00000382 <__fixunssfsi>:
 382:	98 d0       	rcall	.+304    	; 0x4b4 <__fp_splitA>
 384:	88 f0       	brcs	.+34     	; 0x3a8 <__fixunssfsi+0x26>
 386:	9f 57       	subi	r25, 0x7F	; 127
 388:	90 f0       	brcs	.+36     	; 0x3ae <__fixunssfsi+0x2c>
 38a:	b9 2f       	mov	r27, r25
 38c:	99 27       	eor	r25, r25
 38e:	b7 51       	subi	r27, 0x17	; 23
 390:	a0 f0       	brcs	.+40     	; 0x3ba <__fixunssfsi+0x38>
 392:	d1 f0       	breq	.+52     	; 0x3c8 <__fixunssfsi+0x46>
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	88 1f       	adc	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	1a f0       	brmi	.+6      	; 0x3a4 <__fixunssfsi+0x22>
 39e:	ba 95       	dec	r27
 3a0:	c9 f7       	brne	.-14     	; 0x394 <__fixunssfsi+0x12>
 3a2:	12 c0       	rjmp	.+36     	; 0x3c8 <__fixunssfsi+0x46>
 3a4:	b1 30       	cpi	r27, 0x01	; 1
 3a6:	81 f0       	breq	.+32     	; 0x3c8 <__fixunssfsi+0x46>
 3a8:	9f d0       	rcall	.+318    	; 0x4e8 <__fp_zero>
 3aa:	b1 e0       	ldi	r27, 0x01	; 1
 3ac:	08 95       	ret
 3ae:	9c c0       	rjmp	.+312    	; 0x4e8 <__fp_zero>
 3b0:	67 2f       	mov	r22, r23
 3b2:	78 2f       	mov	r23, r24
 3b4:	88 27       	eor	r24, r24
 3b6:	b8 5f       	subi	r27, 0xF8	; 248
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <__fixunssfsi+0x46>
 3ba:	b9 3f       	cpi	r27, 0xF9	; 249
 3bc:	cc f3       	brlt	.-14     	; 0x3b0 <__fixunssfsi+0x2e>
 3be:	86 95       	lsr	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b3 95       	inc	r27
 3c6:	d9 f7       	brne	.-10     	; 0x3be <__fixunssfsi+0x3c>
 3c8:	3e f4       	brtc	.+14     	; 0x3d8 <__fixunssfsi+0x56>
 3ca:	90 95       	com	r25
 3cc:	80 95       	com	r24
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__floatunsisf>:
 3da:	e8 94       	clt
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <__floatsisf+0x12>

000003de <__floatsisf>:
 3de:	97 fb       	bst	r25, 7
 3e0:	3e f4       	brtc	.+14     	; 0x3f0 <__floatsisf+0x12>
 3e2:	90 95       	com	r25
 3e4:	80 95       	com	r24
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	99 23       	and	r25, r25
 3f2:	a9 f0       	breq	.+42     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f4:	f9 2f       	mov	r31, r25
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	bb 27       	eor	r27, r27
 3fa:	93 95       	inc	r25
 3fc:	f6 95       	lsr	r31
 3fe:	87 95       	ror	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b7 95       	ror	r27
 406:	f1 11       	cpse	r31, r1
 408:	f8 cf       	rjmp	.-16     	; 0x3fa <__floatsisf+0x1c>
 40a:	fa f4       	brpl	.+62     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 40c:	bb 0f       	add	r27, r27
 40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 410:	60 ff       	sbrs	r22, 0
 412:	1b c0       	rjmp	.+54     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 414:	6f 5f       	subi	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	16 c0       	rjmp	.+44     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41e:	88 23       	and	r24, r24
 420:	11 f0       	breq	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	96 e9       	ldi	r25, 0x96	; 150
 424:	11 c0       	rjmp	.+34     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 426:	77 23       	and	r23, r23
 428:	21 f0       	breq	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42a:	9e e8       	ldi	r25, 0x8E	; 142
 42c:	87 2f       	mov	r24, r23
 42e:	76 2f       	mov	r23, r22
 430:	05 c0       	rjmp	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	66 23       	and	r22, r22
 434:	71 f0       	breq	.+28     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 436:	96 e8       	ldi	r25, 0x86	; 134
 438:	86 2f       	mov	r24, r22
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	2a f0       	brmi	.+10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 440:	9a 95       	dec	r25
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	da f7       	brpl	.-10     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 44a:	88 0f       	add	r24, r24
 44c:	96 95       	lsr	r25
 44e:	87 95       	ror	r24
 450:	97 f9       	bld	r25, 7
 452:	08 95       	ret

00000454 <__fp_inf>:
 454:	97 f9       	bld	r25, 7
 456:	9f 67       	ori	r25, 0x7F	; 127
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	08 95       	ret

00000460 <__fp_nan>:
 460:	9f ef       	ldi	r25, 0xFF	; 255
 462:	80 ec       	ldi	r24, 0xC0	; 192
 464:	08 95       	ret

00000466 <__fp_pscA>:
 466:	00 24       	eor	r0, r0
 468:	0a 94       	dec	r0
 46a:	16 16       	cp	r1, r22
 46c:	17 06       	cpc	r1, r23
 46e:	18 06       	cpc	r1, r24
 470:	09 06       	cpc	r0, r25
 472:	08 95       	ret

00000474 <__fp_pscB>:
 474:	00 24       	eor	r0, r0
 476:	0a 94       	dec	r0
 478:	12 16       	cp	r1, r18
 47a:	13 06       	cpc	r1, r19
 47c:	14 06       	cpc	r1, r20
 47e:	05 06       	cpc	r0, r21
 480:	08 95       	ret

00000482 <__fp_round>:
 482:	09 2e       	mov	r0, r25
 484:	03 94       	inc	r0
 486:	00 0c       	add	r0, r0
 488:	11 f4       	brne	.+4      	; 0x48e <__fp_round+0xc>
 48a:	88 23       	and	r24, r24
 48c:	52 f0       	brmi	.+20     	; 0x4a2 <__fp_round+0x20>
 48e:	bb 0f       	add	r27, r27
 490:	40 f4       	brcc	.+16     	; 0x4a2 <__fp_round+0x20>
 492:	bf 2b       	or	r27, r31
 494:	11 f4       	brne	.+4      	; 0x49a <__fp_round+0x18>
 496:	60 ff       	sbrs	r22, 0
 498:	04 c0       	rjmp	.+8      	; 0x4a2 <__fp_round+0x20>
 49a:	6f 5f       	subi	r22, 0xFF	; 255
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	08 95       	ret

000004a4 <__fp_split3>:
 4a4:	57 fd       	sbrc	r21, 7
 4a6:	90 58       	subi	r25, 0x80	; 128
 4a8:	44 0f       	add	r20, r20
 4aa:	55 1f       	adc	r21, r21
 4ac:	59 f0       	breq	.+22     	; 0x4c4 <__fp_splitA+0x10>
 4ae:	5f 3f       	cpi	r21, 0xFF	; 255
 4b0:	71 f0       	breq	.+28     	; 0x4ce <__fp_splitA+0x1a>
 4b2:	47 95       	ror	r20

000004b4 <__fp_splitA>:
 4b4:	88 0f       	add	r24, r24
 4b6:	97 fb       	bst	r25, 7
 4b8:	99 1f       	adc	r25, r25
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <__fp_splitA+0x20>
 4bc:	9f 3f       	cpi	r25, 0xFF	; 255
 4be:	79 f0       	breq	.+30     	; 0x4de <__fp_splitA+0x2a>
 4c0:	87 95       	ror	r24
 4c2:	08 95       	ret
 4c4:	12 16       	cp	r1, r18
 4c6:	13 06       	cpc	r1, r19
 4c8:	14 06       	cpc	r1, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	f2 cf       	rjmp	.-28     	; 0x4b2 <__fp_split3+0xe>
 4ce:	46 95       	lsr	r20
 4d0:	f1 df       	rcall	.-30     	; 0x4b4 <__fp_splitA>
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__fp_splitA+0x30>
 4d4:	16 16       	cp	r1, r22
 4d6:	17 06       	cpc	r1, r23
 4d8:	18 06       	cpc	r1, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	f1 cf       	rjmp	.-30     	; 0x4c0 <__fp_splitA+0xc>
 4de:	86 95       	lsr	r24
 4e0:	71 05       	cpc	r23, r1
 4e2:	61 05       	cpc	r22, r1
 4e4:	08 94       	sec
 4e6:	08 95       	ret

000004e8 <__fp_zero>:
 4e8:	e8 94       	clt

000004ea <__fp_szero>:
 4ea:	bb 27       	eor	r27, r27
 4ec:	66 27       	eor	r22, r22
 4ee:	77 27       	eor	r23, r23
 4f0:	cb 01       	movw	r24, r22
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret

000004f6 <__mulsf3>:
 4f6:	0b d0       	rcall	.+22     	; 0x50e <__mulsf3x>
 4f8:	c4 cf       	rjmp	.-120    	; 0x482 <__fp_round>
 4fa:	b5 df       	rcall	.-150    	; 0x466 <__fp_pscA>
 4fc:	28 f0       	brcs	.+10     	; 0x508 <__mulsf3+0x12>
 4fe:	ba df       	rcall	.-140    	; 0x474 <__fp_pscB>
 500:	18 f0       	brcs	.+6      	; 0x508 <__mulsf3+0x12>
 502:	95 23       	and	r25, r21
 504:	09 f0       	breq	.+2      	; 0x508 <__mulsf3+0x12>
 506:	a6 cf       	rjmp	.-180    	; 0x454 <__fp_inf>
 508:	ab cf       	rjmp	.-170    	; 0x460 <__fp_nan>
 50a:	11 24       	eor	r1, r1
 50c:	ee cf       	rjmp	.-36     	; 0x4ea <__fp_szero>

0000050e <__mulsf3x>:
 50e:	ca df       	rcall	.-108    	; 0x4a4 <__fp_split3>
 510:	a0 f3       	brcs	.-24     	; 0x4fa <__mulsf3+0x4>

00000512 <__mulsf3_pse>:
 512:	95 9f       	mul	r25, r21
 514:	d1 f3       	breq	.-12     	; 0x50a <__mulsf3+0x14>
 516:	95 0f       	add	r25, r21
 518:	50 e0       	ldi	r21, 0x00	; 0
 51a:	55 1f       	adc	r21, r21
 51c:	62 9f       	mul	r22, r18
 51e:	f0 01       	movw	r30, r0
 520:	72 9f       	mul	r23, r18
 522:	bb 27       	eor	r27, r27
 524:	f0 0d       	add	r31, r0
 526:	b1 1d       	adc	r27, r1
 528:	63 9f       	mul	r22, r19
 52a:	aa 27       	eor	r26, r26
 52c:	f0 0d       	add	r31, r0
 52e:	b1 1d       	adc	r27, r1
 530:	aa 1f       	adc	r26, r26
 532:	64 9f       	mul	r22, r20
 534:	66 27       	eor	r22, r22
 536:	b0 0d       	add	r27, r0
 538:	a1 1d       	adc	r26, r1
 53a:	66 1f       	adc	r22, r22
 53c:	82 9f       	mul	r24, r18
 53e:	22 27       	eor	r18, r18
 540:	b0 0d       	add	r27, r0
 542:	a1 1d       	adc	r26, r1
 544:	62 1f       	adc	r22, r18
 546:	73 9f       	mul	r23, r19
 548:	b0 0d       	add	r27, r0
 54a:	a1 1d       	adc	r26, r1
 54c:	62 1f       	adc	r22, r18
 54e:	83 9f       	mul	r24, r19
 550:	a0 0d       	add	r26, r0
 552:	61 1d       	adc	r22, r1
 554:	22 1f       	adc	r18, r18
 556:	74 9f       	mul	r23, r20
 558:	33 27       	eor	r19, r19
 55a:	a0 0d       	add	r26, r0
 55c:	61 1d       	adc	r22, r1
 55e:	23 1f       	adc	r18, r19
 560:	84 9f       	mul	r24, r20
 562:	60 0d       	add	r22, r0
 564:	21 1d       	adc	r18, r1
 566:	82 2f       	mov	r24, r18
 568:	76 2f       	mov	r23, r22
 56a:	6a 2f       	mov	r22, r26
 56c:	11 24       	eor	r1, r1
 56e:	9f 57       	subi	r25, 0x7F	; 127
 570:	50 40       	sbci	r21, 0x00	; 0
 572:	8a f0       	brmi	.+34     	; 0x596 <__mulsf3_pse+0x84>
 574:	e1 f0       	breq	.+56     	; 0x5ae <__mulsf3_pse+0x9c>
 576:	88 23       	and	r24, r24
 578:	4a f0       	brmi	.+18     	; 0x58c <__mulsf3_pse+0x7a>
 57a:	ee 0f       	add	r30, r30
 57c:	ff 1f       	adc	r31, r31
 57e:	bb 1f       	adc	r27, r27
 580:	66 1f       	adc	r22, r22
 582:	77 1f       	adc	r23, r23
 584:	88 1f       	adc	r24, r24
 586:	91 50       	subi	r25, 0x01	; 1
 588:	50 40       	sbci	r21, 0x00	; 0
 58a:	a9 f7       	brne	.-22     	; 0x576 <__mulsf3_pse+0x64>
 58c:	9e 3f       	cpi	r25, 0xFE	; 254
 58e:	51 05       	cpc	r21, r1
 590:	70 f0       	brcs	.+28     	; 0x5ae <__mulsf3_pse+0x9c>
 592:	60 cf       	rjmp	.-320    	; 0x454 <__fp_inf>
 594:	aa cf       	rjmp	.-172    	; 0x4ea <__fp_szero>
 596:	5f 3f       	cpi	r21, 0xFF	; 255
 598:	ec f3       	brlt	.-6      	; 0x594 <__mulsf3_pse+0x82>
 59a:	98 3e       	cpi	r25, 0xE8	; 232
 59c:	dc f3       	brlt	.-10     	; 0x594 <__mulsf3_pse+0x82>
 59e:	86 95       	lsr	r24
 5a0:	77 95       	ror	r23
 5a2:	67 95       	ror	r22
 5a4:	b7 95       	ror	r27
 5a6:	f7 95       	ror	r31
 5a8:	e7 95       	ror	r30
 5aa:	9f 5f       	subi	r25, 0xFF	; 255
 5ac:	c1 f7       	brne	.-16     	; 0x59e <__mulsf3_pse+0x8c>
 5ae:	fe 2b       	or	r31, r30
 5b0:	88 0f       	add	r24, r24
 5b2:	91 1d       	adc	r25, r1
 5b4:	96 95       	lsr	r25
 5b6:	87 95       	ror	r24
 5b8:	97 f9       	bld	r25, 7
 5ba:	08 95       	ret

000005bc <__itoa_ncheck>:
 5bc:	bb 27       	eor	r27, r27
 5be:	4a 30       	cpi	r20, 0x0A	; 10
 5c0:	31 f4       	brne	.+12     	; 0x5ce <__itoa_ncheck+0x12>
 5c2:	99 23       	and	r25, r25
 5c4:	22 f4       	brpl	.+8      	; 0x5ce <__itoa_ncheck+0x12>
 5c6:	bd e2       	ldi	r27, 0x2D	; 45
 5c8:	90 95       	com	r25
 5ca:	81 95       	neg	r24
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <__utoa_common>

000005d0 <__utoa_ncheck>:
 5d0:	bb 27       	eor	r27, r27

000005d2 <__utoa_common>:
 5d2:	fb 01       	movw	r30, r22
 5d4:	55 27       	eor	r21, r21
 5d6:	aa 27       	eor	r26, r26
 5d8:	88 0f       	add	r24, r24
 5da:	99 1f       	adc	r25, r25
 5dc:	aa 1f       	adc	r26, r26
 5de:	a4 17       	cp	r26, r20
 5e0:	10 f0       	brcs	.+4      	; 0x5e6 <__utoa_common+0x14>
 5e2:	a4 1b       	sub	r26, r20
 5e4:	83 95       	inc	r24
 5e6:	50 51       	subi	r21, 0x10	; 16
 5e8:	b9 f7       	brne	.-18     	; 0x5d8 <__utoa_common+0x6>
 5ea:	a0 5d       	subi	r26, 0xD0	; 208
 5ec:	aa 33       	cpi	r26, 0x3A	; 58
 5ee:	08 f0       	brcs	.+2      	; 0x5f2 <__utoa_common+0x20>
 5f0:	a9 5d       	subi	r26, 0xD9	; 217
 5f2:	a1 93       	st	Z+, r26
 5f4:	00 97       	sbiw	r24, 0x00	; 0
 5f6:	79 f7       	brne	.-34     	; 0x5d6 <__utoa_common+0x4>
 5f8:	b1 11       	cpse	r27, r1
 5fa:	b1 93       	st	Z+, r27
 5fc:	11 92       	st	Z+, r1
 5fe:	cb 01       	movw	r24, r22
 600:	00 c0       	rjmp	.+0      	; 0x602 <strrev>

00000602 <strrev>:
 602:	dc 01       	movw	r26, r24
 604:	fc 01       	movw	r30, r24
 606:	67 2f       	mov	r22, r23
 608:	71 91       	ld	r23, Z+
 60a:	77 23       	and	r23, r23
 60c:	e1 f7       	brne	.-8      	; 0x606 <strrev+0x4>
 60e:	32 97       	sbiw	r30, 0x02	; 2
 610:	04 c0       	rjmp	.+8      	; 0x61a <strrev+0x18>
 612:	7c 91       	ld	r23, X
 614:	6d 93       	st	X+, r22
 616:	70 83       	st	Z, r23
 618:	62 91       	ld	r22, -Z
 61a:	ae 17       	cp	r26, r30
 61c:	bf 07       	cpc	r27, r31
 61e:	c8 f3       	brcs	.-14     	; 0x612 <strrev+0x10>
 620:	08 95       	ret

00000622 <_exit>:
 622:	f8 94       	cli

00000624 <__stop_program>:
 624:	ff cf       	rjmp	.-2      	; 0x624 <__stop_program>
